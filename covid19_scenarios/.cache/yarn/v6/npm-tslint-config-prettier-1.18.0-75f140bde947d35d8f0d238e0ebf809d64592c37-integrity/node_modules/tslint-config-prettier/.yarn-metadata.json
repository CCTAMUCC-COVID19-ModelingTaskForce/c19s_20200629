{
  "manifest": {
    "name": "tslint-config-prettier",
    "version": "1.18.0",
    "description": "Do you wanna use tslint and prettier without conflicts? tslint-config-prettier disables all conflicting rules that may cause such problems. Prettier takes care of formatting and tslint the rest.",
    "keywords": [
      "lint",
      "tslint",
      "ts-lint",
      "prettier",
      "config",
      "typescript"
    ],
    "files": [
      "bin/check.js",
      "lib/index.json",
      "lib/checker.js"
    ],
    "main": "lib/index.json",
    "bin": {
      "tslint-config-prettier-check": "bin/check.js"
    },
    "author": {
      "name": "Alex Jover Morales",
      "email": "alexjovermorales@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/prettier/tslint-config-prettier.git"
    },
    "license": "MIT",
    "engines": {
      "node": ">=4.0.0"
    },
    "scripts": {
      "prepublish": "yarn build-tools && yarn generate-config && yarn build-checker",
      "lint": "tslint 'tools/**/*.ts'",
      "test": "yarn clean && jest --no-cache",
      "clean": "rimraf ./node_modules/vrsource-tslint-rules/rules/*.ts",
      "build-tools": "tsc",
      "build-checker": "tsc -p ./tsconfig.checker.json",
      "generate-config": "node ./build/generate.js",
      "semantic-release": "semantic-release",
      "commit": "git-cz",
      "prepush": "yarn test && yarn lint",
      "commitmsg": "validate-commit-msg"
    },
    "config": {
      "commitizen": {
        "path": "node_modules/cz-conventional-changelog"
      },
      "validate-commit-msg": {
        "types": "conventional-commit-types",
        "helpMessage": "Use \"npm run commit\" instead, we use conventional-changelog format :) (https://github.com/commitizen/cz-cli)"
      }
    },
    "jest": {
      "testEnvironment": "node",
      "moduleFileExtensions": [
        "ts",
        "tsx",
        "js",
        "json"
      ],
      "testMatch": [
        "**/src/**/test.{ts,tsx}",
        "**/tools/*.test.ts"
      ],
      "transform": {
        "/src/.+\\.tsx?$": "<rootDir>/build/transform.js",
        "/tools/.+\\.ts$": "ts-jest/preprocessor"
      },
      "coverageThreshold": {
        "global": {
          "branches": 95,
          "functions": 95,
          "lines": 95,
          "statements": 95
        }
      }
    },
    "devDependencies": {
      "@types/jest": "^23.1.2",
      "@types/make-dir": "^1.0.1",
      "@types/node": "^10.0.3",
      "@types/prettier": "^1.10.0",
      "codelyzer": "4.5.0",
      "commitizen": "^3.0.0",
      "cz-conventional-changelog": "^2.0.0",
      "husky": "^1.0.0",
      "jest": "^23.2.0",
      "lodash": "^4.17.4",
      "make-dir": "^1.0.0",
      "prettier": "1.16.4",
      "rimraf": "^2.6.1",
      "semantic-release": "^15.0.0",
      "ts-jest": "^23.10.0",
      "tslint": "5.12.1",
      "tslint-consistent-codestyle": "1.15.0",
      "tslint-divid": "1.3.0",
      "tslint-eslint-rules": "5.4.0",
      "tslint-immutable": "5.1.2",
      "tslint-microsoft-contrib": "6.0.0",
      "tslint-misc-rules": "3.5.1",
      "tslint-react": "3.6.0",
      "typescript": "3.3.1",
      "validate-commit-msg": "^2.10.1",
      "vrsource-tslint-rules": "6.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-tslint-config-prettier-1.18.0-75f140bde947d35d8f0d238e0ebf809d64592c37-integrity/node_modules/tslint-config-prettier/package.json",
    "readmeFilename": "README.md",
    "readme": "# tslint-config-prettier\n\n[![npm](https://img.shields.io/npm/v/tslint-config-prettier.svg)](https://www.npmjs.com/package/tslint-config-prettier)\n[![Travis](https://img.shields.io/travis/alexjoverm/tslint-config-prettier.svg)](https://travis-ci.org/prettier/tslint-config-prettier)\n[![downloads](https://img.shields.io/npm/dm/tslint-config-prettier.svg)](https://www.npmjs.com/package/tslint-config-prettier)\n[![dependencies Status](https://img.shields.io/david/prettier/tslint-config-prettier.svg)](https://david-dm.org/prettier/tslint-config-prettier)\n[![devDependencies Status](https://img.shields.io/david/dev/prettier/tslint-config-prettier.svg)](https://david-dm.org/prettier/tslint-config-prettier?type=dev)\n\n<h3> :cop: TSLint  +  :nail_care: Prettier = :heart_eyes: </h3>\n\nDo you want to use [TSLint](https://palantir.github.io/tslint/) and [Prettier](https://github.com/prettier/prettier) without conflicts? `tslint-config-prettier` disables all [conflicting rules](https://unpkg.com/tslint-config-prettier) that may cause such problems. Prettier takes care of the formatting whereas tslint takes care of all the other things.\n\n> Check how it works in **[this tutorial](https://alexjoverm.github.io/2017/06/12/Use-Prettier-with-TSLint-and-be-happy/)**.\n\n### Get started\n\n```bash\nyarn add --dev tslint-config-prettier\n# or\nnpm install --save-dev tslint-config-prettier\n```\n\nMake sure you've already set up [TSLint](https://palantir.github.io/tslint/) and [Prettier](https://github.com/prettier/prettier).\n\nThen, extend your `tslint.json`, and make sure `tslint-config-prettier` is **at the end**:\n\n```json\n{\n  \"extends\": [\n    \"tslint:latest\",\n    \"tslint-config-prettier\"\n  ]\n}\n```\n\n### More configuration\n\n`tslint-config-prettier` also turns off formatting rules from the following rulesets, so you can use them safely.\n\n- [codelyzer](https://github.com/mgechev/codelyzer)\n- [tslint](https://github.com/palantir/tslint)\n- [tslint-consistent-codestyle](https://github.com/ajafff/tslint-consistent-codestyle)\n- [tslint-divid](https://github.com/jonaskello/tslint-divid)\n- [tslint-eslint-rules](https://github.com/buzinas/tslint-eslint-rules)\n- [tslint-immutable](https://github.com/jonaskello/tslint-immutable)\n- [tslint-microsoft-contrib](https://github.com/Microsoft/tslint-microsoft-contrib)\n- [tslint-misc-rules](https://github.com/jwbay/tslint-misc-rules)\n- [tslint-react](https://github.com/palantir/tslint-react)\n- [vrsource-tslint-rules](https://github.com/vrsource/vrsource-tslint-rules)\n\n```json\n{\n  \"extends\": [\n    \"tslint:latest\",\n    \"tslint-react\",\n    \"tslint-eslint-rules\",\n    \"tslint-config-prettier\"\n  ]\n}\n```\n\n### CLI helper tool\n\n`tslint-config-prettier` is shipped with a little CLI tool to help you check if your configuration contains any rules that are in conflict with Prettier. (require `tslint` installed)\n\nIn order to execute the CLI tool, first add a script for it to `package.json`:\n\n```json\n{\n  \"scripts\": {\n    \"tslint-check\": \"tslint-config-prettier-check ./tslint.json\"\n  }\n}\n```\n\nThen run `yarn tslint-check` or `npm run tslint-check`.\n\n### Tutorials\n\n- [Using TSlint with Prettier](https://alexjoverm.github.io/2017/06/12/Use-Prettier-with-TSLint-and-be-happy/)\n- [Use Prettier with TSLint without conflicts (video)](https://egghead.io/lessons/typescript-use-prettier-with-tslint-without-conflicts-c39670eb/)\n\n### Contributing\n\nPlease read [CONTRIBUTING.md](https://github.com/prettier/tslint-config-prettier/blob/master/CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n### Related\n\n- [tslint-plugin-prettier](https://github.com/ikatyang/tslint-plugin-prettier) - Runs Prettier as a TSLint rule and reports differences as individual TSLint issues.\n\n### Credits\n\nMade with :heart: by [@alexjoverm](https://twitter.com/alexjoverm) and all its [contributors](https://github.com/prettier/tslint-config-prettier/graphs/contributors)\n",
    "licenseText": "Copyright 2017 Alex Jover Morales <alexjovermorales@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tslint-config-prettier/-/tslint-config-prettier-1.18.0.tgz#75f140bde947d35d8f0d238e0ebf809d64592c37",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tslint-config-prettier/-/tslint-config-prettier-1.18.0.tgz",
    "hash": "75f140bde947d35d8f0d238e0ebf809d64592c37",
    "integrity": "sha512-xPw9PgNPLG3iKRxmK7DWr+Ea/SzrvfHtjFt5LBl61gk2UBG/DB9kCXRjv+xyIU1rUtnayLeMUVJBcMX8Z17nDg==",
    "registry": "npm",
    "packageName": "tslint-config-prettier",
    "cacheIntegrity": "sha512-xPw9PgNPLG3iKRxmK7DWr+Ea/SzrvfHtjFt5LBl61gk2UBG/DB9kCXRjv+xyIU1rUtnayLeMUVJBcMX8Z17nDg== sha1-dfFAvelH012PDSOODr+AnWRZLDc="
  },
  "registry": "npm",
  "hash": "75f140bde947d35d8f0d238e0ebf809d64592c37"
}