{
  "manifest": {
    "name": "jest-runner-eslint",
    "version": "0.9.0",
    "main": "build/runner",
    "author": {
      "name": "Rogelio Guzman",
      "email": "rogelioguzmanh@gmail.com"
    },
    "description": "An experimental ESLint runner for Jest",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/jest-community/jest-runner-eslint.git"
    },
    "homepage": "https://github.com/jest-community/jest-runner-eslint",
    "files": [
      "build/",
      "watch-fix.js"
    ],
    "scripts": {
      "test": "jest",
      "lint": "eslint . --config ./.eslintrc.json --no-eslintrc",
      "watch": "babel src -w --ignore **/*.test.js,integration -d build",
      "prebuild": "rimraf build/",
      "build": "babel src --ignore **/*.test.js,integration -d build",
      "prepare": "yarn build",
      "format": "prettier --write \"**/*.js\""
    },
    "dependencies": {
      "chalk": "^2.4.1",
      "cosmiconfig": "^5.0.0",
      "create-jest-runner": "^0.5.3",
      "eslint": "^4.0.0 || ^5.0.0 || ^6.0.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.1.0",
      "@babel/core": "^7.1.0",
      "@babel/preset-env": "~7.7.0",
      "babel-jest": "^25.1.0",
      "eslint-config-airbnb-base": "^13.1.0",
      "eslint-config-prettier": "^4.3.0",
      "eslint-plugin-import": "^2.14.0",
      "eslint-plugin-jest": "^22.6.4",
      "eslint-plugin-prettier": "^3.1.0",
      "execa": "^1.0.0",
      "jest": "^21.0.0 || ^22.0.0 || ^23.0.0 || ^24.0.0 || ^25.1.0 || ^26.0.0",
      "jest-watch-select-projects": "^0.1.1",
      "jest-watch-typeahead": "^0.3.1",
      "prettier": "^1.14.3",
      "rimraf": "^2.6.2"
    },
    "peerDependencies": {
      "eslint": "^4.0.0 || ^5.0.0 || ^6.0.0",
      "jest": "^21.0.0 || ^22.0.0 || ^23.0.0 || ^24.0.0 || ^25.1.0 || ^26.0.0"
    },
    "prettier": {
      "proseWrap": "never",
      "singleQuote": true,
      "trailingComma": "all"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-jest-runner-eslint-0.9.0-d10196ed83b989a6ad3b1e729b48f62bce3f2626-integrity/node_modules/jest-runner-eslint/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Build Status](https://travis-ci.org/jest-community/jest-runner-eslint.svg?branch=master)](https://travis-ci.org/jest-community/jest-runner-eslint) [![npm version](https://badge.fury.io/js/jest-runner-eslint.svg)](https://badge.fury.io/js/jest-runner-eslint)\n\n<div align=\"center\">\n  <!-- replace with accurate logo e.g from https://worldvectorlogo.com/ -->\n  <img width=\"150\" height=\"150\" src=\"https://cdn.worldvectorlogo.com/logos/eslint.svg\">\n  <a href=\"https://facebook.github.io/jest/\">\n    <img width=\"150\" height=\"150\" vspace=\"\" hspace=\"25\" src=\"https://cdn.worldvectorlogo.com/logos/jest-0.svg\">\n  </a>\n  <h1>jest-runner-eslint</h1>\n  <p>ESLint runner for Jest</p>\n</div>\n\n<div align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/574806/30197438-9681385c-941c-11e7-80a8-2b11f15bd412.gif\">\n</div>\n\n## Usage\n\n### Install\n\nInstall `jest`_(it needs Jest 21+)_ and `jest-runner-eslint`\n\n```bash\nyarn add --dev jest jest-runner-eslint\n\n# or with NPM\n\nnpm install --save-dev jest jest-runner-eslint\n```\n\n### Add it to your Jest config\n\n#### Standalone\n\nIn your `package.json`\n\n```json\n{\n  \"jest\": {\n    \"runner\": \"jest-runner-eslint\",\n    \"displayName\": \"lint\",\n    \"testMatch\": [\"<rootDir>/src/**/*.js\"]\n  }\n}\n```\n\nOr in `jest.config.js`\n\n```js\nmodule.exports = {\n  runner: 'jest-runner-eslint',\n  displayName: 'lint',\n  testMatch: ['<rootDir>/src/**/*.js'],\n};\n```\n\nPlease update `testMatch` to match your project folder structure\n\n#### Alongside other runners\n\nIt is recommended to use the [`projects`](https://facebook.github.io/jest/docs/en/configuration.html#projects-array-string-projectconfig) configuration option to run multiple Jest runners simultaneously.\n\nIf you are using Jest <22.0.5, you can use multiple Jest configuration files and supply the paths to those files in the `projects` option. For example:\n\n```js\n// jest-test.config.js\nmodule.exports = {\n  // your Jest test options\n  displayName: 'test',\n};\n\n// jest-eslint.config.js\nmodule.exports = {\n  // your jest-runner-eslint options\n  runner: 'jest-runner-eslint',\n  displayName: 'lint',\n  testMatch: ['<rootDir>/src/**/*.js'],\n};\n```\n\nIn your `package.json`:\n\n```json\n{\n  \"jest\": {\n    \"projects\": [\n      \"<rootDir>/jest-test.config.js\",\n      \"<rootDir>/jest-eslint.config.js\"\n    ]\n  }\n}\n```\n\nOr in `jest.config.js`:\n\n```js\nmodule.exports = {\n  projects: [\n    '<rootDir>/jest-test.config.js',\n    '<rootDir>/jest-eslint.config.js',\n  ],\n};\n```\n\nIf you are using Jest >=22.0.5, you can supply an array of project configuration objects instead. In your `package.json`:\n\n```json\n{\n  \"jest\": {\n    \"projects\": [\n      {\n        \"displayName\": \"test\"\n      },\n      {\n        \"runner\": \"jest-runner-eslint\",\n        \"displayName\": \"lint\",\n        \"testMatch\": [\"<rootDir>/src/**/*.js\"]\n      }\n    ]\n  }\n}\n```\n\nOr in `jest.config.js`:\n\n```js\nmodule.exports = {\n  projects: [\n    {\n      displayName: 'test',\n    },\n    {\n      runner: 'jest-runner-eslint',\n      displayName: 'lint',\n      testMatch: ['<rootDir>/src/**/*.js'],\n    },\n  ],\n};\n```\n\n### Run Jest\n\n```bash\nyarn jest\n```\n\n## Toggle `--fix` in watch mode\n\n`jest-eslint-runner` comes with a watch plugin that allows you to toggle the `--fix` value while in watch mode without having to update your configuration.\n\n![fix](https://user-images.githubusercontent.com/574806/46181271-93205080-c279-11e8-8d73-b4c5e11086c4.gif)\n\nTo use this watch plugin simply add this to your Jest configuration.\n\n```js\n{\n  watchPlugins: ['jest-runner-eslint/watch-fix'],\n}\n```\n\nAfter this run Jest in watch mode and you will see the following line in your watch usage menu\n\n```\n â€º Press F to override ESLint --fix.\n```\n\n## Options\n\nThis project uses [cosmiconfig](https://github.com/davidtheclark/cosmiconfig), so you can provide config via:\n\n- a `jest-runner-eslint` property in your `package.json`\n- a `jest-runner-eslint.config.js` JS file\n- a `.jest-runner-eslintrc` JSON file\n\nIn `package.json`\n\n```json\n{\n  \"jest-runner-eslint\": {\n    \"cliOptions\": {\n      // Options here\n    }\n  }\n}\n```\n\nor in `jest-runner-eslint.config.js`\n\n```js\nmodule.exports = {\n  cliOptions: {\n    // Options here\n  },\n};\n```\n\n### cliOptions\n\njest-runner-eslint maps a lot of ESLint CLI arguments to config options. For example `--fix` is `cliOptions.fix`\n\n| option                        | default        | example                                                                                       |\n| ----------------------------- | -------------- | --------------------------------------------------------------------------------------------- |\n| cache                         | `false`        | `\"cache\": true`                                                                               |\n| cacheLocation                 | `.eslintcache` | `\"cacheLocation\": \"/path/to/cache\"`                                                           |\n| config                        | `null`         | `\"config\": \"/path/to/config\"`                                                                 |\n| env                           | `null`         | `\"env\": \"mocha\"` or `\"env\": [\"mocha\", \"other\"]`                                               |\n| ext                           | `[\".js\"]`      | `\"ext\": \".jsx\"` or `\"ext\": [\".jsx\", \".ts\"]`                                                   |\n| fix                           | `false`        | `\"fix\": true`                                                                                 |\n| fixDryRun                     | `false`        | `\"fixDryRun\": true`                                                                           |\n| format                        | `null`         | `\"format\": \"codeframe\"`                                                                       |\n| global                        | `[]`           | `\"global\": \"it\"` or `\"global\": [\"it\", \"describe\"]`                                            |\n| ignorePath                    | `null`         | `\"ignorePath\": \"/path/to/ignore\"`                                                             |\n| ignorePattern                 | `[]`           | `\"ignorePattern\": [\"/path/to/ignore/*\"]`                                                      |\n| maxWarnings                   | `-1`           | `\"maxWarnings\": 0`                                                                            |\n| noEslintrc                    | `false`        | `\"noEslintrc\": true`                                                                          |\n| noIgnore                      | `false`        | `\"noIgnore\": true`                                                                            |\n| noInlineConfig                | `false`        | `\"noInlineConfig\": true`                                                                      |\n| parser                        | `espree`       | `\"parser\": \"flow\"`                                                                            |\n| parserOptions                 | `{}`           | `\"parserOptions\": { \"myOption\": true }`                                                       |\n| plugin                        | `[]`           | `\"plugin\": \"prettier\"` or `\"plugin\": [\"pettier\", \"other\"]`                                    |\n| quiet                         | `false`        | `\"quiet\": true`                                                                               |\n| resolvePluginsRelativeTo      | `undefined`    | `\"resolvePluginsRelativeTo\": \"./eslint-config\"`                                               |\n| reportUnusedDisableDirectives | `false`        | `\"reportUnusedDisableDirectives\": true`                                                       |\n| rules                         | `{}`           | `\"rules\": {\"quotes\": [2, \"double\"]}` or `\"rules\": {\"quotes\": [2, \"double\"], \"no-console\": 2}` |\n| rulesdir                      | `[]`           | `\"rulesdir\": \"/path/to/rules/dir\"` or `\"env\": [\"/path/to/rules/dir\", \"/path/to/other\"]`       |\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017  <rogelioguzmanh@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/jest-runner-eslint/-/jest-runner-eslint-0.9.0.tgz#d10196ed83b989a6ad3b1e729b48f62bce3f2626",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/jest-runner-eslint/-/jest-runner-eslint-0.9.0.tgz",
    "hash": "d10196ed83b989a6ad3b1e729b48f62bce3f2626",
    "integrity": "sha512-p5NL0OGF8BvPNztVIpjaUwco506ORbwnoVQ3YHXXsQl8hM6zQTzSiyarL0PqPjq44ndbFFC2ifOoDTpzyqqe0g==",
    "registry": "npm",
    "packageName": "jest-runner-eslint",
    "cacheIntegrity": "sha512-p5NL0OGF8BvPNztVIpjaUwco506ORbwnoVQ3YHXXsQl8hM6zQTzSiyarL0PqPjq44ndbFFC2ifOoDTpzyqqe0g== sha1-0QGW7YO5iaatOx5ym0j2K84/JiY="
  },
  "registry": "npm",
  "hash": "d10196ed83b989a6ad3b1e729b48f62bce3f2626"
}