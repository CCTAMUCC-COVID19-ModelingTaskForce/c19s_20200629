{
  "manifest": {
    "name": "react-loader-spinner",
    "version": "3.1.14",
    "description": " react-spinner-loader provides simple React.js spinner component which can be implemented for async wait operation before data load to the view.",
    "unpkg": "dist/index.js",
    "jsdelivr": "dist/index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/mhnpd/react-loader-spinner"
    },
    "author": {
      "name": "Mohan Upadhyay",
      "url": "https://thecodersblog.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mhnpd/react-loader-spinner"
    },
    "homepage": "https://mhnpd.github.io/react-loader-spinner/",
    "keywords": [
      "react-component",
      "loader",
      "spinner",
      "react"
    ],
    "company": {
      "name": "The Coders Blog",
      "url": "https://thecodersblog.com",
      "feed": "https://thecodersblog.com/feed"
    },
    "options": {
      "mocha": "--require scripts/mocha_runner src/**/__tests__/**/*.js"
    },
    "scripts": {
      "prepublish": "babel --plugins transform-es2015-modules-umd src --ignore __tests__ --out-dir ./dist --copy-files",
      "build": "babel --plugins transform-es2015-modules-umd src --ignore __tests__ --out-dir ./dist --copy-files",
      "lint": "eslint ./src",
      "lintfix": "eslint ./src --fix",
      "testonly": "mocha $npm_package_options_mocha",
      "test": "npm run lint && npm run testonly",
      "test-watch": "npm run testonly -- --watch --watch-extensions js",
      "storybook": "start-storybook -p 6006",
      "build-storybook": "build-storybook --output-dir ./docs",
      "deploy": "gh-pages -d ./example/build"
    },
    "devDependencies": {
      "@storybook/addon-actions": "^5.1.10",
      "@storybook/addon-centered": "^5.1.10",
      "@storybook/addon-links": "^5.1.10",
      "@storybook/addons": "^5.1.10",
      "@storybook/react": "^5.1.10",
      "babel-cli": "^6.6.4",
      "babel-core": "^6.7.4",
      "babel-eslint": "^10.0.2",
      "babel-loader": "^7.1.5",
      "babel-plugin-transform-es2015-modules-umd": "^6.6.5",
      "babel-polyfill": "^6.7.4",
      "babel-preset-env": "^1.7.0",
      "babel-preset-react": "^6.5.0",
      "babel-preset-stage-2": "^6.5.0",
      "chai": "^4.1.2",
      "enzyme": "^3.3.0",
      "eslint": "*",
      "eslint-config-airbnb": "^17.0.0",
      "eslint-config-prettier": "*",
      "eslint-plugin-babel": "^5.3.0",
      "eslint-plugin-import": "^2.13.0",
      "eslint-plugin-jsx-a11y": "^6.1.1",
      "eslint-plugin-prettier": "*",
      "eslint-plugin-react": "^7.10.0",
      "gh-pages": "^2.2.0",
      "mocha": "^6.2.0",
      "nodemon": "^1.17.2",
      "prettier": "*",
      "redux-logger": "*",
      "sinon": "^7.3.2"
    },
    "peerDependencies": {
      "prop-types": "^15.7.2",
      "react": "^16.8.6",
      "react-dom": "^16.8.6"
    },
    "dependencies": {
      "babel-runtime": "^6.26.0",
      "prop-types": "^15.7.2"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-react-loader-spinner-3.1.14-2a201f07379c492766175609903c0f2ced57c720-integrity/node_modules/react-loader-spinner/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/33191954/78983001-0a0ef880-7b43-11ea-904f-42a572d93c53.png\" alt=\"title\"/>\n</p>\n\n\n ```react-spinner-loader``` provides simple React SVG spinner component which can be implemented for async await operation before data loads to the view.\n\n### Installation\n\n##### Using NPM:\n#\n```sh\n$ npm install react-loader-spinner --save\n```\n##### Using yarn\n#\n```sh\n$ yarn add react-loader-spinner\n```\n\n##### Import required css\n#\n```js\n import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n```\n\n#  Demo\n[View in page]\n\n\n### Usage\n```js\n import Loader from 'react-loader-spinner'\n export default class App extends React.Component {\n  //other logic\n    render() {\n\t return(\n\t  <Loader\n\t     type=\"Puff\"\n\t     color=\"#00BFFF\"\n\t     height={100}\n\t     width={100}\n\t     timeout={3000} //3 secs\n\n\t  />\n\t );\n    }\n }\n```\n\n### If webpack throws issue with css. (For older version of this package)\n\nChange webpack config as:\n```  test: /\\.scss$/ to test: /\\.s?css$/ ```\n<br/><br/>\n<small>Newer version just import css file from node modules to app.js<small>\n\n\n### Types of Spinner\nreact-loader-spinner component has the following types of spinners.\n\n| Spinner Type | Implementation |\n| ------ | ------ |\n| Audio|``` <Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} />``` |\n| Ball-Triangle | ``` <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} /> ```|\n| Bars | ```<Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />``` |\n| Circles | ```<Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80}/>``` |\n| Grid|```<Loader type=\"Grid\" color=\"#00BFFF\" height={80} width={80} />``` |\n|Hearts|```<Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />```|\n|Oval|```<Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />```|\n|Puff|```<Loader type=\"Puff\" color=\"#00BFFF\" height={80} width={80} />```|\n|Rings|```<Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />```|\n|TailSpin|```<Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />```|\n|ThreeDots|```<Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />```|\n\n> There are more. View [demo] to see the full list.\n\n### PropTypes Available\nreact-loader-spinner component accepts the following props. Instructions on how to use them are below.\n\n\n| name | types | default | Detail |\n| ------ | ------ |------|------|\n| visible | String or boolean  | false | Show/ Hide the loader as required. |\n| type | String  | \"Audio\" | Type of spinner you want to display. View the type in Types of Spinner section. |\n| height | Number  | 80 |  Height props define the height of the svg spinner. Default height is 80px.|\n| width | Number  | 80 |  Width props define the width of the spinner.  |\n| color | String  | \"Blue\" |  color props is add color to the spinner |\n| secondaryColor | String  | \"Grey\" |  secondaryColor props  for now is available on Plane and MutatingDots loaders  |\n| timeout | Number  | 0 |  Duration in miliseconds after which spinner is disabled |\n| radius | Number  | value varies | Set radius if the loader has a circle element in it |\n\n### Here are the list of the task for which we want PR:\n* Optimize css implementation\n* Add support for Typescript.\n* Optimization for multiple color support.\n\n\nLicense\n----\n\nMIT\n\n\t[svg-loader]: <https://github.com/SamHerbert/SVG-Loaders>\n\t[here]: <http://samherbert.net/svg-loaders>\n\t[View in page]: https://mhnpd.github.io/react-loader-spinner/\n\t[storybook]: https://mhnpd.github.io/react-loader-spinner/\n\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Mohan Pd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-loader-spinner/-/react-loader-spinner-3.1.14.tgz#2a201f07379c492766175609903c0f2ced57c720",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-loader-spinner/-/react-loader-spinner-3.1.14.tgz",
    "hash": "2a201f07379c492766175609903c0f2ced57c720",
    "integrity": "sha512-7V+upnW+RVA/O94LIB/EQLK2uaz/TpZBHG5uNXlOXgvxvALxlxVYeEDmus5Oex2C58fiwrsRvSyu/4VRmLbZ9Q==",
    "registry": "npm",
    "packageName": "react-loader-spinner",
    "cacheIntegrity": "sha512-7V+upnW+RVA/O94LIB/EQLK2uaz/TpZBHG5uNXlOXgvxvALxlxVYeEDmus5Oex2C58fiwrsRvSyu/4VRmLbZ9Q== sha1-KiAfBzecSSdmF1YJkDwPLO1XxyA="
  },
  "registry": "npm",
  "hash": "2a201f07379c492766175609903c0f2ced57c720"
}