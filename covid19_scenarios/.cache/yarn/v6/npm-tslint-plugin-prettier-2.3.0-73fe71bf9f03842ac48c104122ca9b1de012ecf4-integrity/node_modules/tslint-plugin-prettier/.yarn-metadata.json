{
  "manifest": {
    "name": "tslint-plugin-prettier",
    "version": "2.3.0",
    "description": "Runs Prettier as a TSLint rule and reports differences as individual TSLint issues.",
    "keywords": [
      "prettier",
      "tslint",
      "tslint-plugin",
      "tslint-rules"
    ],
    "main": "rules/index.js",
    "types": "rules/index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://github.com/prettier/tslint-plugin-prettier"
    },
    "homepage": "https://github.com/prettier/tslint-plugin-prettier#readme",
    "author": {
      "name": "Ika",
      "email": "ikatyang@gmail.com",
      "url": "https://github.com/ikatyang"
    },
    "license": "MIT",
    "scripts": {
      "prepublish": "yarn run build --inlineSourceMap false",
      "lint": "tslint -p .",
      "test": "nyc tslint --test ./tests/*/*",
      "prebuild": "rm -rf ./rules",
      "build": "tsc -p ./tsconfig.build.json",
      "release": "standard-version"
    },
    "dependencies": {
      "eslint-plugin-prettier": "^2.2.0",
      "lines-and-columns": "^1.1.6",
      "tslib": "^1.7.1"
    },
    "devDependencies": {
      "@types/eslint-plugin-prettier": "2.2.0",
      "@types/node": "4.9.3",
      "@types/prettier": "1.19.1",
      "codecov": "3.6.5",
      "nyc": "11.9.0",
      "prettier": "2.0.0",
      "standard-version": "4.4.0",
      "tslint": "6.1.0",
      "tslint-config-prettier": "1.18.0",
      "tslint-plugin-prettier": "2.0.1",
      "typescript": "3.8.3"
    },
    "peerDependencies": {
      "prettier": "^1.9.0 || ^2.0.0",
      "tslint": "^5.0.0 || ^6.0.0"
    },
    "resolutions": {
      "codecov/**/har-validator": "5.1.0"
    },
    "engines": {
      "node": ">= 4"
    },
    "files": [
      "/rules/**/*"
    ],
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-tslint-plugin-prettier-2.3.0-73fe71bf9f03842ac48c104122ca9b1de012ecf4-integrity/node_modules/tslint-plugin-prettier/package.json",
    "readmeFilename": "README.md",
    "readme": "# tslint-plugin-prettier\n\n[![npm](https://img.shields.io/npm/v/tslint-plugin-prettier.svg)](https://www.npmjs.com/package/tslint-plugin-prettier)\n[![build](https://img.shields.io/travis/prettier/tslint-plugin-prettier/master.svg)](https://travis-ci.org/prettier/tslint-plugin-prettier/builds)\n[![coverage](https://img.shields.io/codecov/c/github/prettier/tslint-plugin-prettier/master.svg)](https://codecov.io/gh/prettier/tslint-plugin-prettier)\n\nRuns Prettier as a TSLint rule and reports differences as individual TSLint issues.\n\n[Changelog](https://github.com/prettier/tslint-plugin-prettier/blob/master/CHANGELOG.md)\n\n## Sample\n\n```ts\na();;;\n    ~~\n;;;\n~~~ [Delete `;;⏎;;;`]\n```\n\n```ts\nvar foo = ''\n          ~~ [Replace `''` with `\"\";⏎`]\n```\n\n```ts\nvar foo= \"\";\n       ~ [Insert `·`]\n```\n\n## Install\n\n```sh\n# using npm\nnpm install --save-dev tslint-plugin-prettier prettier\n\n# using yarn\nyarn add --dev tslint-plugin-prettier prettier\n```\n\n(require `prettier@^1.9.0`)\n\n## Usage\n\n(tslint.json)\n\nfor `tslint@^5.2.0`\n\n```json\n{\n  \"rulesDirectory\": [\"tslint-plugin-prettier\"],\n  \"rules\": {\n    \"prettier\": true\n  }\n}\n```\n\nfor `tslint@^5.0.0`\n\n```json\n{\n  \"extends\": [\"tslint-plugin-prettier\"],\n  \"rules\": {\n    \"prettier\": true\n  }\n}\n```\n\n**NOTE**: To use this plugin, it'd better to also use [tslint-config-prettier](https://github.com/prettier/tslint-config-prettier) to disable all prettier-related rules, so as to avoid conflicts between existed rules.\n\n## Options\n\n- If there is no option provided, it'll try to load [config file](https://prettier.io/docs/en/configuration.html) and/or `.editorconfig` if possible, uses Prettier's default option if not found.\n\n  ```json\n  {\n    \"extends\": [\"tslint-plugin-prettier\"],\n    \"rules\": {\n      \"prettier\": true\n    }\n  }\n  ```\n\n  If you don't want to load `.editorconfig`, disable it in the third argument.\n\n  ```json\n  {\n    \"extends\": [\"tslint-plugin-prettier\"],\n    \"rules\": {\n      \"prettier\": [true, null, { \"editorconfig\": false }]\n    }\n  }\n  ```\n\n- If you'd like to specify which config file to use, just put its path (relative to `process.cwd()`) in the second argument, the following example shows how to load the config file from `<cwd>/configs/.prettierrc`:\n\n  ```json\n  {\n    \"extends\": [\"tslint-plugin-prettier\"],\n    \"rules\": {\n      \"prettier\": [true, \"configs/.prettierrc\"]\n    }\n  }\n  ```\n\n- If you'd like to specify options manually, just put [Prettier Options](https://prettier.io/docs/en/options.html) in the second argument, for example:\n\n  ```json\n  {\n    \"extends\": [\"tslint-plugin-prettier\"],\n    \"rules\": {\n      \"prettier\": [true, { \"singleQuote\": true }]\n    }\n  }\n  ```\n\n## Ignoring files\n\n- It will respect your .prettierignore file in your project root ( process.cwd() ) but if you would like to use a different file you can provide it in the third argument, for example:\n\n  ```json\n  {\n    \"extends\": [\"tslint-plugin-prettier\"],\n    \"rules\": {\n      \"prettier\": [true, null, { \"ignorePath\": \"otherDirectory/.prettierignore\" }]\n    }\n  }\n\n  ```\n\n## Development\n\n```sh\n# lint\nyarn run lint\n\n# build\nyarn run build\n\n# test\nyarn run test\n```\n\n## Related\n\n- [eslint-plugin-prettier](https://github.com/prettier/eslint-plugin-prettier)\n- [tslint-config-prettier](https://github.com/prettier/tslint-config-prettier)\n- [prettier-tslint](https://github.com/azz/prettier-tslint)\n\n## License\n\nMIT © [Ika](https://github.com/ikatyang)\n",
    "licenseText": "MIT License\n\nCopyright (c) Ika <ikatyang@gmail.com> (https://github.com/ikatyang)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tslint-plugin-prettier/-/tslint-plugin-prettier-2.3.0.tgz#73fe71bf9f03842ac48c104122ca9b1de012ecf4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tslint-plugin-prettier/-/tslint-plugin-prettier-2.3.0.tgz",
    "hash": "73fe71bf9f03842ac48c104122ca9b1de012ecf4",
    "integrity": "sha512-F9e4K03yc9xuvv+A0v1EmjcnDwpz8SpCD8HzqSDe0eyg34cBinwn9JjmnnRrNAs4HdleRQj7qijp+P/JTxt4vA==",
    "registry": "npm",
    "packageName": "tslint-plugin-prettier",
    "cacheIntegrity": "sha512-F9e4K03yc9xuvv+A0v1EmjcnDwpz8SpCD8HzqSDe0eyg34cBinwn9JjmnnRrNAs4HdleRQj7qijp+P/JTxt4vA== sha1-c/5xv58DhCrEjBBBIsqbHeAS7PQ="
  },
  "registry": "npm",
  "hash": "73fe71bf9f03842ac48c104122ca9b1de012ecf4"
}