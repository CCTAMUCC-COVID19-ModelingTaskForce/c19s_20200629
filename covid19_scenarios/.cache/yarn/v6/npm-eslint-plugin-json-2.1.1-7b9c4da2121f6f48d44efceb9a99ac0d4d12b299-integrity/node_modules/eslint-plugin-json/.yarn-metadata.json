{
  "manifest": {
    "name": "eslint-plugin-json",
    "version": "2.1.1",
    "description": "eslint plugin for JSON files",
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "json",
      "eslint-plugin-json"
    ],
    "author": {
      "name": "Azeem Bande-Ali",
      "email": "a.bandeali@gmail.com"
    },
    "contributors": [
      {
        "name": "Adriean Khisbe",
        "email": "adriean.khisbe@live.fr",
        "url": "https://github.com/AdrieanKhisbe/"
      }
    ],
    "main": "src/index.js",
    "scripts": {
      "test": "nyc mocha",
      "lint": "eslint src test"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/azeemba/eslint-plugin-json"
    },
    "bugs": {
      "url": "https://github.com/azeemba/eslint-plugin-json/issues"
    },
    "dependencies": {
      "lodash": "^4.17.15",
      "vscode-json-languageservice": "^3.5.1"
    },
    "devDependencies": {
      "chai": "^4.2.0",
      "codecov": "^3.6.5",
      "eslint": "^6.8.0",
      "eslint-config-prettier": "^6.10.0",
      "eslint-plugin-prettier": "^3.1.2",
      "eslint-plugin-self": "^1.2.0",
      "mocha": "^7.1.0",
      "nyc": "^15.0.0",
      "prettier": "^1.19.1"
    },
    "engines": {
      "node": ">=8.10.0"
    },
    "url": "https://github.com/azeemba/eslint-plugin-json",
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-eslint-plugin-json-2.1.1-7b9c4da2121f6f48d44efceb9a99ac0d4d12b299-integrity/node_modules/eslint-plugin-json/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-plugin-json\n\n[![npm](https://img.shields.io/npm/v/eslint-plugin-json.svg)](https://www.npmjs.com/package/eslint-plugin-json)\n[![Build Status](https://travis-ci.org/azeemba/eslint-plugin-json.svg)](https://travis-ci.org/azeemba/eslint-plugin-json)\n[![codecov](https://codecov.io/gh/azeemba/eslint-plugin-json/branch/master/graph/badge.svg)](https://codecov.io/gh/azeemba/eslint-plugin-json)\n[![dependencies Status](https://david-dm.org/azeemba/eslint-plugin-json/master/status.svg)](https://david-dm.org/adrieankhisbe/eslint-plugin-json/master)\n[![Code Climate](https://codeclimate.com/github/azeemba/eslint-plugin-json/badges/gpa.svg)](https://codeclimate.com/github/azeemba/eslint-plugin-json)\n\n> Eslint plugin for JSON files\n\n:warning: Starting from **major 2.0**, rules **need to be explicitely activated**.\n[See **here** the minimal config to add](#basic-configuration) :rotating_light:\n\n## Installation\n\nInstall `eslint-plugin-json` along [`eslint`](http://eslint.org):\n\n```shell\n$ npm install --save-dev eslint eslint-plugin-json\n# or\n$ yarn add --dev eslint eslint-plugin-json\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-json` globally.\n\n## Usage\n\n### Basic configuration\n\nThe `json` plugin ship with two recommended config you can use to easily activate it via the `extends` key.\nIt comes in two flavor: one strict (`recommended`) and one allowing comments `recommended-with-comments`.\n\n\n```json\n{\n    \"extends\": [\"plugin:json/recommended\"]\n}\n```\n\nYou can run ESLint on individual JSON files or you can use the `--ext` flag to add JSON files to the list.\n\n```\neslint . --ext .json,.js\neslint example.json\n```\n\n### Custom Configuration\n\nIf you want more granular control over which rules, and wich severity you want\n\nAdd `json` to the list of plugins (You can omit the `eslint-plugin-` prefix)\nThen pick your rules.\n\nIf you want them all, add the `json/json` rule (or its alias `json/*`). (this is what the `recommended` config does)\n\n#### Global rules\nThe global rules (`json/json` or its alias `json/*`) activate all the rules.\nNote it can be configured to ignore errors cause by comments.\nTo do so, add option `'allowComments'` or `{allowComments: true}`\n\nFor instance:\n```json\n{\n    \"plugins\": [\n        \"json\"\n    ],\n    \"rules\": {\n        \"json/*\": [\"error\", \"allowComments\"],\n        // or the equivalent:\n        \"json/*\": [\"error\", {\"allowComments\": true}]\n    }\n}\n```\n\n#### Individual Rules\nHere is the list of individual rules (with name in `kebab-case`)in case you want granular error/warning level:\n- `json/undefined`\n- `json/enum-value-mismatch`\n- `json/unexpected-end-of-comment`\n- `json/unexpected-end-of-string`\n- `json/unexpected-end-of-number`\n- `json/invalid-unicode`\n- `json/invalid-escape-character`\n- `json/invalid-character`\n- `json/property-expected`\n- `json/comma-expected`\n- `json/colon-expected`\n- `json/value-expected`\n- `json/comma-or-close-backet-expected`\n- `json/comma-or-close-brace-expected`\n- `json/trailing-comma`\n- `json/duplicate-key`\n- `json/comment-not-permitted`\n- `json/schema-resolve-error`\n- `json/unknown` (error that does not match previous ones)\n\n## FAQs\n\n\n#### How does eslint-plugin-json work?\n\nStarting from version 1.3, this plugin relies on what [VSCode](https://github.com/Microsoft/vscode-json-languageservice)\nuses for its implementation of JSON validation.\n\nOriginaly this plugin used to use JSHint, however due to heavy dependencies, it was replaced.\n\n#### Why doesn't this plugin use `eslint` itself or just `JSON.parse`?\n\n`eslint`'s parser is a JavaScript parser. JSON is a stricter subset and things\nthat are valid JavaScript are not valid JSON. This is why something more specific\nis more appropriate.\n\nWhile `JSON.parse` seems ideal, it is not designed to continue after the first error.\nSo if you have a missing trailing comma in the start of the file, the rest of the file\nwill go unlinted. A smarter parser that can self-correct after seeing errors is needed\nwhich the VSCode implementation provides by leveraging the\n[jsonc-parser](https://www.npmjs.com/package/jsonc-parser) module.\n\n\n#### Will this plugin provide more configuration?\n\nIt is now possible as you can see in the [Configuration section](#custom-configuration)\n\nAdditionally, support for autofixing common errors could be added in the feature.\n\n#### Is `eslint` really the best tool to lint my JSON?\n\nNot really. `eslint` plugin interface wasn't designed to lint a completely different language but\nits interface is flexible enough to allow it. So this plugin is certainly unusual.\n\nIdeally, your editor would natively supports linting JSON. If it doesn't though, then might as well\nuse this plugin. Hacky linting is better than no linting :)\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2015-2020 Azeem Bande-Ali\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-json/-/eslint-plugin-json-2.1.1.tgz#7b9c4da2121f6f48d44efceb9a99ac0d4d12b299",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-json/-/eslint-plugin-json-2.1.1.tgz",
    "hash": "7b9c4da2121f6f48d44efceb9a99ac0d4d12b299",
    "integrity": "sha512-Ktsab8ij33V2KFLhh4alC1FYztdmbV32DeMZYYUCZm4kKLW1s4DrleKKgtbAHSJsmshCK5QGOZtfyc2r3jCRsg==",
    "registry": "npm",
    "packageName": "eslint-plugin-json",
    "cacheIntegrity": "sha512-Ktsab8ij33V2KFLhh4alC1FYztdmbV32DeMZYYUCZm4kKLW1s4DrleKKgtbAHSJsmshCK5QGOZtfyc2r3jCRsg== sha1-e5xNohIfb0jUTvzrmpmsDU0Sspk="
  },
  "registry": "npm",
  "hash": "7b9c4da2121f6f48d44efceb9a99ac0d4d12b299"
}