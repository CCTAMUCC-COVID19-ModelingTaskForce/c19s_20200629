{"version":3,"file":"jest-ieee754.cjs.development.js","sources":["../src/state.ts","../src/toBeCloseToArraySnapshot.ts","../src/toBeCloseToNumber.ts"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* Because Jest StateSnapshot uses them. */\n\n/* eslint-disable import/no-extraneous-dependencies */\n/* tslint:disable:no-implicit-dependencies */\n/* Because this is Jest extension, and Jest is present. */\n\nimport * as fs from 'fs';\nimport { utils } from 'jest-snapshot';\nimport { Context, SnapshotState } from './types';\n\nexport default class State {\n  private currentTestName: string;\n  private snapshotState: SnapshotState;\n  private error?: Error;\n  private hasSnapshot: boolean;\n\n  private incrementCounters() {\n    this.snapshotState._counters.set(\n      this.currentTestName,\n      (this.snapshotState._counters.get(this.currentTestName) || 0) + 1\n    );\n  }\n\n  get count() {\n    return Number(this.snapshotState._counters.get(this.currentTestName));\n  }\n\n  get key() {\n    return utils.testNameToKey(this.currentTestName, this.count);\n  }\n\n  markSnapshotsAsCheckedForTest() {\n    this.snapshotState.markSnapshotsAsCheckedForTest(this.currentTestName);\n  }\n\n  get snapshotIsPersisted() {\n    return fs.existsSync(this.snapshotState._snapshotPath);\n  }\n\n  constructor(context: Context) {\n    this.currentTestName = context.currentTestName;\n    this.snapshotState = context.snapshotState;\n    this.error = context.error;\n\n    this.incrementCounters();\n\n    this.hasSnapshot = this.getSnapshot() !== undefined;\n  }\n\n  getSnapshot() {\n    return this.snapshotState._snapshotData[this.key];\n  }\n\n  setSnapshot(data: string) {\n    this.snapshotState._snapshotData[this.key] = data;\n  }\n\n  /* This nested mess is derived the Jest snapshot matcher code:\n   * https://github.com/facebook/jest/blob/4a59daa8715bde6a1b085ff7f4140f3a337045aa/packages/jest-snapshot/src/State.ts\n   *\n   * Which describes the conditions as follows:\n   *  These are the conditions on when to write snapshots:\n   * There's no snapshot file in a non-CI environment.\n   * There is a snapshot file and we decided to update the snapshot.\n   * There is a snapshot file, but it doesn't have this snaphsot.\n   These are the conditions on when not to write snapshots:\n   * The update flag is set to 'none'.\n   * There's no snapshot file or a file without this snapshot on a CI environment.\n   */\n  couldAddSnapshot(): boolean {\n    return (\n      (this.hasSnapshot && this.snapshotState._updateSnapshot === 'all') ||\n      ((!this.hasSnapshot || !this.snapshotIsPersisted) &&\n        (this.snapshotState._updateSnapshot === 'new' ||\n          this.snapshotState._updateSnapshot === 'all'))\n    );\n  }\n\n  updateTally(pass: boolean) {\n    if (this.couldAddSnapshot()) {\n      if (this.snapshotState._updateSnapshot === 'all') {\n        if (!pass) {\n          if (this.hasSnapshot) {\n            this.snapshotState.updated++;\n          } else {\n            this.snapshotState.added++;\n          }\n        } else {\n          this.snapshotState.matched++;\n        }\n      } else {\n        this.snapshotState.added++;\n      }\n    } else if (!pass) {\n      this.snapshotState.unmatched++;\n    } else {\n      this.snapshotState.matched++;\n    }\n  }\n\n  addSnapshot(data: string) {\n    const isInline = false;\n\n    this.snapshotState._addSnapshot(this.key, data, {\n      error: this.error,\n      isInline,\n    });\n  }\n}\n","import { ulpDistance } from '@eirba/ieee754';\nimport { Context } from './types';\nimport State from './state';\n\nfunction serialize(arr: number[]): string {\n  return JSON.stringify(arr);\n}\n\n/* This function will throw an exception if param is not defined. */\nfunction deserialize(str: string): number[] {\n  return JSON.parse(str);\n}\n\n/* Catch failed deserialization and return an empty array to force a new snapshot */\nfunction tryDeserialize(str: string): number[] {\n  try {\n    return deserialize(str);\n  } catch {\n    return [];\n  }\n}\n\nfunction compare(want: number[], got: number[], maxUlp: bigint): boolean {\n  if (want.length !== got.length) {\n    return false;\n  }\n\n  return want.every((_, idx) => ulpDistance(want[idx], got[idx]) <= maxUlp);\n}\n\nexport default function toBeCloseToArraySnapshot(\n  this: Context,\n  received: number[],\n  maxUlp: bigint = BigInt(4)\n) {\n  const state = new State(this);\n\n  const snapshot = state.getSnapshot();\n  const expected = tryDeserialize(snapshot);\n\n  const pass = compare(expected, received, maxUlp);\n\n  state.markSnapshotsAsCheckedForTest();\n\n  if (pass) {\n    state.setSnapshot(serialize(received));\n  }\n\n  state.updateTally(pass);\n\n  if (state.couldAddSnapshot()) {\n    state.addSnapshot(serialize(received));\n\n    return {\n      message: () => '',\n      pass: true,\n    };\n  }\n\n  if (!pass) {\n    return {\n      message: () => `expected: ${expected}\\n received: ${received}`,\n      actual: serialize(received),\n      count: state.count,\n      expected: serialize(expected),\n      key: state.key,\n      pass: false,\n    };\n  }\n\n  return {\n    message: () => '',\n    actual: serialize(received),\n    count: state.count,\n    expected: '',\n    key: state.key,\n    pass: true,\n  };\n}\n","import { ulpDistance } from '@eirba/ieee754';\n\nexport default function toBeCloseToNumber(\n  got: number,\n  want: number,\n  maxUlp: bigint = BigInt(4)\n) {\n  const diff = ulpDistance(want, got);\n  const pass = diff <= maxUlp;\n\n  if (pass) {\n    return {\n      message: () =>\n        `received (${got}) and expected (${want}) have a ULP distance of ${diff} which does not exceed the maximum ULP distance of ${maxUlp}.`,\n      pass: true,\n    };\n  }\n  return {\n    message: () =>\n      `received (${got}) and expected (${want}) have a ULP distance of ${diff} ULP which exceeds maximum of ${maxUlp}.`,\n    pass: false,\n  };\n}\n"],"names":["State","context","currentTestName","snapshotState","error","incrementCounters","hasSnapshot","getSnapshot","undefined","_counters","set","get","markSnapshotsAsCheckedForTest","_snapshotData","key","setSnapshot","data","couldAddSnapshot","_updateSnapshot","snapshotIsPersisted","updateTally","pass","updated","added","matched","unmatched","addSnapshot","isInline","_addSnapshot","Number","utils","testNameToKey","count","fs","_snapshotPath","serialize","arr","JSON","stringify","deserialize","str","parse","tryDeserialize","compare","want","got","maxUlp","length","every","_","idx","ulpDistance","toBeCloseToArraySnapshot","received","BigInt","state","snapshot","expected","message","actual","toBeCloseToNumber","diff"],"mappings":"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"}