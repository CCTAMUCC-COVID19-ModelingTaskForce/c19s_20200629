{
  "manifest": {
    "name": "purgecss-webpack-plugin",
    "version": "2.2.0",
    "description": "PurgeCSS plugin for webpack - Remove unused css",
    "author": {
      "name": "Ffloriel"
    },
    "homepage": "https://purgecss.com/",
    "keywords": [
      "webpack-plugin",
      "optimize",
      "optimization",
      "remove",
      "unused",
      "css",
      "html",
      "rules",
      "purge",
      "uncss",
      "purify"
    ],
    "license": "MIT",
    "main": "lib/purgecss-webpack-plugin.js",
    "module": "./lib/purgecss-webpack-plugin.esm.js",
    "types": "./lib/purgecss-webpack-plugin.d.ts",
    "files": [
      "lib"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/FullHuman/purgecss.git"
    },
    "scripts": {
      "test": "echo \"Error: run tests from root\" && exit 1"
    },
    "dependencies": {
      "purgecss": "^2.2.0",
      "webpack": "^4.42.1",
      "webpack-sources": "^1.4.3"
    },
    "bugs": {
      "url": "https://github.com/FullHuman/purgecss/issues"
    },
    "devDependencies": {
      "@types/webpack": "^4.41.12",
      "@types/webpack-sources": "^0.1.7",
      "css-loader": "^3.5.2",
      "mini-css-extract-plugin": "^0.9.0"
    },
    "peerDependencies": {
      "webpack": "*"
    },
    "gitHead": "e7a590b2e20be4de8f8b55a61554f550fe27f69f",
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-purgecss-webpack-plugin-2.2.0-5fec1bfd497edbe9217bd6a58e8a16d4050832d6-integrity/node_modules/purgecss-webpack-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "# purgecss-webpack-plugin\n\n[![Build Status](https://travis-ci.org/FullHuman/purgecss-webpack-plugin.svg?branch=master)](https://travis-ci.org/FullHuman/purgecss-webpack-plugin)\n[![CircleCi](https://circleci.com/gh/FullHuman/purgecss-webpack-plugin/tree/master.svg?style=shield)]()\n[![dependencies Status](https://david-dm.org/fullhuman/purgecss-webpack-plugin/status.svg)](https://david-dm.org/fullhuman/purgecss-webpack-plugin)\n[![devDependencies Status](https://david-dm.org/fullhuman/purgecss-webpack-plugin/dev-status.svg)](https://david-dm.org/fullhuman/purgecss-webpack-plugin?type=dev)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c23bd13d30104a7a89bed239166aaf69)](https://www.codacy.com/app/FullHuman/purgecss-webpack-plugin?utm_source=github.com&utm_medium=referral&utm_content=FullHuman/purgecss-webpack-plugin&utm_campaign=Badge_Grade)\n[![Codacy Badge](https://api.codacy.com/project/badge/Coverage/c23bd13d30104a7a89bed239166aaf69)](https://www.codacy.com/app/FullHuman/purgecss-webpack-plugin?utm_source=github.com&utm_medium=referral&utm_content=FullHuman/purgecss-webpack-plugin&utm_campaign=Badge_Coverage)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![npm](https://img.shields.io/npm/v/purgecss-webpack-plugin.svg)](https://www.npmjs.com/package/purgecss-webpack-plugin)\n[![license](https://img.shields.io/github/license/fullhuman/purgecss-webpack-plugin.svg)]() [![Greenkeeper badge](https://badges.greenkeeper.io/FullHuman/purgecss-webpack-plugin.svg)](https://greenkeeper.io/)\n\n[Webpack](https://github.com/webpack/webpack) plugin to remove unused css.\n\n## Install\n```sh\nnpm i purgecss-webpack-plugin -D\n```\n\n## Usage\n\n### With mini-css-extract-plugin\n\n```js\nconst path = require('path')\nconst glob = require('glob')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst PurgecssPlugin = require('purgecss-webpack-plugin')\n\nconst PATHS = {\n  src: path.join(__dirname, 'src')\n}\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'bundle.js',\n    path: path.join(__dirname, 'dist')\n  },\n  optimization: {\n    splitChunks: {\n      cacheGroups: {\n        styles: {\n          name: 'styles',\n          test: /\\.css$/,\n          chunks: 'all',\n          enforce: true\n        }\n      }\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          \"css-loader\"\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: \"[name].css\",\n    }),\n    new PurgecssPlugin({\n      paths: glob.sync(`${PATHS.src}/**/*`,  { nodir: true }),\n    }),\n  ]\n}\n```\n### Multiple paths\nIf you need multiple paths use the npm package `glob-all` instead of `glob`, then you can use this syntax:\n```javascript\nnew PurgecssPlugin({\n  paths: glob.sync([\n    // ...\n  ])\n}),\n```\nto filter out directories see the glob-all documentation [here](https://www.npmjs.com/package/glob-all#filtering-out-directories).\n<!-- \n### Webpack 3 (with extract-text-webpack-plugin)\n```js\nconst path = require('path')\nconst glob = require('glob')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\nconst PurgecssPlugin = require('purgecss-webpack-plugin')\n\nconst PATHS = {\n  src: path.join(__dirname, 'src')\n}\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'bundle.js',\n    path: path.join(__dirname, 'dist')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ExtractTextPlugin.extract({\n          fallback: 'style-loader',\n          use: 'css-loader?sourceMap'\n        })\n      }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin('[name].css?[hash]'),\n    new PurgecssPlugin({\n      paths: glob.sync(`${PATHS.src}/**/*`, { nodir: true })\n    })\n  ]\n}\n``` -->\n\n### Options\n\nThe options available in purgecss [Configuration](https://www.purgecss.com/configuration.html) are also available in the webpack plugin with the exception of css and content.\n\n* #### paths\n\nWith the webpack plugin, you can specified the content that should be analyzed by purgecss with an array of filename. It can be html, pug, blade, ... files. You can use a module like `glob` or `glob-all` to easily get a list of files.\n\n```js\nconst PurgecssPlugin = require('purgecss-webpack-plugin')\nconst glob = require('glob')\nconst PATHS = {\n  src: path.join(__dirname, 'src')\n}\n\n// In the webpack configuration\nnew PurgecssPlugin({\n  paths: glob.sync(`${PATHS.src}/**/*`, { nodir: true })\n})\n```\n\nIf you want to regenerate the paths list on every compilation (e.g. with `--watch`), then you can also pass a function:\n```js\nnew PurgecssPlugin({\n  paths: () => glob.sync(`${PATHS.src}/**/*`, { nodir: true })\n})\n```\n\n* #### only\n\nYou can specify entrypoints to the purgecss-webpack-plugin with the option only:\n\n```js\nnew PurgecssPlugin({\n  paths: glob.sync(`${PATHS.src}/**/*`, { nodir: true }),\n  only: ['bundle', 'vendor']\n})\n```\n\n* #### whitelist, whitelistPatterns and whitelistPatternsChildren\n\nSimilar as for the `paths` option, you also can define functions for the these options:\n\n```js\nfunction collectWhitelist() {\n    // do something to collect the whitelist\n    return ['whitelisted'];\n}\nfunction collectWhitelistPatterns() {\n    // do something to collect the whitelist\n    return [/^whitelisted-/];\n}\n\nfunction collectWhitelistPatternsChildren() {\n    // do something to collect the whitelist\n    return [/^whitelisted-/];\n}\n\n// In the webpack configuration\nnew PurgecssPlugin({\n  whitelist: collectWhitelist,\n  whitelistPatterns: collectWhitelistPatterns,\n  whitelistPatternsChildren: collectWhitelistPatternsChildren\n})\n```\n\n* #### rejected\n\nIf `true` all removed selectors are added to the [Stats Data](https://webpack.js.org/api/stats/) as `purged`.\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](./../../CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](./../../LICENSE) file for details\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Full Human\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/purgecss-webpack-plugin/-/purgecss-webpack-plugin-2.2.0.tgz#5fec1bfd497edbe9217bd6a58e8a16d4050832d6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/purgecss-webpack-plugin/-/purgecss-webpack-plugin-2.2.0.tgz",
    "hash": "5fec1bfd497edbe9217bd6a58e8a16d4050832d6",
    "integrity": "sha512-wYMkVDcoUFAaRKtk3zlX41lOiEk/mxQcyHp/hl9IvYqVilopNctn9wknr5z/+hfmQyIY80yJLE4ovF/iRpxUcg==",
    "registry": "npm",
    "packageName": "purgecss-webpack-plugin",
    "cacheIntegrity": "sha512-wYMkVDcoUFAaRKtk3zlX41lOiEk/mxQcyHp/hl9IvYqVilopNctn9wknr5z/+hfmQyIY80yJLE4ovF/iRpxUcg== sha1-X+wb/Ul+2+khe9aljooW1AUIMtY="
  },
  "registry": "npm",
  "hash": "5fec1bfd497edbe9217bd6a58e8a16d4050832d6"
}