{
  "manifest": {
    "name": "@cypress/webpack-preprocessor",
    "version": "5.4.1",
    "description": "Cypress preprocessor for bundling JavaScript via webpack",
    "private": false,
    "main": "dist",
    "scripts": {
      "ban": "ban",
      "build": "rm -rf dist && tsc",
      "deps": "deps-ok && dependency-check --no-dev .",
      "license": "license-checker --production --onlyunknown --csv",
      "lint": "eslint --ext .js,.jsx,.json,.ts,.tsx .",
      "lint-fix": "yarn lint --fix",
      "secure": "nsp check",
      "semantic-release": "semantic-release",
      "size": "npm pack --dry",
      "pretest": "yarn lint && yarn build",
      "test": "yarn test-unit && yarn test-e2e",
      "test-debug": "node --inspect --debug-brk ./node_modules/.bin/_mocha",
      "test-e2e": "mocha test/e2e/*.spec.*",
      "test-unit": "mocha test/unit/*.spec.*",
      "test-watch": "yarn test-unit & chokidar '**/*.(js|ts)' 'test/unit/*.(js|ts)' -c 'yarn test-unit'",
      "types": "tsc --noEmit"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "dependencies": {
      "bluebird": "3.7.1",
      "debug": "4.1.1",
      "lodash": "4.17.15"
    },
    "devDependencies": {
      "@babel/core": "^7.0.1",
      "@babel/plugin-proposal-nullish-coalescing-operator": "7.8.3",
      "@babel/preset-env": "^7.0.0",
      "@cypress/eslint-plugin-dev": "5.0.0",
      "@types/webpack": "4.41.12",
      "@typescript-eslint/eslint-plugin": "2.31.0",
      "@typescript-eslint/parser": "2.31.0",
      "babel-loader": "^8.0.2",
      "ban-sensitive-files": "1.9.0",
      "chai": "4.1.2",
      "chalk": "3.0.0",
      "chokidar-cli": "1.2.0",
      "cypress": "4.5.0",
      "dependency-check": "2.9.1",
      "deps-ok": "1.2.1",
      "eslint": "6.8.0",
      "eslint-plugin-cypress": "2.10.3",
      "eslint-plugin-json-format": "2.0.1",
      "eslint-plugin-mocha": "4.11.0",
      "fast-glob": "3.1.1",
      "find-webpack": "1.5.0",
      "fs-extra": "8.1.0",
      "husky": "4.2.5",
      "license-checker": "13.0.3",
      "lint-staged": "10.2.2",
      "mocha": "^7.1.0",
      "mockery": "2.1.0",
      "prettier-eslint-cli": "4.4.0",
      "proxyquire": "2.1.3",
      "react": "16.13.1",
      "react-dom": "16.13.1",
      "react-scripts": "3.2",
      "semantic-release": "17.0.4",
      "sinon": "^9.0.0",
      "sinon-chai": "^3.5.0",
      "snap-shot-it": "7.9.2",
      "start-server-and-test": "1.10.11",
      "ts-node": "8.10.1",
      "typescript": "3.8.3",
      "webpack": "^4.18.1"
    },
    "peerDependencies": {
      "@babel/core": "^7.0.1",
      "@babel/preset-env": "^7.0.0",
      "babel-loader": "^8.0.2",
      "webpack": "^4.18.1"
    },
    "files": [
      "dist"
    ],
    "types": "dist",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/cypress-io/cypress-webpack-preprocessor.git"
    },
    "homepage": "https://github.com/cypress-io/cypress-webpack-preprocessor#readme",
    "author": {
      "name": "Chris Breiding",
      "email": "chris@cypress.io"
    },
    "bugs": {
      "url": "https://github.com/cypress-io/cypress-webpack-preprocessor/issues"
    },
    "keywords": [
      "cypress",
      "cypress-plugin",
      "cypress-preprocessor",
      "webpack"
    ],
    "lint-staged": {
      "*.{js,jsx,ts,tsx,json}": [
        "eslint --fix"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-@cypress-webpack-preprocessor-5.4.1-eb58f6cd02932a95653c1a674cfd769da2409806-integrity/node_modules/@cypress/webpack-preprocessor/package.json",
    "readmeFilename": "README.md",
    "readme": "# Cypress Webpack Preprocessor [![CircleCI](https://circleci.com/gh/cypress-io/cypress-webpack-preprocessor.svg?style=svg)](https://circleci.com/gh/cypress-io/cypress-webpack-preprocessor) [![semantic-release][semantic-image] ][semantic-url]\n\nCypress preprocessor for bundling JavaScript via webpack\n\n## Installation\n\n```sh\nnpm install --save-dev @cypress/webpack-preprocessor\n```\n\nThis package relies on the following [peer dependencies](https://docs.npmjs.com/files/package.json#peerdependencies):\n\n* @babel/core\n* @babel/preset-env\n* babel-loader\n* webpack\n\nIt is likely you already have these installed either directly or as a transient dependency, but if not, you will need to install them.\n\n```sh\nnpm install --save-dev @babel/core @babel/preset-env babel-loader webpack\n```\n\n## Compatibility\n\nThis version is only compatible with webpack 4.x+ and Babel 7.x+.\n\n* If you need webpack 2 or 3 support, use `@cypress/webpack-preprocessor` 1.x\n* If you need Babel 6 support, use `@cypress/webpack-preprocessor` <= 2.x\n\nBy default, this plugin (and all Cypress plugins) run in the Node version that is bundled with Cypress. Alternatively, you can use the Node found on your system by setting [nodeVersion: system](https://on.cypress.io/configuration#Node-version) configuration option. A common use case for using the system Node are native dependencies like `node-sass`.\n\n## Usage\n\nIn your project's [plugins file](https://on.cypress.io/guides/tooling/plugins-guide.html):\n\n```javascript\nconst webpackPreprocessor = require('@cypress/webpack-preprocessor')\n\nmodule.exports = (on) => {\n  on('file:preprocessor', webpackPreprocessor())\n}\n```\n\n## Examples\n\n- [React app](examples/react-app) shows how to point Cypress at Webpack configuration from `react-scripts` dependency\n- [use-babelrc](examples/use-babelrc) shows to to use your project's `.babelrc` with Webpack\n- [use-ts-loader](examples/use-ts-loader) shows how to transpile TypeScript specs following [Webpack TypeScript guide](https://webpack.js.org/guides/typescript/)\n\n## Options\n\nPass in options as the second argument to `webpack`:\n\n```javascript\nconst webpackPreprocessor = require('@cypress/webpack-preprocessor')\n\nmodule.exports = (on) => {\n  const options = {\n    // send in the options from your webpack.config.js, so it works the same\n    // as your app's code\n    webpackOptions: require('../../webpack.config'),\n    watchOptions: {},\n  }\n\n  on('file:preprocessor', webpackPreprocessor(options))\n}\n```\n\n### webpackOptions\n\nObject of webpack options. Just `require` in the options from your `webpack.config.js` to use the same options as your app.\n\n**Default**:\n\n```javascript\n{\n  mode: 'development',\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?$/,\n        exclude: [/node_modules/],\n        use: [{\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env'],\n          },\n        }],\n      },\n    ],\n  },\n}\n```\n\nSource maps are **always enabled** unless explicitly disabled by specifying `devtool: false`.\n\nWebpack [mode](https://webpack.js.org/configuration/mode/) is set to `development` if not present. You can set `mode` to \"development\", \"production\" or \"none\".\n\n### use babelrc\n\nIf you have a `.babelrc` file and would like to use it, then you must delete `options.presets` from the default Webpack options\n\n```js\nconst webpackPreprocessor = require('@cypress/webpack-preprocessor')\nconst defaults = webpackPreprocessor.defaultOptions\nmodule.exports = (on) => {\n  delete defaults.webpackOptions.module.rules[0].use[0].options.presets\n  on('file:preprocessor', webpackPreprocessor(defaults))\n}\n```\n\n### watchOptions\n\nObject of options for watching. See [webpack's docs](https://webpack.js.org/configuration/watch).\n\n**Default**: `{}`\n\n### additionalEntries\n\nAn array of file path strings for additional entries to be included in the bundle.\n\nBy necessity, this preprocessor sets the entry point for webpack as the spec file or support file. The `additionalEntries` option allows you to specify more entry points in order to utilize webpack's [multi-main entry](https://webpack.js.org/concepts/entry-points/#single-entry-shorthand-syntax). This allows runtime dependency resolution.\n\n**Default**: `[]`\n\n**Example**:\n\n```javascript\nconst webpackPreprocessor = require('@cypress/webpack-preprocessor')\n\nmodule.exports = (on) => {\n  const options = {\n    webpackOptions: require('../../webpack.config'),\n    additionalEntries: ['./app/some-module.js'],\n  }\n\n  on('file:preprocessor', webpackPreprocessor(options))\n}\n```\n\n## Modifying default options\n\nThe default options are provided as `webpack.defaultOptions` so they can be more easily modified.\n\nIf, for example, you want to update the options for the `babel-loader` to add the [stage-3 preset](https://babeljs.io/docs/plugins/preset-stage-3/), you could do the following:\n\n```javascript\nconst webpackPreprocessor = require('@cypress/webpack-preprocessor')\n\nmodule.exports = (on) => {\n  const options = webpackPreprocessor.defaultOptions\n  options.webpackOptions.module.rules[0].use[0].options.presets.push('babel-preset-stage-3')\n\n  on('file:preprocessor', webpackPreprocessor(options))\n}\n```\n\n## Debugging\n\nYou can see debug messages from this module by running with environment variable\n\n```\nDEBUG=cypress:webpack\n```\n\nYou can see Webpack bundle diagnostic output (timings, chunks, sizes) by running with environment variable\n\n```\nDEBUG=cypress:webpack:stats\n```\n![Webpack stats](images/webpack-stats.png)\n\n## Contributing\n\nUse the [version of Node that matches Cypress](https://github.com/cypress-io/cypress/blob/develop/.node-version).\n\nBuild the typescript files:\n\n```shell\nyarn build\n```\n\nWatch the typescript files and rebuild on file change:\n\n```shell\nyarn build --watch\n```\n\nRun all tests once:\n\n```shell\nnpm test\n```\n\nRun tests in watch mode:\n\n```shell\nnpm run test-watch\n```\n\n## License\n\nThis project is licensed under the terms of the [MIT license](/LICENSE.md).\n\n[semantic-image]: https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg\n[semantic-url]: https://github.com/semantic-release/semantic-release\n",
    "licenseText": "## MIT License\n\nCopyright (c) 2017 Cypress.io https://cypress.io\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@cypress/webpack-preprocessor/-/webpack-preprocessor-5.4.1.tgz#eb58f6cd02932a95653c1a674cfd769da2409806",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@cypress/webpack-preprocessor/-/webpack-preprocessor-5.4.1.tgz",
    "hash": "eb58f6cd02932a95653c1a674cfd769da2409806",
    "integrity": "sha512-1E2BdVVXQ4wDQ7f3mXCvS9xmfTVwEoT3oqKhjAr1iNlTJpBq10Z0VNBZd3VZ3nmCTFwTuUvs735QGnRE1gQ1BA==",
    "registry": "npm",
    "packageName": "@cypress/webpack-preprocessor",
    "cacheIntegrity": "sha512-1E2BdVVXQ4wDQ7f3mXCvS9xmfTVwEoT3oqKhjAr1iNlTJpBq10Z0VNBZd3VZ3nmCTFwTuUvs735QGnRE1gQ1BA== sha1-61j2zQKTKpVlPBpnTP12naJAmAY="
  },
  "registry": "npm",
  "hash": "eb58f6cd02932a95653c1a674cfd769da2409806"
}