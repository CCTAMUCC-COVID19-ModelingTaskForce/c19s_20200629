{
  "manifest": {
    "name": "secure-keys",
    "version": "1.0.0",
    "description": "Encrypt/Decrypt the values of a given object",
    "main": "index.js",
    "scripts": {
      "test": "mocha test/*-test.js"
    },
    "keywords": [
      "secure-keys",
      "conversion",
      "crypto",
      "secure",
      "config"
    ],
    "author": {
      "name": "Jarrett Cruger",
      "email": "jcrugzz@gmail.com"
    },
    "license": "MIT",
    "devDependencies": {
      "assume": "^1.3.1",
      "mocha": "^2.4.5"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-secure-keys-1.0.0-f0c82d98a3b139a8776a8808050b824431087fca-integrity/node_modules/secure-keys/package.json",
    "readmeFilename": "README.md",
    "readme": "# secure-keys\n\n[![build\nstatus](https://travis-ci.org/jcrugzz/secure-keys.svg?branch=master)](http://travis-ci.org/jcrugzz/secure-keys)\n\nA simple module that encrypts/decrypts the keys of a given object\n\n## install\n```sh\nnpm i secure-keys --save\n```\n\n## usage\n\n```js\n\nvar SecK = require('secure-keys');\n\nvar sec = new SecK({\n  secret: 'BEGIN RSA', // Text of key used for encrypting/decrypting\n  format: JSON, // optional (defaults to JSON): An object with `stringify` and `parse` methods\n  alg: 'aes-256-ctr' //optional (this is default) Algorithm to use for encrypt/decrypt\n});\n\nvar encryptedObj = sec.encrypt({\n  myConfig: 'values',\n  needTo: 'be safe'\n});\n\nvar decryptedObj = sec.decrypt(encryptedObj);\n```\n\n## LICENSE\nMIT\n\n---------------\n\nThis code was yanked out of work by\n[@indexzero](https://github.com/indexzero) for\n[`nconf`](https://github.com/indexzero/nconf)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/secure-keys/-/secure-keys-1.0.0.tgz#f0c82d98a3b139a8776a8808050b824431087fca",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/secure-keys/-/secure-keys-1.0.0.tgz",
    "hash": "f0c82d98a3b139a8776a8808050b824431087fca",
    "integrity": "sha1-8MgtmKOxOah3aogIBQuCRDEIf8o=",
    "registry": "npm",
    "packageName": "secure-keys",
    "cacheIntegrity": "sha512-nZi59hW3Sl5P3+wOO89eHBAAGwmCPd2aE1+dLZV5MO+ItQctIvAqihzaAXIQhvtH4KJPxM080HsnqltR2y8cWg== sha1-8MgtmKOxOah3aogIBQuCRDEIf8o="
  },
  "registry": "npm",
  "hash": "f0c82d98a3b139a8776a8808050b824431087fca"
}