{
  "manifest": {
    "name": "@testing-library/user-event",
    "version": "11.4.1",
    "description": "Fire events the same way the user does",
    "main": "dist/index.js",
    "typings": "typings/index.d.ts",
    "keywords": [
      "react-testing-library",
      "dom-testing-library",
      "react",
      "testing"
    ],
    "author": {
      "name": "Giorgio Polvara",
      "email": "polvara@gmail.com"
    },
    "license": "MIT",
    "engines": {
      "node": ">=10",
      "npm": ">=6"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/testing-library/user-event"
    },
    "bugs": {
      "url": "https://github.com/testing-library/user-event/issues"
    },
    "homepage": "https://github.com/testing-library/user-event#readme",
    "files": [
      "dist",
      "typings"
    ],
    "scripts": {
      "build": "kcd-scripts build",
      "lint": "kcd-scripts lint",
      "setup": "npm install && npm run validate -s",
      "test": "kcd-scripts test",
      "test:debug": "kcd-scripts --inspect-brk test --runInBand",
      "test:update": "npm test -- --updateSnapshot --coverage",
      "validate": "kcd-scripts validate"
    },
    "dependencies": {
      "@babel/runtime": "^7.10.2"
    },
    "devDependencies": {
      "@testing-library/dom": "^7.9.0",
      "@testing-library/jest-dom": "^5.9.0",
      "@testing-library/react": "^10.2.1",
      "is-ci": "^2.0.0",
      "kcd-scripts": "^6.2.2",
      "react": "^16.13.1",
      "react-dom": "^16.13.1"
    },
    "peerDependencies": {
      "@testing-library/dom": ">=7.9.0"
    },
    "eslintConfig": {
      "extends": "./node_modules/kcd-scripts/eslint.js",
      "rules": {
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/tabindex-no-positive": "off",
        "no-return-assign": "off",
        "react/prop-types": "off"
      },
      "overrides": [
        {
          "files": [
            "**/__tests__/**"
          ],
          "rules": {
            "no-console": "off"
          }
        }
      ]
    },
    "eslintIgnore": [
      "node_modules",
      "coverage",
      "dist"
    ],
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-@testing-library-user-event-11.4.1-2134e4cbbb345dbc49001123ff9a036f09259464-integrity/node_modules/@testing-library/user-event/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n<h1>@testing-library/user-event</h1>\n\n<a href=\"https://www.joypixels.com/profiles/emoji/1f415\">\n  <img\n    height=\"80\"\n    width=\"80\"\n    alt=\"dog\"\n    src=\"https://raw.githubusercontent.com/testing-library/user-event/master/other/dog.png\"\n  />\n</a>\n\n<p>Fire events the same way the user does</p>\n</div>\n\n---\n\n<!-- prettier-ignore-start -->\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package]\n[![downloads][downloads-badge]][npmtrends]\n[![MIT License][license-badge]][license]\n\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-42-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n[![PRs Welcome][prs-badge]][prs]\n[![Code of Conduct][coc-badge]][coc]\n<!-- prettier-ignore-end -->\n\n## The problem\n\nFrom\n[testing-library/dom-testing-library#107](https://github.com/testing-library/dom-testing-library/issues/107):\n\n> [...] it is becoming apparent the need to express user actions on a web page\n> using a higher-level abstraction than `fireEvent`\n\n## The solution\n\n`user-event` tries to simulate the real events that would happen in the browser\nas the user interacts with it. For example `userEvent.click(checkbox)` would\nchange the state of the checkbox.\n\n**The library is still a work in progress and any help is appreciated.**\n\n## Table of Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [API](#api)\n  - [`click(element)`](#clickelement)\n  - [`dblClick(element)`](#dblclickelement)\n  - [`async type(element, text, [options])`](#async-typeelement-text-options)\n  - [`upload(element, file, [{ clickInit, changeInit }])`](#uploadelement-file--clickinit-changeinit-)\n  - [`clear(element)`](#clearelement)\n  - [`selectOptions(element, values)`](#selectoptionselement-values)\n  - [`toggleSelectOptions(element, values)`](#toggleselectoptionselement-values)\n  - [`tab({shift, focusTrap})`](#tabshift-focustrap)\n  - [`async hover(element)`](#async-hoverelement)\n  - [`async unhover(element)`](#async-unhoverelement)\n- [Issues](#issues)\n  - [üêõ Bugs](#-bugs)\n  - [üí° Feature Requests](#-feature-requests)\n- [Contributors ‚ú®](#contributors-)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nWith NPM:\n\n```sh\nnpm install @testing-library/user-event @testing-library/dom --save-dev\n```\n\nWith Yarn:\n\n```sh\nyarn add @testing-library/user-event @testing-library/dom --dev\n```\n\nNow simply import it in your tests:\n\n```js\nimport userEvent from '@testing-library/user-event'\n\n// or\n\nvar userEvent = require('@testing-library/user-event')\n```\n\n## API\n\n### `click(element)`\n\nClicks `element`, depending on what `element` is it can have different side\neffects.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('click', () => {\n  render(\n    <div>\n      <label htmlFor=\"checkbox\">Check</label>\n      <input id=\"checkbox\" type=\"checkbox\" />\n    </div>,\n  )\n\n  userEvent.click(screen.getByText('Check'))\n  expect(screen.getByLabelText('Check')).toHaveAttribute('checked', true)\n})\n```\n\nYou can also ctrlClick / shiftClick etc with\n\n```js\nuserEvent.click(elem, {ctrlKey: true, shiftKey: true})\n```\n\nSee the\n[`MouseEvent`](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent)\nconstructor documentation for more options.\n\n### `dblClick(element)`\n\nClicks `element` twice, depending on what `element` is it can have different\nside effects.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('double click', () => {\n  const onChange = jest.fn()\n  render(<input type=\"checkbox\" id=\"checkbox\" onChange={onChange} />)\n  const checkbox = screen.getByTestId('checkbox')\n  userEvent.dblClick(checkbox)\n  expect(onChange).toHaveBeenCalledTimes(2)\n  expect(checkbox).toHaveProperty('checked', false)\n})\n```\n\n### `async type(element, text, [options])`\n\nWrites `text` inside an `<input>` or a `<textarea>`.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('type', async () => {\n  render(<textarea />)\n\n  await userEvent.type(screen.getByRole('textbox'), 'Hello,{enter}World!')\n  expect(screen.getByRole('textbox')).toHaveValue('Hello,\\nWorld!')\n})\n```\n\nIf `options.allAtOnce` is `true`, `type` will write `text` at once rather than\none character at the time. `false` is the default value.\n\n`options.delay` is the number of milliseconds that pass between two characters\nare typed. By default it's 0. You can use this option if your component has a\ndifferent behavior for fast or slow users.\n\n#### Special characters\n\nThe following special character strings are supported:\n\n| Text string   | Key       | Modifier   | Notes                                                                              |\n| ------------- | --------- | ---------- | ---------------------------------------------------------------------------------- |\n| `{enter}`     | Enter     | N/A        | Will insert a newline character (`<textarea />` only).                             |\n| `{esc}`       | Escape    | N/A        |                                                                                    |\n| `{backspace}` | Backspace | N/A        | Will delete the previous character (or the characters within the `selectedRange`). |\n| `{shift}`     | Shift     | `shiftKey` | Does **not** capitalize following characters.                                      |\n| `{ctrl}`      | Control   | `ctrlKey`  |                                                                                    |\n| `{alt}`       | Alt       | `altKey`   |                                                                                    |\n| `{meta}`      | OS        | `metaKey`  |                                                                                    |\n\n> **A note about modifiers:** Modifier keys (`{shift}`, `{ctrl}`, `{alt}`,\n> `{meta}`) will activate their corresponding event modifiers for the duration\n> of type command or until they are closed (via `{/shift}`, `{/ctrl}`, etc.).\n\n<!-- space out these notes -->\n\n> We take the same\n> [stance as Cypress](https://docs.cypress.io/api/commands/type.html#Modifiers)\n> in that we do not simulate the behavior that happens with modifier key\n> combinations as different operating systems function differently in this\n> regard.\n\n### `upload(element, file, [{ clickInit, changeInit }])`\n\nUploads file to an `<input>`. For uploading multiple files use `<input>` with\n`multiple` attribute and the second `upload` argument must be array then. Also\nit's possible to initialize click or change event with using third argument.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('upload file', () => {\n  const file = new File(['hello'], 'hello.png', {type: 'image/png'})\n\n  render(\n    <div>\n      <label htmlFor=\"file-uploader\">Upload file:</label>\n      <input id=\"file-uploader\" type=\"file\" />\n    </div>,\n  )\n\n  userEvent.upload(screen.getByLabelText(/upload file/i), file)\n\n  expect(input.files[0]).toStrictEqual(file)\n  expect(input.files.item(0)).toStrictEqual(file)\n  expect(input.files).toHaveLength(1)\n})\n\ntest('upload multiple files', () => {\n  const files = [\n    new File(['hello'], 'hello.png', {type: 'image/png'}),\n    new File(['there'], 'there.png', {type: 'image/png'}),\n  ]\n\n  render(\n    <div>\n      <label htmlFor=\"file-uploader\">Upload file:</label>\n      <input id=\"file-uploader\" type=\"file\" multiple />\n    </div>,\n  )\n\n  userEvent.upload(screen.getByLabelText(/upload file/i), files)\n\n  expect(input.files).toHaveLength(2)\n  expect(input.files[0]).toStrictEqual(files[0])\n  expect(input.files[1]).toStrictEqual(files[1])\n})\n```\n\n### `clear(element)`\n\nSelects the text inside an `<input>` or `<textarea>` and deletes it.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('clear', () => {\n  render(<textarea value=\"Hello, World!\" />)\n\n  userEvent.clear(screen.getByRole('textbox', 'email'))\n  expect(screen.getByRole('textbox', 'email')).toHaveAttribute('value', '')\n})\n```\n\n### `selectOptions(element, values)`\n\nSelects the specified option(s) of a `<select>` or a `<select multiple>`\nelement.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('selectOptions', () => {\n  render(\n    <select multiple data-testid=\"select-multiple\">\n      <option data-testid=\"val1\" value=\"1\">\n        A\n      </option>\n      <option data-testid=\"val2\" value=\"2\">\n        B\n      </option>\n      <option data-testid=\"val3\" value=\"3\">\n        C\n      </option>\n    </select>,\n  )\n\n  userEvent.selectOptions(screen.getByTestId('select-multiple'), ['1', '3'])\n\n  expect(screen.getByTestId('val1').selected).toBe(true)\n  expect(screen.getByTestId('val2').selected).toBe(false)\n  expect(screen.getByTestId('val3').selected).toBe(true)\n})\n```\n\nThe `values` parameter can be either an array of values or a singular scalar\nvalue.\n\nIt also accepts option nodes:\n\n```js\nuserEvent.selectOptions(screen.getByTestId('select-multiple'), [\n  screen.getByText('A'),\n  screen.getByText('B'),\n])\n```\n\n### `toggleSelectOptions(element, values)`\n\nToggle the specified option(s) of a `<select multiple>` element.\n\n```jsx\nimport * as React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('toggleSelectOptions', () => {\n  render(\n    <select multiple>\n      <option value=\"1\">A</option>\n      <option value=\"2\">B</option>\n      <option value=\"3\">C</option>\n    </select>,\n  )\n\n  userEvent.toggleSelectOptions(screen.getByRole('listbox'), ['1', '3'])\n\n  expect(screen.getByText('A').selected).toBe(true)\n  expect(screen.getByText('C').selected).toBe(true)\n\n  userEvent.toggleSelectOptions(screen.getByRole('listbox'), ['1'])\n\n  expect(screen.getByText('A').selected).toBe(false)\n})\n```\n\nThe `values` parameter can be either an array of values or a singular scalar\nvalue.\n\n### `tab({shift, focusTrap})`\n\nFires a tab event changing the document.activeElement in the same way the\nbrowser does.\n\nOptions:\n\n- `shift` (default `false`) can be true or false to invert tab direction.\n- `focusTrap` (default `document`) a container element to restrict the tabbing\n  within.\n\n> **A note about tab**:\n> [jsdom does not support tabbing](https://github.com/jsdom/jsdom/issues/2102),\n> so this feature is a way to enable tests to verify tabbing from the end user's\n> perspective. However, this limitation in jsdom will mean that components like\n> [focus-trap-react](https://github.com/davidtheclark/focus-trap-react) will not\n> work with `userEvent.tab()` or jsdom. For that reason, the `focusTrap` option\n> is available to let you ensure your user is restricted within a focus-trap.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport '@testing-library/jest-dom/extend-expect'\nimport userEvent from '@testing-library/user-event'\n\nit('should cycle elements in document tab order', () => {\n  render(\n    <div>\n      <input data-testid=\"element\" type=\"checkbox\" />\n      <input data-testid=\"element\" type=\"radio\" />\n      <input data-testid=\"element\" type=\"number\" />\n    </div>,\n  )\n\n  const [checkbox, radio, number] = screen.getAllByTestId('element')\n\n  expect(document.body).toHaveFocus()\n\n  userEvent.tab()\n\n  expect(checkbox).toHaveFocus()\n\n  userEvent.tab()\n\n  expect(radio).toHaveFocus()\n\n  userEvent.tab()\n\n  expect(number).toHaveFocus()\n\n  userEvent.tab()\n\n  // cycle goes back to first element\n  expect(checkbox).toHaveFocus()\n})\n```\n\n### `async hover(element)`\n\nHovers over `element`.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport Tooltip from '../tooltip'\n\ntest('hover', async () => {\n  const messageText = 'Hello'\n  render(\n    <Tooltip messageText={messageText}>\n      <TrashIcon aria-label=\"Delete\" />\n    </Tooltip>,\n  )\n\n  await userEvent.hover(screen.getByLabelText(/delete/i))\n  expect(screen.getByText(messageText)).toBeInTheDocument()\n  await userEvent.unhover(screen.getByLabelText(/delete/i))\n  expect(screen.queryByText(messageText)).not.toBeInTheDocument()\n})\n```\n\n### `async unhover(element)`\n\nUnhovers out of `element`.\n\n> See [above](#async-hoverelement) for an example\n\n## Issues\n\n_Looking to contribute? Look for the [Good First Issue][good-first-issue]\nlabel._\n\n### üêõ Bugs\n\nPlease file an issue for bugs, missing documentation, or unexpected behavior.\n\n[**See Bugs**][bugs]\n\n### üí° Feature Requests\n\nPlease file an issue to suggest new features. Vote on feature requests by adding\na üëç. This helps maintainers prioritize what to work on.\n\n[**See Feature Requests**][requests]\n\n## Contributors ‚ú®\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://twitter.com/Gpx\"><img src=\"https://avatars0.githubusercontent.com/u/767959?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Giorgio Polvara</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3AGpx\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Gpx\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Gpx\" title=\"Documentation\">üìñ</a> <a href=\"#ideas-Gpx\" title=\"Ideas, Planning, & Feedback\">ü§î</a> <a href=\"#infra-Gpx\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">üöá</a> <a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3AGpx\" title=\"Reviewed Pull Requests\">üëÄ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Gpx\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/weyert\"><img src=\"https://avatars3.githubusercontent.com/u/7049?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Weyert de Boer</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=weyert\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=weyert\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/twhitbeck\"><img src=\"https://avatars2.githubusercontent.com/u/762471?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tim Whitbeck</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Atwhitbeck\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=twhitbeck\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://michaeldeboey.be\"><img src=\"https://avatars3.githubusercontent.com/u/6643991?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Micha√´l De Boey</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=MichaelDeBoey\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/michaellasky\"><img src=\"https://avatars2.githubusercontent.com/u/6646599?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michael Lasky</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=michaellasky\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=michaellasky\" title=\"Documentation\">üìñ</a> <a href=\"#ideas-michaellasky\" title=\"Ideas, Planning, & Feedback\">ü§î</a></td>\n    <td align=\"center\"><a href=\"https://github.com/shomalgan\"><img src=\"https://avatars0.githubusercontent.com/u/2883620?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ahmad Esmaeilzadeh</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=shomalgan\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://calebeby.ml\"><img src=\"https://avatars1.githubusercontent.com/u/13206945?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Caleb Eby</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=calebeby\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/issues?q=author%3Acalebeby\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3Acalebeby\" title=\"Reviewed Pull Requests\">üëÄ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://afontcu.dev\"><img src=\"https://avatars0.githubusercontent.com/u/9197791?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Adri√† Fontcuberta</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Aafontcu\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=afontcu\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/commits?author=afontcu\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/skywickenden\"><img src=\"https://avatars2.githubusercontent.com/u/4930551?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sky Wickenden</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Askywickenden\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=skywickenden\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bogdanbodnar\"><img src=\"https://avatars2.githubusercontent.com/u/9034868?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Bodnar Bogdan</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Abogdanbodnar\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=bogdanbodnar\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://zach.website\"><img src=\"https://avatars0.githubusercontent.com/u/1699281?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Zach Perrault</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=zperrault\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/ryanastelly\"><img src=\"https://avatars1.githubusercontent.com/u/4138357?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ryan Stelly</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=FLGMwt\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/benmonro\"><img src=\"https://avatars3.githubusercontent.com/u/399236?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ben Monro</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=benmonro\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/GentlemanHal\"><img src=\"https://avatars2.githubusercontent.com/u/415521?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Christopher Martin</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=GentlemanHal\" title=\"Code\">üíª</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"http://fullgallop.me\"><img src=\"https://avatars0.githubusercontent.com/u/32252769?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Yuancheng Wu</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3AYuanchengWu\" title=\"Reviewed Pull Requests\">üëÄ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/maheshjag\"><img src=\"https://avatars0.githubusercontent.com/u/1705603?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>MJ</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=maheshjag\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jmcriffey\"><img src=\"https://avatars0.githubusercontent.com/u/2831294?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jeff McRiffey</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jmcriffey\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=jmcriffey\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://jagascript.com\"><img src=\"https://avatars0.githubusercontent.com/u/4562878?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jaga Santagostino</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=kandros\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=kandros\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://jordy.app\"><img src=\"https://avatars3.githubusercontent.com/u/12712484?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>jordyvandomselaar</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jordyvandomselaar\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=jordyvandomselaar\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://lyamkin.com\"><img src=\"https://avatars2.githubusercontent.com/u/3854930?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ilya Lyamkin</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=ilyamkin\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=ilyamkin\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://todofullstack.com\"><img src=\"https://avatars2.githubusercontent.com/u/4474353?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kenneth Luj√°n Rosas</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=klujanrosas\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=klujanrosas\" title=\"Tests\">‚ö†Ô∏è</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"http://thejoemorgan.com\"><img src=\"https://avatars1.githubusercontent.com/u/2388943?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Joe Morgan</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jsmapr1\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/wachunga\"><img src=\"https://avatars0.githubusercontent.com/u/438545?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>David Hirtle</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=wachunga\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bdh1011\"><img src=\"https://avatars2.githubusercontent.com/u/8446067?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>whiteUnicorn</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=bdh1011\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://www.matej.snuderl.si/\"><img src=\"https://avatars3.githubusercontent.com/u/8524109?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Matej ≈†nuderl</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3AMeemaw\" title=\"Reviewed Pull Requests\">üëÄ</a></td>\n    <td align=\"center\"><a href=\"https://pomb.us\"><img src=\"https://avatars1.githubusercontent.com/u/1911623?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rodrigo Pombo</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=pomber\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"http://github.com/Raynos\"><img src=\"https://avatars3.githubusercontent.com/u/479538?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jake Verbaten</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=Raynos\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://skovy.dev\"><img src=\"https://avatars1.githubusercontent.com/u/5247455?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Spencer Miskoviak</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=skovy\" title=\"Documentation\">üìñ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://proling.ru/\"><img src=\"https://avatars2.githubusercontent.com/u/16336572?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vadim Shvetsov</b></sub></a><br /><a href=\"#ideas-vadimshvetsov\" title=\"Ideas, Planning, & Feedback\">ü§î</a> <a href=\"https://github.com/testing-library/user-event/commits?author=vadimshvetsov\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=vadimshvetsov\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/9still\"><img src=\"https://avatars0.githubusercontent.com/u/4924760?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Greg Shtilman</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=9still\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=9still\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/issues?q=author%3A9still\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/rbusquet\"><img src=\"https://avatars1.githubusercontent.com/u/7198302?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ricardo Busquet</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Arbusquet\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=rbusquet\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=rbusquet\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/dougbacelar/en\"><img src=\"https://avatars3.githubusercontent.com/u/9267678?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Doug Bacelar</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=dougbacelar\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=dougbacelar\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/kayleighridd\"><img src=\"https://avatars3.githubusercontent.com/u/36446015?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kayleigh Ridd</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Akayleighridd\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=kayleighridd\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=kayleighridd\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://malcolmkee.com\"><img src=\"https://avatars0.githubusercontent.com/u/24528512?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Malcolm Kee</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=malcolm-kee\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=malcolm-kee\" title=\"Documentation\">üìñ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=malcolm-kee\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/kelvinlzhang\"><img src=\"https://avatars3.githubusercontent.com/u/8291294?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>kelvinlzhang</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Akelvinlzhang\" title=\"Bug reports\">üêõ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/krzysztof-hellostudio\"><img src=\"https://avatars3.githubusercontent.com/u/1942664?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Krzysztof</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Akrzysztof-hellostudio\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/hontas\"><img src=\"https://avatars2.githubusercontent.com/u/1521113?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Pontus Lundin</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=hontas\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=hontas\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://hudochenkov.com/\"><img src=\"https://avatars2.githubusercontent.com/u/654597?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aleks Hudochenkov</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Ahudochenkov\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nanivijay\"><img src=\"https://avatars0.githubusercontent.com/u/5945591?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vijay Kumar Otti</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Ananivijay\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"http://tompicton.com\"><img src=\"https://avatars2.githubusercontent.com/u/12588098?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tom Picton</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Atpict\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=tpict\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=tpict\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://hung.dev\"><img src=\"https://avatars3.githubusercontent.com/u/8603085?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hung Viet Nguyen</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Anvh95\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://nickmccurdy.com/\"><img src=\"https://avatars0.githubusercontent.com/u/927220?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nick McCurdy</b></sub></a><br /><a href=\"#projectManagement-nickmccurdy\" title=\"Project Management\">üìÜ</a> <a href=\"#question-nickmccurdy\" title=\"Answering Questions\">üí¨</a> <a href=\"https://github.com/testing-library/user-event/commits?author=nickmccurdy\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=nickmccurdy\" title=\"Tests\">‚ö†Ô∏è</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n## LICENSE\n\nMIT\n\n<!-- prettier-ignore-start -->\n[npm]: https://www.npmjs.com\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/travis/testing-library/user-event.svg?style=flat-square\n[build]: https://travis-ci.org/testing-library/user-event\n[coverage-badge]: https://img.shields.io/codecov/c/github/testing-library/user-event.svg?style=flat-square\n[coverage]: https://codecov.io/github/testing-library/user-event\n[version-badge]: https://img.shields.io/npm/v/@testing-library/user-event.svg?style=flat-square\n[package]: https://www.npmjs.com/package/@testing-library/user-event\n[downloads-badge]: https://img.shields.io/npm/dm/@testing-library/user-event.svg?style=flat-square\n[npmtrends]: http://www.npmtrends.com/@testing-library/user-event\n[license-badge]: https://img.shields.io/npm/l/@testing-library/user-event.svg?style=flat-square\n[license]: https://github.com/testing-library/user-event/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/testing-library/user-event/blob/master/other/CODE_OF_CONDUCT.md\n[emojis]: https://github.com/all-contributors/all-contributors#emoji-key\n[all-contributors]: https://github.com/all-contributors/all-contributors\n[bugs]: https://github.com/testing-library/user-event/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Acreated-desc+label%3Abug\n[requests]: https://github.com/testing-library/user-event/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3Aenhancement\n[good-first-issue]: https://github.com/testing-library/user-event/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3Aenhancement+label%3A%22good+first+issue%22\n<!-- prettier-ignore-end -->\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2020 Giorgio Polvara\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@testing-library/user-event/-/user-event-11.4.1.tgz#2134e4cbbb345dbc49001123ff9a036f09259464",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@testing-library/user-event/-/user-event-11.4.1.tgz",
    "hash": "2134e4cbbb345dbc49001123ff9a036f09259464",
    "integrity": "sha512-ZaK+3AmocU2WjJ7UyrlnmdPecYt4fridqMwrniENCqoy/Pj2Nc9tTnpjCvMN/Ql/DQ0eRqfBoZdKNqYPBMZFhA==",
    "registry": "npm",
    "packageName": "@testing-library/user-event",
    "cacheIntegrity": "sha512-ZaK+3AmocU2WjJ7UyrlnmdPecYt4fridqMwrniENCqoy/Pj2Nc9tTnpjCvMN/Ql/DQ0eRqfBoZdKNqYPBMZFhA== sha1-ITTky7s0XbxJABEj/5oDbwkllGQ="
  },
  "registry": "npm",
  "hash": "2134e4cbbb345dbc49001123ff9a036f09259464"
}