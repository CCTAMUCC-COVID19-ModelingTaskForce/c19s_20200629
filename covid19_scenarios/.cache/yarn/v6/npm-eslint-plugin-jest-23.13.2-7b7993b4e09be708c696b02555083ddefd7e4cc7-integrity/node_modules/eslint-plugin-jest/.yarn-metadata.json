{
  "manifest": {
    "name": "eslint-plugin-jest",
    "version": "23.13.2",
    "description": "Eslint rules for Jest",
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/jest-community/eslint-plugin-jest.git"
    },
    "license": "MIT",
    "author": {
      "name": "Jonathan Kim",
      "email": "hello@jkimbo.com",
      "url": "jkimbo.com"
    },
    "main": "lib/",
    "files": [
      "docs/",
      "lib/"
    ],
    "scripts": {
      "build": "babel --extensions .js,.ts src --out-dir lib --copy-files",
      "postbuild": "rimraf lib/__tests__ lib/**/__tests__",
      "lint": "eslint . --ignore-pattern '!.eslintrc.js' --ext js,ts",
      "prepare": "yarn build && yarn postbuild",
      "prepublishOnly": "yarn build",
      "prettylint": "prettylint docs/**/*.md README.md package.json",
      "pretest": "yarn build",
      "test": "jest",
      "tools:generate-rules-table": "ts-node -T tools/generate-rules-table",
      "typecheck": "tsc -p ."
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged",
        "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS"
      }
    },
    "commitlint": {
      "extends": [
        "@commitlint/config-conventional"
      ]
    },
    "lint-staged": {
      "*.{js,ts}": [
        "eslint --fix",
        "git add"
      ],
      "*.{md,json}": [
        "prettier --write",
        "git add"
      ]
    },
    "prettier": {
      "proseWrap": "always",
      "singleQuote": true,
      "trailingComma": "all"
    },
    "jest": {
      "coverageThreshold": {
        "global": {
          "branches": 100,
          "functions": 100,
          "lines": 100,
          "statements": 100
        }
      },
      "projects": [
        {
          "displayName": "test",
          "testEnvironment": "node",
          "testPathIgnorePatterns": [
            "<rootDir>/lib/.*"
          ]
        },
        {
          "displayName": "lint",
          "runner": "jest-runner-eslint",
          "testMatch": [
            "<rootDir>/**/*.{js,ts}"
          ],
          "testPathIgnorePatterns": [
            "<rootDir>/lib/.*"
          ]
        }
      ]
    },
    "dependencies": {
      "@typescript-eslint/experimental-utils": "^2.5.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.4.4",
      "@babel/core": "^7.4.4",
      "@babel/preset-env": "^7.4.4",
      "@babel/preset-typescript": "^7.3.3",
      "@commitlint/cli": "^8.2.0",
      "@commitlint/config-conventional": "^8.2.0",
      "@schemastore/package": "^0.0.5",
      "@semantic-release/changelog": "^3.0.5",
      "@semantic-release/git": "^7.0.17",
      "@types/eslint": "^6.1.3",
      "@types/jest": "^25.1.0",
      "@types/node": "^12.6.6",
      "@typescript-eslint/eslint-plugin": "^2.5.0",
      "@typescript-eslint/parser": "^2.5.0",
      "babel-jest": "^25.2.0",
      "babel-plugin-replace-ts-export-assignment": "^0.0.2",
      "eslint": "^5.1.0 || ^6.0.0",
      "eslint-config-prettier": "^6.5.0",
      "eslint-plugin-eslint-comments": "^3.1.2",
      "eslint-plugin-eslint-plugin": "^2.0.0",
      "eslint-plugin-import": "^2.20.2",
      "eslint-plugin-node": "^11.0.0",
      "eslint-plugin-prettier": "^3.0.0",
      "husky": "^3.0.9",
      "jest": "^25.2.0",
      "jest-runner-eslint": "^0.8.0",
      "lint-staged": "^9.4.2",
      "prettier": "^1.19.1",
      "prettylint": "^1.0.0",
      "resolve-from": "^5.0.0",
      "rimraf": "^3.0.0",
      "semantic-release": "^15.13.28",
      "ts-node": "^8.10.1",
      "typescript": "^3.5.3"
    },
    "peerDependencies": {
      "eslint": ">=5"
    },
    "engines": {
      "node": ">=8"
    },
    "release": {
      "plugins": [
        "@semantic-release/commit-analyzer",
        "@semantic-release/release-notes-generator",
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/git",
        "@semantic-release/github"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-eslint-plugin-jest-23.13.2-7b7993b4e09be708c696b02555083ddefd7e4cc7-integrity/node_modules/eslint-plugin-jest/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://eslint.org/\">\n    <img width=\"150\" height=\"150\" src=\"https://eslint.org/assets/img/logo.svg\">\n  </a>\n  <a href=\"https://facebook.github.io/jest/\">\n    <img width=\"150\" height=\"150\" vspace=\"\" hspace=\"25\" src=\"https://jestjs.io/img/jest.png\">\n  </a>\n  <h1>eslint-plugin-jest</h1>\n  <p>ESLint plugin for Jest</p>\n</div>\n\n[![Actions Status](https://github.com/jest-community/eslint-plugin-jest/workflows/Unit%20tests/badge.svg?branch=master)](https://github.com/jest-community/eslint-plugin-jest/actions)\n[![Renovate badge](https://badges.renovateapi.com/github/jest-community/eslint-plugin-jest)](https://renovatebot.com/)\n\n## Installation\n\n```\n$ yarn add --dev eslint eslint-plugin-jest\n```\n\n**Note:** If you installed ESLint globally then you must also install\n`eslint-plugin-jest` globally.\n\n## Usage\n\nAdd `jest` to the plugins section of your `.eslintrc` configuration file. You\ncan omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"jest\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jest/no-disabled-tests\": \"warn\",\n    \"jest/no-focused-tests\": \"error\",\n    \"jest/no-identical-title\": \"error\",\n    \"jest/prefer-to-have-length\": \"warn\",\n    \"jest/valid-expect\": \"error\"\n  }\n}\n```\n\nYou can also whitelist the environment variables provided by Jest by doing:\n\n```json\n{\n  \"env\": {\n    \"jest/globals\": true\n  }\n}\n```\n\nThe behaviour of some rules (specifically `no-deprecated-functions`) change\ndepending on the version of `jest` being used.\n\nThis setting is detected automatically based off the version of the `jest`\npackage installed in `node_modules`, but it can also be provided explicitly if\ndesired:\n\n```json\n{\n  \"settings\": {\n    \"jest\": {\n      \"version\": 26\n    }\n  }\n}\n```\n\n## Shareable configurations\n\n### Recommended\n\nThis plugin exports a recommended configuration that enforces good testing\npractices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/recommended\"]\n}\n```\n\n### Style\n\nThis plugin also exports a configuration named `style`, which adds some\nstylistic rules, such as `prefer-to-be-null`, which enforces usage of `toBeNull`\nover `toBe(null)`.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/style\"]\n}\n```\n\nSee\n[ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information about extending configuration files.\n\n### All\n\nIf you want to enable all rules instead of only some you can do so by adding the\n`all` configuration to your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/all\"]\n}\n```\n\nWhile the `recommended` and `style` configurations only change in major versions\nthe `all` configuration may change in any release and is thus unsuited for\ninstallations requiring long-term consistency.\n\n## Rules\n\n<!-- begin rules list -->\n\n| Rule                                                                   | Description                                                     | Configurations   | Fixable      |\n| ---------------------------------------------------------------------- | --------------------------------------------------------------- | ---------------- | ------------ |\n| [consistent-test-it](docs/rules/consistent-test-it.md)                 | Have control over `test` and `it` usages                        |                  | ![fixable][] |\n| [expect-expect](docs/rules/expect-expect.md)                           | Enforce assertion to be made in a test body                     | ![recommended][] |              |\n| [lowercase-name](docs/rules/lowercase-name.md)                         | Enforce lowercase test names                                    |                  | ![fixable][] |\n| [no-alias-methods](docs/rules/no-alias-methods.md)                     | Disallow alias methods                                          | ![style][]       | ![fixable][] |\n| [no-commented-out-tests](docs/rules/no-commented-out-tests.md)         | Disallow commented out tests                                    | ![recommended][] |              |\n| [no-deprecated-functions](docs/rules/no-deprecated-functions.md)       | Disallow use of deprecated functions                            |                  | ![fixable][] |\n| [no-disabled-tests](docs/rules/no-disabled-tests.md)                   | Disallow disabled tests                                         | ![recommended][] |              |\n| [no-duplicate-hooks](docs/rules/no-duplicate-hooks.md)                 | Disallow duplicate setup and teardown hooks                     |                  |              |\n| [no-export](docs/rules/no-export.md)                                   | Prevent exporting from test files                               | ![recommended][] |              |\n| [no-focused-tests](docs/rules/no-focused-tests.md)                     | Disallow focused tests                                          | ![recommended][] | ![fixable][] |\n| [no-hooks](docs/rules/no-hooks.md)                                     | Disallow setup and teardown hooks                               |                  |              |\n| [no-identical-title](docs/rules/no-identical-title.md)                 | Disallow identical titles                                       | ![recommended][] |              |\n| [no-if](docs/rules/no-if.md)                                           | Disallow conditional logic                                      |                  |              |\n| [no-jasmine-globals](docs/rules/no-jasmine-globals.md)                 | Disallow Jasmine globals                                        | ![recommended][] | ![fixable][] |\n| [no-jest-import](docs/rules/no-jest-import.md)                         | Disallow importing Jest                                         | ![recommended][] |              |\n| [no-large-snapshots](docs/rules/no-large-snapshots.md)                 | disallow large snapshots                                        |                  |              |\n| [no-mocks-import](docs/rules/no-mocks-import.md)                       | Disallow manually importing from **mocks**                      | ![recommended][] |              |\n| [no-restricted-matchers](docs/rules/no-restricted-matchers.md)         | Disallow specific matchers & modifiers                          |                  |              |\n| [no-standalone-expect](docs/rules/no-standalone-expect.md)             | Prevents expects that are outside of an it or test block.       | ![recommended][] |              |\n| [no-test-callback](docs/rules/no-test-callback.md)                     | Avoid using a callback in asynchronous tests                    | ![recommended][] | ![fixable][] |\n| [no-test-prefixes](docs/rules/no-test-prefixes.md)                     | Use `.only` and `.skip` over `f` and `x`                        | ![recommended][] | ![fixable][] |\n| [no-test-return-statement](docs/rules/no-test-return-statement.md)     | Disallow explicitly returning from tests                        |                  |              |\n| [no-try-expect](docs/rules/no-try-expect.md)                           | Prefer using toThrow for exception tests                        | ![recommended][] |              |\n| [prefer-called-with](docs/rules/prefer-called-with.md)                 | Suggest using `toBeCalledWith()` OR `toHaveBeenCalledWith()`    |                  |              |\n| [prefer-expect-assertions](docs/rules/prefer-expect-assertions.md)     | Suggest using `expect.assertions()` OR `expect.hasAssertions()` |                  |              |\n| [prefer-hooks-on-top](docs/rules/prefer-hooks-on-top.md)               | Suggest to have all hooks at top level                          |                  |              |\n| [prefer-spy-on](docs/rules/prefer-spy-on.md)                           | Suggest using `jest.spyOn()`                                    |                  | ![fixable][] |\n| [prefer-strict-equal](docs/rules/prefer-strict-equal.md)               | Suggest using toStrictEqual()                                   |                  | ![fixable][] |\n| [prefer-to-be-null](docs/rules/prefer-to-be-null.md)                   | Suggest using `toBeNull()`                                      | ![style][]       | ![fixable][] |\n| [prefer-to-be-undefined](docs/rules/prefer-to-be-undefined.md)         | Suggest using `toBeUndefined()`                                 | ![style][]       | ![fixable][] |\n| [prefer-to-contain](docs/rules/prefer-to-contain.md)                   | Suggest using `toContain()`                                     | ![style][]       | ![fixable][] |\n| [prefer-to-have-length](docs/rules/prefer-to-have-length.md)           | Suggest using `toHaveLength()`                                  | ![style][]       | ![fixable][] |\n| [prefer-todo](docs/rules/prefer-todo.md)                               | Suggest using `test.todo`                                       |                  | ![fixable][] |\n| [require-to-throw-message](docs/rules/require-to-throw-message.md)     | Require a message for `toThrow()`                               |                  |              |\n| [require-top-level-describe](docs/rules/require-top-level-describe.md) | Prevents test cases and hooks to be outside of a describe block |                  |              |\n| [valid-describe](docs/rules/valid-describe.md)                         | Enforce valid `describe()` callback                             | ![recommended][] |              |\n| [valid-expect](docs/rules/valid-expect.md)                             | Enforce valid `expect()` usage                                  | ![recommended][] |              |\n| [valid-expect-in-promise](docs/rules/valid-expect-in-promise.md)       | Enforce having return statement when testing with promises      | ![recommended][] |              |\n| [valid-title](docs/rules/valid-title.md)                               | Enforce valid titles                                            |                  | ![fixable][] |\n\n<!-- end rules list -->\n\n## Credit\n\n- [eslint-plugin-mocha](https://github.com/lo1tuma/eslint-plugin-mocha)\n- [eslint-plugin-jasmine](https://github.com/tlvince/eslint-plugin-jasmine)\n\n## Related Projects\n\n### eslint-plugin-jest-formatting\n\nThis project aims to provide formatting rules (auto-fixable where possible) to\nensure consistency and readability in jest test suites.\n\nhttps://github.com/dangreenisrael/eslint-plugin-jest-formatting\n\n[recommended]: https://img.shields.io/badge/-recommended-lightgrey.svg\n[fixable]: https://img.shields.io/badge/-fixable-green.svg\n[style]: https://img.shields.io/badge/-style-blue.svg\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Jonathan Kim\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-jest/-/eslint-plugin-jest-23.13.2.tgz#7b7993b4e09be708c696b02555083ddefd7e4cc7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-jest/-/eslint-plugin-jest-23.13.2.tgz",
    "hash": "7b7993b4e09be708c696b02555083ddefd7e4cc7",
    "integrity": "sha512-qZit+moTXTyZFNDqSIR88/L3rdBlTU7CuW6XmyErD2FfHEkdoLgThkRbiQjzgYnX6rfgLx3Ci4eJmF4Ui5v1Cw==",
    "registry": "npm",
    "packageName": "eslint-plugin-jest",
    "cacheIntegrity": "sha512-qZit+moTXTyZFNDqSIR88/L3rdBlTU7CuW6XmyErD2FfHEkdoLgThkRbiQjzgYnX6rfgLx3Ci4eJmF4Ui5v1Cw== sha1-e3mTtOCb5wjGlrAlVQg93v1+TMc="
  },
  "registry": "npm",
  "hash": "7b7993b4e09be708c696b02555083ddefd7e4cc7"
}