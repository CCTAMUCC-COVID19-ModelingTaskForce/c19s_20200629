{
  "manifest": {
    "name": "eslint-plugin-react-redux",
    "version": "3.0.3",
    "description": "Enforcing best practices for react-redux",
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "react-redux"
    ],
    "author": {
      "name": "diana.suvorova@gmail.com"
    },
    "main": "dist/index.js",
    "scripts": {
      "lint": "eslint ./lib ./tests",
      "test": "npm run lint && mocha --compilers js:babel-register tests --recursive",
      "semantic-release": "semantic-release",
      "commitmsg": "npm run test && commitlint -e $GIT_PARAMS",
      "build": "rm -fr ./dist && babel ./src --out-dir ./dist --copy-files"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/DianaSuvorova/eslint-plugin-react-redux"
    },
    "devDependencies": {
      "@commitlint/cli": "^6.0.2",
      "@commitlint/config-conventional": "^6.0.2",
      "babel-cli": "^6.26.0",
      "babel-eslint": "^8.1.0",
      "babel-plugin-transform-object-rest-spread": "^6.26.0",
      "babel-preset-env": "^1.7.0",
      "babel-register": "^6.26.0",
      "eslint": "^4.14.0",
      "eslint-config-airbnb": "^16.1.0",
      "eslint-config-standard": "^11.0.0-beta.0",
      "eslint-plugin-import": "^2.8.0",
      "eslint-plugin-jsx-a11y": "^6.0.3",
      "eslint-plugin-node": "^5.2.1",
      "eslint-plugin-promise": "^3.6.0",
      "eslint-plugin-standard": "^3.0.1",
      "husky": "^0.14.3",
      "mocha": "^4.0.1",
      "semantic-release": "^12.4.1"
    },
    "peerDependencies": {
      "eslint-plugin-react": "^7.16.0"
    },
    "engines": {
      "node": ">=6.10.0"
    },
    "license": "ISC",
    "dependencies": {
      "eslint-rule-composer": "^0.3.0",
      "eslint-plugin-react": "^7.16.0"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-eslint-plugin-react-redux-3.0.3-2dfbf6de7088c8c8c0a181e50f47d1bc8849bcec-integrity/node_modules/eslint-plugin-react-redux/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-plugin-react-redux\n\nEnforcing best practices for react-redux\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm i eslint --save-dev\n```\n\nNext, install `eslint-plugin-react-redux`:\n\n```\n$ npm install eslint-plugin-react-redux --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-react-redux` globally.\n\n## Usage\n\nAdd `react-redux` to the plugins section of your `.eslintrc` configuration file. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n    \"plugins\": [\n        \"react-redux\"\n    ],\n    \"extends\": [\n        \"plugin:react-redux/recommended\"\n    ]\n}\n```\n\n\nTo configure individual rules:\n\n```json\n{\n    \"rules\": {\n        \"react-redux/connect-prefer-named-arguments\": 2\n    }\n}\n```\n\n## Supported Rules\n\n* [react-redux/connect-prefer-minimum-two-arguments](docs/rules/connect-prefer-minimum-two-arguments.md) Enforces that connect function has at least 2 arguments.\n* [react-redux/connect-prefer-named-arguments](docs/rules/connect-prefer-named-arguments.md) Enforces that all connect arguments have recommended names.\n* [react-redux/mapDispatchToProps-returns-object](docs/rules/mapDispatchToProps-returns-object.md) Enforces that mapDispatchToProps returns an object.\n* [react-redux/mapDispatchToProps-prefer-shorthand](docs/rules/mapDispatchToProps-prefer-shorthand.md)  Enforces that all mapDispatchToProps use a shorthand method to wrap actions in dispatch calls whenever possible.\n* [react-redux/mapDispatchToProps-prefer-parameters-names](docs/rules/mapDispatchToProps-prefer-parameters-names.md)  Enforces that all mapDispatchToProps parameters have specific names.\n* [react-redux/mapStateToProps-no-store](docs/rules/mapStateToProps-no-store.md) Prohibits binding a whole store object to a component.\n* [react-redux/mapStateToProps-prefer-hoisted](docs/rules/mapStateToProps-prefer-hoisted.md) Flags generation of copies of same-by-value but different-by-reference props.\n* [react-redux/mapStateToProps-prefer-parameters-names](docs/rules/mapStateToProps-prefer-parameters-names.md) Enforces that all mapStateToProps parameters have specific names.\n* [react-redux/no-unused-prop-types](docs/rules/no-unused-prop-types.md) Extension of a react's no-unused-prop-types rule filtering out false positive used in redux context.\n* [react-redux/prefer-separate-component-file](docs/rules/prefer-separate-component-file.md) Enforces that all connected components are defined in a separate file.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-react-redux/-/eslint-plugin-react-redux-3.0.3.tgz#2dfbf6de7088c8c8c0a181e50f47d1bc8849bcec",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-react-redux/-/eslint-plugin-react-redux-3.0.3.tgz",
    "hash": "2dfbf6de7088c8c8c0a181e50f47d1bc8849bcec",
    "integrity": "sha512-kJjE1sFVACgbhTax5MZw/nYjfpxOlmuybC77TA+aKAbcSrGpxK1AdjkJnD8kOMx3xVFtGZe2Z8qLRTdYDf1aNw==",
    "registry": "npm",
    "packageName": "eslint-plugin-react-redux",
    "cacheIntegrity": "sha512-kJjE1sFVACgbhTax5MZw/nYjfpxOlmuybC77TA+aKAbcSrGpxK1AdjkJnD8kOMx3xVFtGZe2Z8qLRTdYDf1aNw== sha1-Lfv23nCIyMjAoYHlD0fRvIhJvOw="
  },
  "registry": "npm",
  "hash": "2dfbf6de7088c8c8c0a181e50f47d1bc8849bcec"
}