{
  "manifest": {
    "name": "eslint-plugin-no-secrets",
    "version": "0.6.8",
    "description": "An eslint rule that searches for potential secrets/keys in code",
    "main": "index.js",
    "scripts": {
      "test": "node tests/lib/rules/no-secrets.js && mocha \"staging/**/*.spec.js\"",
      "test:staging": "mocha \"staging/**/*.spec.js\""
    },
    "keywords": [
      "eslint",
      "eslint-plugin",
      "security",
      "secure",
      "secrets",
      "security",
      "lint",
      "eslintplugin"
    ],
    "author": {
      "name": "Nick Deis",
      "email": "nickjdeis@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/nickdeis/eslint-plugin-no-secrets"
    },
    "license": "MIT",
    "devDependencies": {
      "eslint-plugin-self": "^1.2.0",
      "eslint6": "npm:eslint@^6.8.0",
      "mocha": "^7.1.1"
    },
    "peerDependencies": {
      "eslint": ">=3.0.0"
    },
    "dependencies": {},
    "engines": {
      "npm": ">=6.9.0",
      "node": ">=10.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-eslint-plugin-no-secrets-0.6.8-cdfdcec78ad0bdf104aa59f36c841b65a477533d-integrity/node_modules/eslint-plugin-no-secrets/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Build Status](https://travis-ci.org/nickdeis/eslint-plugin-no-secrets.svg)](https://travis-ci.org/nickdeis/eslint-plugin-no-secrets)\n\n\n# eslint-plugin-no-secrets\n\nAn eslint rule that searches for potential secrets/keys in code and JSON files.\n\n<!-- vscode-markdown-toc -->\n* 1. [Usage](#Usage)\n\t* 1.1. [Include JSON files](#IncludeJSONfiles)\n* 2. [Config](#Config)\n* 3. [When it's really not a secret](#Whenitsreallynotasecret)\n\t* 3.1. [ Either disable it with a comment](#Eitherdisableitwithacomment)\n\t* 3.2. [ use the `ignoreContent` to ignore certain content](#usetheignoreContenttoignorecertaincontent)\n\t* 3.3. [ Use `ignoreIdentifiers` to ignore certain variable/property names](#UseignoreIdentifierstoignorecertainvariablepropertynames)\n\t* 3.4. [ Use `additionalDelimiters` to further split up tokens](#UseadditionalDelimiterstofurthersplituptokens)\n* 4. [Options](#Options)\n* 5. [Acknowledgements](#Acknowledgements)\n\n<!-- vscode-markdown-toc-config\n\tnumbering=true\n\tautoSave=true\n\t/vscode-markdown-toc-config -->\n<!-- /vscode-markdown-toc -->\n\n##  1. <a name='Usage'></a>Usage\n\n`npm i -D eslint-plugin-no-secrets`\n\n*.eslintrc*\n```json\n{\n   \"plugins\":[\"no-secrets\"],\n   \"rules\":{\n       \"no-secrets/no-secrets\":\"error\"\n   }\n}\n```\n\n```js\n//Found a string with entropy 4.3 : \"ZWVTjPQSdhwRgl204Hc51YCsritMIzn8B=/p9UyeX7xu6KkAGqfm3FJ+oObLDNEva\"\nconst A_SECRET = \"ZWVTjPQSdhwRgl204Hc51YCsritMIzn8B=/p9UyeX7xu6KkAGqfm3FJ+oObLDNEva\";\n//Found a string that matches \"AWS API Key\" : \"AKIAIUWUUQQN3GNUA88V\"\nconst AWS_TOKEN = \"AKIAIUWUUQQN3GNUA88V\";\n```\n\n###  1.1. <a name='IncludeJSONfiles'></a>Include JSON files\n\nIf you want to include JSON files, either us the `--ext` flag from the command line\n\n`eslint . --ext .json,.js`\n\nor run them on individual JSON files\n\n`eslint config.json`\n\n##  2. <a name='Config'></a>Config\n\nDecrease the tolerance for entropy\n\n```json\n{\n   \"plugins\":[\"no-secrets\"],\n   \"rules\":{\n       \"no-secrets/no-secrets\":[\"error\",{\"tolerance\":3.2}]\n   }\n}\n```\n\nAdd additional patterns to check for certain token formats.  \nStandard patterns can be found [here](./regexes.js)\n\n\n```json\n{\n \"plugins\": [\"no-secrets\"],\n \"rules\": {\n   \"no-secrets/no-secrets\": [\n     \"error\",\n     { \"additionalRegexes\": { \"Basic Auth\": \"Authorization: Basic [A-Za-z0-9+/=]*\" } }\n   ]\n }\n}\n```\n##  3. <a name='Whenitsreallynotasecret'></a>When it's really not a secret\n\n###  3.1. <a name='Eitherdisableitwithacomment'></a> Either disable it with a comment\n\n```javascript\n// Set of potential base64 characters\n// eslint-disable-next-line no-secrets/no-secrets\nconst BASE64_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n```\n\nThis will tell future maintainers of the codebase that this suspicious string isn't an oversight\n\n###  3.2. <a name='usetheignoreContenttoignorecertaincontent'></a> use the `ignoreContent` to ignore certain content\n\n```json\n{\n   \"plugins\":[\"no-secrets\"],\n   \"rules\":{\n       \"no-secrets/no-secrets\":[\"error\",{\"ignoreContent\":\"^ABCD\"}]\n   }\n}\n```\n\n###  3.3. <a name='UseignoreIdentifierstoignorecertainvariablepropertynames'></a> Use `ignoreIdentifiers` to ignore certain variable/property names\n\n```json\n{\n   \"plugins\":[\"no-secrets\"],\n   \"rules\":{\n       \"no-secrets/no-secrets\":[\"error\",{\"ignoreIdentifiers\":[\"BASE64_CHARS\"]}]\n   }\n}\n```\n\n###  3.4. <a name='UseadditionalDelimiterstofurthersplituptokens'></a> Use `additionalDelimiters` to further split up tokens\n\nTokens will always be split up by whitespace within a string. However, sometimes words that are delimited by something else (e.g. dashes, periods, camelcase words). You can use `additionalDelimiters` to handle these cases.\n\nFor example, if you want to split words up by the character `.` and by camelcase, you could use this configuration:\n\n```json\n{\n   \"plugins\":[\"no-secrets\"],\n   \"rules\":{\n       \"no-secrets/no-secrets\":[\"error\",{\"additionalDelimiters\":[\".\",\"(?=[A-Z][a-z])\"]}]\n   }\n}\n```\n\n\n##  4. <a name='Options'></a>Options\n\n|Option|Description|Default|Type|\n|------|-----------|----------------|----|\n|tolerance|Maximum \"randomness\"/entropy allowed|`4`|`number`|\n|additionalRegexes|Object of additional patterns to check. Key is check name and value is corresponding pattern |`{}`|{\\[regexCheckName:string]:string \\| RegExp}|\n|ignoreContent|Will ignore the *entire* string if matched. Expects either a pattern or an array of patterns. This option takes precedent over `additionalRegexes` and the default regular expressions|`[]`|string \\| RegExp \\| (string\\|RegExp)[]|\n|ignoreModules|Ignores strings that are an argument in `import()` and `require()` or is the path in an `import` statement.|`true`|`boolean`|\n|ignoreIdentifiers|Ignores the values of properties and variables that match a pattern or an array of patterns. |`[]`|string \\| RegExp \\| (string\\|RegExp)[]|\n|ignoreCase|Ignores character case when calculating entropy. This could lead to some false negatives|`false`|`boolean`|\n|additionalDelimiters|In addition to splitting the string by whitespace, tokens will be further split by these delimiters|`[]`|(string\\|RegExp)[]|\n\n##  5. <a name='Acknowledgements'></a>Acknowledgements\n\nHuge thanks to [truffleHog](https://github.com/dxa4481/truffleHog) for the inspiration, the regexes, and the measure of entropy.\n\n\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Nick Deis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-no-secrets/-/eslint-plugin-no-secrets-0.6.8.tgz#cdfdcec78ad0bdf104aa59f36c841b65a477533d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-no-secrets/-/eslint-plugin-no-secrets-0.6.8.tgz",
    "hash": "cdfdcec78ad0bdf104aa59f36c841b65a477533d",
    "integrity": "sha512-hX/z+V6oEFBaY6GHRYPv1mXyieq0z3oijE8C3muYhhyjICRS2Uk+RPMwK700ARkQIKFWYsezXc7hmISeqHbEZA==",
    "registry": "npm",
    "packageName": "eslint-plugin-no-secrets",
    "cacheIntegrity": "sha512-hX/z+V6oEFBaY6GHRYPv1mXyieq0z3oijE8C3muYhhyjICRS2Uk+RPMwK700ARkQIKFWYsezXc7hmISeqHbEZA== sha1-zf3Ox4rQvfEEqlnzbIQbZaR3Uz0="
  },
  "registry": "npm",
  "hash": "cdfdcec78ad0bdf104aa59f36c841b65a477533d"
}