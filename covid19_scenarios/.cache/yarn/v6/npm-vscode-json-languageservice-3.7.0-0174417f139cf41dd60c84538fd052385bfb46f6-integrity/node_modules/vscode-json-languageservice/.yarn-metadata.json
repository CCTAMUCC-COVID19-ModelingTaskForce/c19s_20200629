{
  "manifest": {
    "name": "vscode-json-languageservice",
    "version": "3.7.0",
    "description": "Language service for JSON",
    "main": "./lib/umd/jsonLanguageService.js",
    "typings": "./lib/umd/jsonLanguageService",
    "module": "./lib/esm/jsonLanguageService.js",
    "author": {
      "name": "Microsoft Corporation"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/Microsoft/vscode-json-languageservice"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/Microsoft/vscode-json-languageservice"
    },
    "devDependencies": {
      "@types/mocha": "^7.0.2",
      "@types/node": "^10.12.21",
      "@typescript-eslint/eslint-plugin": "^3.1.0",
      "@typescript-eslint/parser": "^3.1.0",
      "eslint": "^7.1.0",
      "mocha": "^7.2.0",
      "nyc": "^15.0.1",
      "rimraf": "^3.0.2",
      "typescript": "^3.8.3"
    },
    "dependencies": {
      "jsonc-parser": "^2.2.1",
      "vscode-languageserver-textdocument": "^1.0.1",
      "vscode-languageserver-types": "^3.15.1",
      "vscode-nls": "^4.1.2",
      "vscode-uri": "^2.1.2"
    },
    "scripts": {
      "prepublishOnly": "npm run clean && npm run compile-esm && npm run test && npm run remove-sourcemap-refs",
      "postpublish": "node ./build/post-publish.js",
      "compile": "tsc -p ./src",
      "compile-esm": "tsc -p ./src/tsconfig.esm.json",
      "clean": "rimraf lib",
      "remove-sourcemap-refs": "node ./build/remove-sourcemap-refs.js",
      "watch": "tsc -w -p ./src",
      "pretest": "npm run compile",
      "test": "mocha",
      "posttest": "npm run lint",
      "coverage": "nyc -r lcov npm run test",
      "lint": "eslint src/**/*.ts",
      "install-types-next": "npm install vscode-languageserver-types@next -f -S && npm install vscode-languageserver-textdocument@next -f -S",
      "preversion": "npm test",
      "postversion": "git push && git push --tags"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-vscode-json-languageservice-3.7.0-0174417f139cf41dd60c84538fd052385bfb46f6-integrity/node_modules/vscode-json-languageservice/package.json",
    "readmeFilename": "README.md",
    "readme": "# vscode-json-languageservice\nJSON language service extracted from VSCode to be reused, e.g in the Monaco editor.\n\n[![npm Package](https://img.shields.io/npm/v/vscode-json-languageservice.svg?style=flat-square)](https://www.npmjs.org/package/vscode-json-languageservice)\n[![NPM Downloads](https://img.shields.io/npm/dm/vscode-json-languageservice.svg)](https://npmjs.org/package/vscode-json-languageservice)\n[![Build Status](https://travis-ci.org/Microsoft/vscode-json-languageservice.svg?branch=master)](https://travis-ci.org/Microsoft/vscode-json-languageservice)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nWhy?\n----\nThe _vscode-json-languageservice_ contains the language smarts behind the JSON editing experience of Visual Studio Code\nand the Monaco editor.\n - *doValidation* analyses an input string and returns syntax and lint errros.\n - *doComplete* provides completion proposals for a given location. *doResolve* resolves a completion proposal\n - *doResolve* resolves a completion proposals.\n - *doHover* provides a hover text for a given location.\n - *findDocumentSymbols* provides all symbols in the given document\n - *findDocumentColors* provides all color symbols in the given document, *getColorPresentations* returns available color formats for a color symbol.\n - *format* formats the code at the given range.\n - *getFoldingRanges* gets folding ranges for the given document\n - *getSelectionRanges* gets selection ranges for a given location.\n\n - use *parseJSONDocument* create a JSON document from source code, or *newJSONDocument* to create the document from an AST.\n\nInstallation\n------------\n\n    npm install --save vscode-json-languageservice\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vscode-json-languageservice/-/vscode-json-languageservice-3.7.0.tgz#0174417f139cf41dd60c84538fd052385bfb46f6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vscode-json-languageservice/-/vscode-json-languageservice-3.7.0.tgz",
    "hash": "0174417f139cf41dd60c84538fd052385bfb46f6",
    "integrity": "sha512-nGLqcBhTjdfkl8Dz9sYGK/ZCTjscYFoIjYw+qqkWB+vyNfM0k/AyIoT73DQvB/PArteCKjEVfQUF72GRZEDSbQ==",
    "registry": "npm",
    "packageName": "vscode-json-languageservice",
    "cacheIntegrity": "sha512-nGLqcBhTjdfkl8Dz9sYGK/ZCTjscYFoIjYw+qqkWB+vyNfM0k/AyIoT73DQvB/PArteCKjEVfQUF72GRZEDSbQ== sha1-AXRBfxOc9B3WDIRTj9BSOFv7RvY="
  },
  "registry": "npm",
  "hash": "0174417f139cf41dd60c84538fd052385bfb46f6"
}