{
  "manifest": {
    "name": "jest-chain",
    "version": "1.1.5",
    "description": "Chain Jest matchers together to create one powerful assertion",
    "main": "dist/index.js",
    "files": [
      "dist",
      "README.md",
      "LICENSE",
      "types/index.d.ts"
    ],
    "types": "./types/index.d.ts",
    "scripts": {
      "build": "babel src -d dist --ignore src/**/*.test.js",
      "contributor": "all-contributors add",
      "contributor:gen": "all-contributors generate",
      "lint": "eslint src",
      "lint:fix": "yarn lint --fix",
      "precommit": "lint-staged",
      "prepublishOnly": "yarn build",
      "prettier": "prettier 'src/**/*.js' --write --single-quote=true --print-width=120",
      "test": "jest",
      "test:coverage": "yarn test --coverage",
      "test:report": "codecov"
    },
    "keywords": [
      "jest",
      "matchers",
      "assertions",
      "chain",
      "chainable",
      "expect",
      "test"
    ],
    "author": {
      "name": "Matt Phillips",
      "email": "matt@mattphillips.io",
      "url": "mattphillips.io"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/mattphillips/jest-chain.git"
    },
    "bugs": {
      "url": "https://github.com/mattphillips/jest-chain/issues"
    },
    "homepage": "https://github.com/mattphillips/jest-chain#readme",
    "devDependencies": {
      "@babel/cli": "^7.8.3",
      "@babel/core": "^7.8.3",
      "@babel/plugin-transform-modules-commonjs": "^7.8.3",
      "@types/jest": "^25.1.0",
      "babel-eslint": "^8.2.3",
      "codecov": "^3.0.1",
      "eslint": "^4.19.1",
      "eslint-plugin-import": "^2.11.0",
      "eslint-plugin-jest": "^21.15.1",
      "husky": "^0.14.3",
      "jest": "^25.1.0",
      "jest-extended": "^0.11.5",
      "lint-staged": "^7.0.5",
      "prettier": "^1.12.1",
      "pretty-format": "^22.4.3"
    },
    "lint-staged": {
      "*.js": [
        "yarn prettier",
        "git add"
      ]
    },
    "babel": {
      "plugins": [
        "@babel/plugin-transform-modules-commonjs"
      ]
    },
    "jest": {
      "snapshotSerializers": [
        "pretty-format/build/plugins/convert_ansi.js"
      ],
      "setupFilesAfterEnv": [
        "jest-extended"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-jest-chain-1.1.5-57b804d7d23f7c8455b62051795cfe5c444fa262-integrity/node_modules/jest-chain/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <h1>jest-chain</h1>\n\nüÉè‚õì\n\nChain Jest matchers together to create one powerful assertion\n\n</div>\n\n<hr />\n\n[![Build Status](https://img.shields.io/travis/mattphillips/jest-chain.svg?style=flat-square)](https://travis-ci.org/mattphillips/jest-chain)\n[![Code Coverage](https://img.shields.io/codecov/c/github/mattphillips/jest-chain.svg?style=flat-square)](https://codecov.io/github/mattphillips/jest-chain)\n[![version](https://img.shields.io/npm/v/jest-chain.svg?style=flat-square)](https://www.npmjs.com/package/jest-chain)\n[![downloads](https://img.shields.io/npm/dm/jest-chain.svg?style=flat-square)](http://npm-stat.com/charts.html?package=jest-chain&from=2017-09-14)\n[![MIT License](https://img.shields.io/npm/l/jest-chain.svg?style=flat-square)](https://github.com/mattphillips/jest-chain/blob/master/LICENSE)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![Roadmap](https://img.shields.io/badge/%F0%9F%93%94-roadmap-CD9523.svg?style=flat-square)](https://github.com/mattphillips/jest-chain/blob/master/docs/ROADMAP.md)\n[![Examples](https://img.shields.io/badge/%F0%9F%92%A1-examples-ff615b.svg?style=flat-square)](https://github.com/mattphillips/jest-chain/blob/master/docs/EXAMPLES.md)\n\n* üç∏ Less code duplication\n* ü§ó Chain core and custom matchers together\n* üëæ Expressive assertions\n* üö® Fail fast assertions\n\n## Problem\n\nOften in [Jest](https://facebook.github.io/jest/) when you are writing tests you may want to perform multiple assertions on the\nsame variable. Currently to achieve this you have to write an individual `expect` for each\nassertion.\n\nFor example:\n\n```js\nit('add 1 and 1', () => {\n  const actual = 1 + 1;\n  expect(actual).toBe(2);\n  expect(actual).toBeGreaterThan(1);\n  expect(actual).toBeLessThan(3);\n});\n```\n\nWith `jest-chain` this can instead be written by chaining the matchers together:\n\n```js\nit('add 1 and 1', () => {\n  expect(1 + 1)\n    .toBe(2)\n    .toBeGreaterThan(1)\n    .toBeLessThan(3);\n});\n```\n\n## Installation\n\nWith npm:\n\n```sh\nnpm install --save-dev jest-chain\n```\n\nWith yarn:\n\n```sh\nyarn add -D jest-chain\n```\n\n## Setup\n\nAdd `jest-chain` to your Jest `setupFilesAfterEnv` configuration. [See for help](https://jestjs.io/docs/en/next/configuration#setupfilesafterenv-array)\n\n### Jest >v24\n\n```json\n\"jest\": {\n  \"setupFilesAfterEnv\": [\"jest-chain\"]\n}\n```\n\n### Jest <v23\n\n```json\n\"jest\": {\n  \"setupTestFrameworkScriptFile\": \"jest-chain\"\n}\n```\n\nIf you are already using another test framework, like [jest-extended](https://github.com/jest-community/jest-extended), then you should create a test setup file and `require` each of the frameworks you are using (including `jest-chain` üòâ)\n\nFor example:\n\n```js\n// ./testSetup.js\nrequire('jest-chain');\nrequire('any other test framework libraries you are using');\n```\n\nThen in your Jest config:\n\n```json\n\"jest\": {\n  \"setupTestFrameworkScriptFile\": \"./testSetup.js\"\n}\n```\n\n## Typescript\n\nIf your editor does not recognise the chained jest matchers, add a `global.d.ts` file to your project with:\n\n\n```js\nimport 'jest-chain';\n```\n\n__Note:__ if you are using any other custom matcher libraries then make sure that the `jest-chain` type import is at the bottom so that the types can chain core matchers with your customer matcher library.\n\n## Usage\n\nUse Jest's `expect` function the same way you would normally but with the ability to chain any\nmatcher to another, including nested matchers such as: `.not`, `.resolves` and `.rejects`.\n\n`jest-chain` supports custom Jest matchers, like [jest-extended](https://github.com/jest-community/jest-extended), in the usual way with `expect.extend(matcher)`.\nEach of these custom matchers are also chainable.\n\nSome examples:\n\n```js\nexpect([1, 2, 3])\n  .toHaveLength(3)\n  .toEqual([1, 2, 3]);\n```\n\n```js\n// with jest-extended\nexpect([1, 2, 3])\n  .toBeArray()\n  .toBeArrayOfSize(3)\n  .toEqual([1, 2, 3])\n  .toIncludeAnyMembers([1, 2]);\n\nexpect(100)\n  .toBePositive()\n  .toBeGreaterThan(99)\n  .toBeLessThan(101)\n  .toBeNumber()\n  .not.toBeNaN()\n  .toBe(100);\n\nexpect('hello world')\n  .toBeString()\n  .toEqualCaseInsensitive('HELLO WORLD')\n  .toStartWith('hello')\n  .toEndWith('world')\n  .not.toInclude('!')\n  .toBe('hello world');\n```\n\n**Matcher failures will fail fast from left to right, they have no impact on each other. üéâ**\n\n_Note: `jest-chain` does not currently support asymmetric matcher chaining, if you want this please send a PR_ üòä\n\n## LICENSE\n\n[MIT](/LICENSE)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018-present Matt Phillips <matt@mattphillips.io> (mattphillips.io)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/jest-chain/-/jest-chain-1.1.5.tgz#57b804d7d23f7c8455b62051795cfe5c444fa262",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/jest-chain/-/jest-chain-1.1.5.tgz",
    "hash": "57b804d7d23f7c8455b62051795cfe5c444fa262",
    "integrity": "sha512-bTx51vQP/6/XVDrMtz0WmT3wZoXvj5QAAnw1to+o6pvtjcwTIVuB6uR5URRXH/9rHf1WuM1UgsfVTWhTC/QAzw==",
    "registry": "npm",
    "packageName": "jest-chain",
    "cacheIntegrity": "sha512-bTx51vQP/6/XVDrMtz0WmT3wZoXvj5QAAnw1to+o6pvtjcwTIVuB6uR5URRXH/9rHf1WuM1UgsfVTWhTC/QAzw== sha1-V7gE19I/fIRVtiBReVz+XERPomI="
  },
  "registry": "npm",
  "hash": "57b804d7d23f7c8455b62051795cfe5c444fa262"
}