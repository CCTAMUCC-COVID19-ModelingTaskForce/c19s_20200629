{
  "manifest": {
    "name": "react-range",
    "version": "1.6.7",
    "description": "Range input. Slides in all directions.",
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "files": [
      "lib"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/tajo/react-range"
    },
    "author": {
      "name": "Vojtech Miksu",
      "email": "vojtech@miksu.cz"
    },
    "license": "MIT",
    "scripts": {
      "build": "rm -rf lib && tsc --outDir lib && cp flowtypes/* lib && rm lib/*.test.*",
      "build-storybook": "build-storybook -s public && rm ./examples/*.d.ts && rm ./src/*.d.ts",
      "jest:e2e": "jest --runInBand e2e",
      "jest:e2e:update": "jest --runInBand -u e2e",
      "storybook": "start-storybook -p 9010 -s public",
      "storybook:ci": "start-storybook -p 9011 -s public --ci --quiet",
      "test": "yarn test:e2e && yarn test:unit",
      "test:e2e": "start-server-and-test storybook:ci http-get://localhost:9011 jest:e2e",
      "test:e2e:dev": "E2E=dev yarn jest:e2e",
      "test:e2e:update": "start-server-and-test storybook:ci http-get://localhost:9011 jest:e2e:update",
      "test:unit": "jest src",
      "typecheck": "tsc --noEmit"
    },
    "tags": [
      "react"
    ],
    "keywords": [
      "react",
      "react-dom",
      "react-component",
      "range",
      "slider",
      "interval"
    ],
    "devDependencies": {
      "@storybook/addon-options": "5.2.8",
      "@storybook/addons": "5.2.8",
      "@storybook/react": "5.2.8",
      "@types/expect-puppeteer": "^3.3.0",
      "@types/jest": "^24.0.23",
      "@types/jest-environment-puppeteer": "^4.3.1",
      "@types/jest-image-snapshot": "^2.4.0",
      "@types/node": "^12.12.17",
      "@types/puppeteer": "^2.0.0",
      "@types/react": "^16.8.6",
      "@types/react-dom": "^16.8.4",
      "awesome-typescript-loader": "^5.2.1",
      "babel-loader": "^8.0.6",
      "focus-visible": "^5.0.2",
      "fork-ts-checker-webpack-plugin": "^3.1.1",
      "imgur": "^0.3.1",
      "jest": "^24.9.0",
      "jest-image-snapshot": "^2.7.0",
      "jest-puppeteer": "^4.3.0",
      "puppeteer": "^2.0.0",
      "start-server-and-test": "^1.7.11",
      "storybook-addon-rtl": "^0.2.2",
      "ts-jest": "^24.2.0",
      "typescript": "^3.2.4"
    },
    "peerDependencies": {
      "react": "^16.8.0-0 || ^17.0.0-0",
      "react-dom": "^16.8.0-0 || ^17.0.0-0"
    },
    "jest": {
      "roots": [
        "<rootDir>/src/",
        "<rootDir>/e2e/"
      ],
      "transform": {
        "^.+\\.tsx?$": "ts-jest"
      },
      "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.[jt]sx?$",
      "setupFilesAfterEnv": [
        "./setupTests.js"
      ],
      "reporters": [
        "default",
        "<rootDir>/image-reporter.js"
      ],
      "moduleFileExtensions": [
        "ts",
        "tsx",
        "js",
        "jsx",
        "json",
        "node"
      ],
      "preset": "jest-puppeteer"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-react-range-1.6.7-c3ac608a07899c2f8d420bb985b7fab2690d5168-integrity/node_modules/react-range/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-range\n\n[![npm version](https://img.shields.io/npm/v/react-range.svg?style=flat-square)](https://www.npmjs.com/package/react-range)\n[![npm downloads](https://img.shields.io/npm/dm/react-range.svg?style=flat-square)](https://www.npmjs.com/package/react-range)\n[![Build Status](https://travis-ci.org/tajo/react-range.svg?branch=master)](https://travis-ci.org/tajo/react-range)\n[![size](https://img.shields.io/bundlephobia/minzip/react-range.svg?style=flat)](https://bundlephobia.com/result?p=react-range)\n\n![Labeled Range](https://raw.githubusercontent.com/tajo/react-range/master/assets/react-range.gif?raw=true)\n\n[![Edit react-range](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/rlp1j1183n)\n\n[See all the other examples](https://react-range.netlify.com) and [their source code](https://github.com/tajo/react-range/tree/master/examples)!\n\n## Installation\n\n```\nyarn add react-range\n```\n\n## Usage\n\n```jsx\nimport * as React from 'react';\nimport { Range } from 'react-range';\n\nclass SuperSimple extends React.Component {\n  state = { values: [50] };\n  render() {\n    return (\n      <Range\n        step={0.1}\n        min={0}\n        max={100}\n        values={this.state.values}\n        onChange={values => this.setState({ values })}\n        renderTrack={({ props, children }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: '6px',\n              width: '100%',\n              backgroundColor: '#ccc'\n            }}\n          >\n            {children}\n          </div>\n        )}\n        renderThumb={({ props }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: '42px',\n              width: '42px',\n              backgroundColor: '#999'\n            }}\n          />\n        )}\n      />\n    );\n  }\n}\n```\n\n## Features\n\n- Range input supporting **vertical and horizontal sliding**\n- Unopinionated styling, great for **CSS in JS** too\n- No wrapping divs or additional markup, bring your own!\n- **Accessible**, made for keyboards and screen readers\n- **Touchable**, works on mobile devices\n- Can handle negative and decimal values\n- Stateless and controlled single component\n- Typescript and Flow type definitions\n- **No dependencies, less than 4kB (gzipped)**\n- Coverage by [e2e puppeteer tests](#end-to-end-testing)\n- RTL support\n\n## Keyboard support\n\n- `tab` and `shift+tab` to focus thumbs\n- `arrow up` or `arrow right` or `k` to increase the thumb value by one step\n- `arrow down` or `arrow left` or `j` to decrease the thumb value by one step\n- `page up` to increase the thumb value by ten steps\n- `page down` to decrease the thumb value by ten steps\n\n## `<Range />` props\n\n### renderTrack\n\n```ts\nrenderTrack: (params: {\n  props: {\n    style: React.CSSProperties;\n    ref: React.RefObject<any>;\n    onMouseDown: (e: React.MouseEvent) => void;\n    onTouchStart: (e: React.TouchEvent) => void;\n  };\n  children: React.ReactNode;\n  isDragged: boolean;\n  disabled: boolean;\n}) => React.ReactNode;\n```\n\n`renderTrack` prop to define your track (root) element. **Your function gets four parameters and should return a React component**:\n\n- `props` - this needs to be spread over the root track element, it connects mouse and touch events, adds a ref and some necessary styling\n- `children` - the rendered thumbs, thumb structure should be specified in a different prop - `renderThumb`\n- `isDragged` - `true` if any thumb is being dragged\n- `disabled` - `true` if `<Range disabled={true} />` is set\n\nThe track can be a single narrow `div` as in the [Super simple example](https://github.com/tajo/react-range/blob/master/examples/SuperSimple.tsx); however, it might be better to use at least two nested `div`s where the outer `div` is much thicker and has a transparent background and the inner `div` is narrow, has visible background and is centered. `props` should be then spread over the outer bigger `div`. **Why to do this? It's nice to keep the `onMouseDown` and `onTouchStart` targets bigger** since the thumb can be moved also by clicking on the track (in a single thumb scenario).\n\n### renderThumb\n\n```ts\nrenderThumb: (params: {\n  props: {\n    key: number;\n    style: React.CSSProperties;\n    tabIndex?: number;\n    'aria-valuemax': number;\n    'aria-valuemin': number;\n    'aria-valuenow': number;\n    draggable: boolean;\n    role: string;\n    onKeyDown: (e: React.KeyboardEvent) => void;\n    onKeyUp: (e: React.KeyboardEvent) => void;\n  };\n  value: number;\n  index: number;\n  isDragged: boolean;\n}) => React.ReactNode;\n```\n\n`renderThumb` prop to define your thumb. **Your function gets four parameters and should return a React component**:\n\n- `props` - it has multiple props that you need to spread over your thumb element\n- `value` - a number, relative value based on `min`, `max`, `step` and the thumb's position\n- `index` - the thumb index (order)\n- `isDragged` - `true` if the thumb is dragged, great for styling purposes\n\n### values\n\n```ts\nvalues: number[];\n```\n\nAn array of numbers. It controls the position of thumbs on the track. `values.length` equals to the number of rendered thumbs.\n\n### onChange\n\n```ts\nonChange: (values: number[]) => void;\n```\n\nCalled when a thumb is moved, provides new `values`.\n\n### onFinalChange\n\n```ts\nonFinalChange: (values: number[]) => void;\n```\n\nCalled when a change is finished (mouse/touch up, or keyup), provides current `values`. Use this event when you have to make for example ajax request with new values.\n\n### min (optional)\n\n```ts\nmin: number;\n```\n\nThe range start. Can be decimal or negative. Default is `0`.\n\n### max (optional)\n\n```ts\nmax: number;\n```\n\nThe range end. Can be decimal or negative. Default is `100`.\n\n### step (optional)\n\n```ts\nstep: number;\n```\n\nThe minimal distance between two `values`. Can be decimal. Default is `1`.\n\n### allowOverlap (optional)\n\n```ts\nallowOverlap: boolean;\n```\n\nWhen there are multiple thumbs on a single track, should they be allowed to overlap? Default is `false`.\n\n### direction (optional)\n\n```ts\ndirection: Direction;\n\nenum Direction {\n  Right = 'to right',\n  Left = 'to left',\n  Down = 'to bottom',\n  Up = 'to top'\n}\n```\n\nIt sets the orientation (vertical vs horizontal) and the direction in which the value increases. You can get this enum by:\n\n```js\nimport { Direction } from 'react-range';\n```\n\nDefault value is `Direction.Right`.\n\n### disabled (optional)\n\n```ts\ndisabled: boolean;\n```\n\nIf `true`, it ignores all touch and mouse events and makes the component not focusable. Default is `false`.\n\n### rtl (optional)\n\n```ts\nrtl: boolean;\n```\n\nIf `true`, the slider will be optimized for RTL layouts. Default is `false`.\n\n## getTrackBackground\n\nThere is an additional helper function being exported from `react-range`. Your track is most likely a `div` with some background. What if you want to achieve a nice \"progress bar\" effect where the part before the thumb has different color than the part after? What if you want to have the same thing even with multiple thumbs (aka differently colored segments)? **You don't need to glue together multiple divs in order to do that!** You can use a single `div` and set `background: linear-gradient(...)`. `getTrackBackground` function builds this verbose `linear-gradient(...)` for you!\n\n```ts\ngetTrackBackground: (params: {\n  min: number;\n  max: number;\n  values: number[];\n  colors: string[];\n  direction?: Direction;\n  rtl?: boolean;\n}) => string;\n```\n\n`min`, `max`, `values` and `direction` should be same as for the `<Range />` component. `colors` is a list of colors. This needs to be true:\n\n```js\nvalues.length + 1 === colors.length;\n```\n\nThat's because **one thumb** (one value) splits the track into **two segments**, so you need **two colors**.\n\n## Motivation\n\nThere is a native [input](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range) solution:\n\n```html\n<input type=\"range\" />\n```\n\nHowever, it has some serious shortcomings:\n\n- vertical-oriented slider is [not supported in all browsers](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range#Browser_compatibility)\n- supports only a single direction\n- very limited styling options\n- no support for multiple thumbs\n\nThere are also many `React` based solutions but most of them are too bloated, don't support styling through CSS in JS or have lacking performance.\n\n`react-range` has two main goals:\n\n- **Small footprint** - less then 4kB gzipped, single component.\n- **Bring your own styles and HTML markup** - `react-range` is a more low-level approach than other libraries. It doesn't come with any styling (except some positioning) or markup. It's up to the user to specify both! Think about `react-range` as a foundation for other styled input ranges.\n\n## End to end testing\n\n**This library is tightly coupled to many DOM APIs**. It would be very hard to ensure 100% test coverage just with unit tests that would not involve a lot of mocking. Or we could re-architect the library to better abstract all DOM interfaces but that would mean more code and bigger footprint.\n\nInstead of that, `react-range` adds thorough end to end tests powered by [puppeteer](https://github.com/GoogleChrome/puppeteer).\n\nAll tests are automatically ran in Travis CI with headless chromium. This way, the public API is well tested, including pixel-perfect positioning. Also, the tests are pretty fast, reliable and very descriptive.\n\nDo you want to run them in the `dev` mode (slows down operations, opens the browser)?\n\n```bash\nyarn storybook #start the storybook server\nyarn test:e2e:dev #run the e2e tests\n```\n\n`CI` mode (storybook started on the background, quick, headless)\n\n```bash\nyarn test:e2e\n```\n\n### Focus-visible style\n\nFor the Storybook purposes and E2E tests, the example [stories](https://github.com/tajo/react-range/blob/master/.storybook/example.stories.js#L20) use `focus-visible` polyfill package, which applies focus ring only when input is initiated by keyboard. In the future, all browsers will support this CSS pseudo-class. The polyfill is not part of the library and you can use your own solution or setup the polyfill in a different manner (this mostly concerns you when using css class generating frameworks like Styled-components, Emotion and so on).\n\n## Browser support\n\n- **Chrome** (latest, mac, windows, iOS, Android)\n- **Firefox** (latest, mac, windows)\n- **Safari** (latest, mac, iOS)\n- **Edge** (latest, windows)\n- **MSIE 11** (windows)\n\n## Contributing\n\nThis is how you can spin up the dev environment:\n\n```\ngit clone https://github.com/tajo/react-range\ncd react-range\nyarn\nyarn storybook\n```\n\n## Shoutouts 🙏\n\nBig big shoutout to **[Tom MacWright](https://macwright.org/)** for donating the `react-range` npm handle! ❤️\n\n<img src=\"https://raw.githubusercontent.com/tajo/react-range/master/assets/browserstack-logo.png?raw=true\" height=\"80\" title=\"BrowserStack Logo\" alt=\"BrowserStack Logo\" />\n\nBig thanks to [BrowserStack](https://www.browserstack.com) for letting the maintainers use their service to debug browser issues.\n\nAnd [Netlify](https://www.netlify.com/) for free hosting.\n\n## Author\n\nVojtech Miksu 2019, [miksu.cz](https://miksu.cz), [@vmiksu](https://twitter.com/vmiksu)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2019-present, Vojtech Miksu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-range/-/react-range-1.6.7.tgz#c3ac608a07899c2f8d420bb985b7fab2690d5168",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-range/-/react-range-1.6.7.tgz",
    "hash": "c3ac608a07899c2f8d420bb985b7fab2690d5168",
    "integrity": "sha512-CYoykEQMjY00saVEk0qxRpA/SjUyHJbAm8JMq86wjXwuL5l+taz5VXXNax1iVkquOjHnqoGVW2Vge0eK420cBw==",
    "registry": "npm",
    "packageName": "react-range",
    "cacheIntegrity": "sha512-CYoykEQMjY00saVEk0qxRpA/SjUyHJbAm8JMq86wjXwuL5l+taz5VXXNax1iVkquOjHnqoGVW2Vge0eK420cBw== sha1-w6xgigeJnC+NQgu5hbf6smkNUWg="
  },
  "registry": "npm",
  "hash": "c3ac608a07899c2f8d420bb985b7fab2690d5168"
}