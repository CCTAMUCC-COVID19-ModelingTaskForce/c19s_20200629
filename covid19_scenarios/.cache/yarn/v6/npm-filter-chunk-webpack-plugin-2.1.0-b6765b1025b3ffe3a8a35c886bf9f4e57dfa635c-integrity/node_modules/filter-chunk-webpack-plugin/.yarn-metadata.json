{
  "manifest": {
    "name": "filter-chunk-webpack-plugin",
    "version": "2.1.0",
    "description": "Include or exclude files / chunks from the final webpack output based on a list of patterns",
    "main": "index.js",
    "scripts": {
      "build": "babel src/index.js --out-file index.js",
      "clean": "rimraf index.js coverage .spec_output/it-* .nyc_output",
      "codecov": "codecov",
      "lint": "eslint --ext js src",
      "test": "jest --coverage",
      "test:watch": "jest --coverage --watch"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/yeojz/filter-chunk-webpack-plugin.git"
    },
    "keywords": [
      "webpack",
      "plugin",
      "filter",
      "chunk",
      "omit",
      "pick"
    ],
    "author": {
      "name": "Gerald Yeo",
      "email": "contact@fusedthought.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/yeojz/filter-chunk-webpack-plugin/issues"
    },
    "devDependencies": {
      "babel-cli": "^6.26.0",
      "babel-preset-env": "^1.7.0",
      "codecov": "^3.0.4",
      "css-loader": "^1.0.0",
      "eslint": "^5.3.0",
      "file-loader": "^1.1.11",
      "jest": "^23.4.2",
      "mini-css-extract-plugin": "^0.4.1",
      "rimraf": "^2.6.2",
      "style-loader": "^0.21.0",
      "webpack": "^4.16.4"
    },
    "dependencies": {
      "lodash.omit": "^4.5.0",
      "lodash.pick": "^4.4.0",
      "multimatch": "^2.1.0"
    },
    "jest": {
      "coverageDirectory": "./coverage/",
      "coveragePathIgnorePatterns": [
        "<rootDir>/index.js"
      ],
      "resetMocks": true,
      "testEnvironment": "node",
      "testPathIgnorePatterns": [
        "/node_modules/",
        "/dist/",
        "<rootDir>/index.js"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-filter-chunk-webpack-plugin-2.1.0-b6765b1025b3ffe3a8a35c886bf9f4e57dfa635c-integrity/node_modules/filter-chunk-webpack-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "# filter-chunk-webpack-plugin\n\n> Include or exclude files / chunks from the final webpack output based on a list of patterns\n\n[![npm][npm-badge]][npm-link]\n[![Build Status][circle-badge]][circle-link]\n[![Coverage Status][codecov-badge]][codecov-link]\n[![PRs Welcome][pr-welcome-badge]][pr-welcome-link]\n\nThis webpack plugin allows you to filter the list of output files before\nthey are being written / emitted to disk. It does not prevent files\nfrom `import` or `require` from being processed and bundled, keeping the\nfile references like image assets in your bundled code.\n\nThis is useful if you're creating multiple output bundles with common assets.\nAs such, you can use this to omit it in other runs.\n\n## Installation\n\nInstall the library via:\n\n```bash\nnpm install filter-chunk-webpack-plugin --save-dev\n```\n\n### Tested Versions\n\n| Webpack | Package Version |\n| ------- | --------------- |\n| 4.x.x   | > 2.x.x         |\n| 3.x.x   | 1.x.x           |\n\n## Basic Usage\n\n```js\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst FilterChunkWebpackPlugin = require('filter-chunk-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst path = require('path');\n\nconst webpackConfig = {\n  entry: 'index.js',\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'assets/app.[chunkhash].js'\n  },\n  module: {\n    rules: [{\n      test: /\\.css$/,\n      use: [\n        MiniCssExtractPlugin.loader,\n        \"css-loader\"\n      ]\n    }, {\n      test: /\\.svg$/,\n      use: {\n        loader: 'file-loader',\n        options: {\n          name: '[hash].[ext]',\n          outputPath: 'assets/images/'\n        }\n      }\n    }]\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: \"assets/css/[contenthash].css\",\n      chunkFilename: \"assets/css/[id].css\"\n    })\n    new FilterChunkWebpackPlugin({\n      patterns: [\n        'assets/*',\n        '!assets/css/*'\n      ]\n    })\n  ]\n};\n```\n\nThis should generate files like\n\n```text\nassets/app.12ab3c.js\nassets/css/css.98a5a.css\n```\n\nbut not\n\n```text\nassets/images/a5b912cd3.svg\n```\n\nFor more information, check out the [usage.spec.js](./src/usage.spec.js).\n\n## Options\n\n| options  | type    | default | description                                                                                                                         |\n| -------- | ------- | ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| patterns | array   | `[]`    | A list of pattern types that are supported by [multimatch][multimatch-package]                                                      |\n| select   | boolean | `false` | By default, this plugin will omit the matched result. Setting this to true will include the matched result instead of omitting them |\n\n## License\n\n`filter-chunk-webpack-plugin` is [MIT licensed](./LICENSE)\n\n[npm-badge]: https://img.shields.io/npm/v/filter-chunk-webpack-plugin.svg?style=flat-square\n[npm-link]: https://www.npmjs.com/package/filter-chunk-webpack-plugin\n[circle-badge]: https://img.shields.io/circleci/project/github/yeojz/filter-chunk-webpack-plugin/master.svg?style=flat-square\n[circle-link]: https://circleci.com/gh/yeojz/filter-chunk-webpack-plugin\n[multimatch-package]: https://github.com/sindresorhus/multimatch\n[pr-welcome-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&longCache=true\n[pr-welcome-link]: https://github.com/yeojz/filter-chunk-webpack-plugin/blob/master/CONTRIBUTING.md\n[codecov-badge]: https://img.shields.io/codecov/c/github/yeojz/filter-chunk-webpack-plugin/master.svg?style=flat-square\n[codecov-link]: https://codecov.io/gh/yeojz/filter-chunk-webpack-plugin\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Gerald Yeo <contact@fusedthought.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/filter-chunk-webpack-plugin/-/filter-chunk-webpack-plugin-2.1.0.tgz#b6765b1025b3ffe3a8a35c886bf9f4e57dfa635c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/filter-chunk-webpack-plugin/-/filter-chunk-webpack-plugin-2.1.0.tgz",
    "hash": "b6765b1025b3ffe3a8a35c886bf9f4e57dfa635c",
    "integrity": "sha512-FPX+aVZeCMZgYwVthKDmRUFlsPUqQ02dMxcm0iuzlTd+lLIbkCzPX5ZQQUptunk8cvIJUtE0uEnVbHMERWDV3Q==",
    "registry": "npm",
    "packageName": "filter-chunk-webpack-plugin",
    "cacheIntegrity": "sha512-FPX+aVZeCMZgYwVthKDmRUFlsPUqQ02dMxcm0iuzlTd+lLIbkCzPX5ZQQUptunk8cvIJUtE0uEnVbHMERWDV3Q== sha1-tnZbECWz/+Ooo1yIa/n05X36Y1w="
  },
  "registry": "npm",
  "hash": "b6765b1025b3ffe3a8a35c886bf9f4e57dfa635c"
}