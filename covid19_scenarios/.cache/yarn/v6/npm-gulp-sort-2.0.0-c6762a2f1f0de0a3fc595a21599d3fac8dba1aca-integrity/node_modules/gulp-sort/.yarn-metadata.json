{
  "manifest": {
    "name": "gulp-sort",
    "description": "Sort files in stream by path or any custom sort comparator",
    "repository": {
      "type": "git",
      "url": "https://github.com/pgilad/gulp-sort.git"
    },
    "version": "2.0.0",
    "license": "MIT",
    "author": {
      "name": "Gilad Peleg",
      "email": "giladp007@gmail.com",
      "url": "http://giladpeleg.com"
    },
    "main": "index.js",
    "files": [
      "index.js"
    ],
    "scripts": {
      "test": "mocha tests/*.js"
    },
    "keywords": [
      "gulpplugin",
      "gulp",
      "sort",
      "paths",
      "order",
      "comparator"
    ],
    "dependencies": {
      "through2": "^2.0.1"
    },
    "devDependencies": {
      "gulp-util": "^3.0.4",
      "mocha": "^2.1.0",
      "stable": "^0.1.5"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-gulp-sort-2.0.0-c6762a2f1f0de0a3fc595a21599d3fac8dba1aca-integrity/node_modules/gulp-sort/package.json",
    "readmeFilename": "README.md",
    "readme": "# [gulp](https://github.com/wearefractal/gulp)-sort\n> Sort files in stream by path or any custom sort comparator\n\n[![Build Status](http://img.shields.io/travis/pgilad/gulp-sort/master.svg?style=flat)](https://travis-ci.org/pgilad/gulp-sort)\n\n## Install\n\n`$ npm install gulp-sort --save-dev`\n\n## Usage\n\n```js\nvar sort = require('gulp-sort');\n\n// default sort\ngulp.src('./src/js/**/*.js')\n    .pipe(sort())\n    .pipe(gulp.dest('./build/js'));\n\n// pass in a custom comparator function\ngulp.src('./src/js/**/*.js')\n    .pipe(sort(customComparator))\n    .pipe(gulp.dest('./build/js'));\n\n// sort descending\ngulp.src('./src/js/**/*.js')\n    .pipe(sort({\n         asc: false\n    }))\n    .pipe(gulp.dest('./build/js'));\n\n// sort with a custom comparator\ngulp.src('./src/js/**/*.js')\n    .pipe(sort({\n        comparator: function(file1, file2) {\n            if (file1.path.indexOf('build') > -1) {\n                return 1;\n            }\n            if (file2.path.indexOf('build') > -1) {\n                return -1;\n            }\n            return 0;\n        }\n    }))\n    .pipe(gulp.dest('./build/js'));\n\n// sort with a custom sort function\nvar stable = require('stable');\ngulp.src('./src/js/**/*.js')\n    .pipe(sort({\n        customSortFn: function(files, comparator) {\n            return stable(files, comparator);\n        }\n    }))\n    .pipe(gulp.dest('./build/js'));\n```\n\n## Options\n\n`gulp-sort` takes in an optional [comparator](#comparator) function, or dictionary with following params:\n\n### asc\n\nSort ascending. Defaults to true. Specify false to sort descending.\n\n### comparator\n\nComparator function to use. `comparator(file1, file2)`. Defaults to `localeCompare` of file paths.\n\n### customSortFn\n\nUse `customSortFn` in order to control the sorting yourself (useful for stable sorts).\n\n`customSortFn` signature is as follows:\n\n`customSortFn(<files>, <comparator>)`\n\n- `files` being the vinyl file objects that were passed in\n- `comparator` is the default comparator used, or a custom one that was passed as param\n\nThis function is expected to return back the sorted list of files.\n\n## License\n\nMIT Â©[Gilad Peleg](http://giladpeleg.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Gilad Peleg <giladp007@gmail.com> (http://giladpeleg.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gulp-sort/-/gulp-sort-2.0.0.tgz#c6762a2f1f0de0a3fc595a21599d3fac8dba1aca",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gulp-sort/-/gulp-sort-2.0.0.tgz",
    "hash": "c6762a2f1f0de0a3fc595a21599d3fac8dba1aca",
    "integrity": "sha1-xnYqLx8N4KP8WVohWZ0/rI26Gso=",
    "registry": "npm",
    "packageName": "gulp-sort",
    "cacheIntegrity": "sha512-MyTel3FXOdh1qhw1yKhpimQrAmur9q1X0ZigLmCOxouQD+BD3za9/89O+HfbgBQvvh4igEbp0/PUWO+VqGYG1g== sha1-xnYqLx8N4KP8WVohWZ0/rI26Gso="
  },
  "registry": "npm",
  "hash": "c6762a2f1f0de0a3fc595a21599d3fac8dba1aca"
}