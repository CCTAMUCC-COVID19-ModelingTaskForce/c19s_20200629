{
  "manifest": {
    "name": "papaparse",
    "version": "5.2.0",
    "description": "Fast and powerful CSV parser for the browser that supports web workers and streaming large files. Converts CSV to JSON and JSON to CSV.",
    "keywords": [
      "csv",
      "parser",
      "parse",
      "parsing",
      "delimited",
      "text",
      "data",
      "auto-detect",
      "comma",
      "tab",
      "pipe",
      "file",
      "filereader",
      "stream",
      "worker",
      "workers",
      "thread",
      "threading",
      "multi-threaded",
      "jquery-plugin"
    ],
    "homepage": "http://papaparse.com/",
    "repository": {
      "type": "git",
      "url": "https://github.com/mholt/PapaParse.git"
    },
    "author": {
      "name": "Matthew Holt",
      "url": "https://twitter.com/mholt6"
    },
    "license": "MIT",
    "main": "papaparse.js",
    "browser": "papaparse.min.js",
    "devDependencies": {
      "chai": "^4.2.0",
      "connect": "^3.3.3",
      "eslint": "^4.19.1",
      "grunt": "^1.0.2",
      "grunt-contrib-uglify": "^3.3.0",
      "mocha": "^5.2.0",
      "mocha-headless-chrome": "^2.0.1",
      "open": "7.0.0",
      "serve-static": "^1.7.1"
    },
    "scripts": {
      "lint": "eslint --no-ignore papaparse.js Gruntfile.js .eslintrc.js 'tests/**/*.js'",
      "test-browser": "node tests/test.js",
      "test-mocha-headless-chrome": "node tests/test.js --mocha-headless-chrome",
      "test-node": "mocha tests/node-tests.js tests/test-cases.js",
      "test": "npm run lint && npm run test-node && npm run test-mocha-headless-chrome"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-papaparse-5.2.0-97976a1b135c46612773029153dc64995caa3b7b-integrity/node_modules/papaparse/package.json",
    "readmeFilename": "README.md",
    "readme": "Parse CSV with JavaScript\n========================================\n\nPapa Parse is the [fastest](http://jsperf.com/javascript-csv-parsers/4) in-browser CSV (or delimited text) parser for JavaScript. It is reliable and correct according to [RFC 4180](https://tools.ietf.org/html/rfc4180), and it comes with these features:\n\n- Easy to use\n- Parse CSV files directly (local or over the network)\n- Fast mode ([is really fast](http://jsperf.com/javascript-csv-parsers/3))\n- Stream large files (even via HTTP)\n- Reverse parsing (converts JSON to CSV)\n- Auto-detect delimiter\n- Worker threads to keep your web page reactive\n- Header row support\n- Pause, resume, abort\n- Can convert numbers and booleans to their types\n- Optional jQuery integration to get files from `<input type=\"file\">` elements\n- One of the only parsers that correctly handles line-breaks and quotations\n\nPapa Parse has **no dependencies** - not even jQuery.\n\nInstall\n-------\n\npapaparse is available on [npm](https://www.npmjs.com/package/papaparse). It\ncan be installed with the following command:\n\n    npm install papaparse\n\nIf you don't want to use npm, [papaparse.min.js](https://unpkg.com/papaparse@latest/papaparse.min.js) can be downloaded to your project source.\n\n\nHomepage & Demo\n----------------\n\n- [Homepage](http://papaparse.com)\n- [Demo](http://papaparse.com/demo)\n\nTo learn how to use Papa Parse:\n\n- [Documentation](http://papaparse.com/docs)\n\nThe website is hosted on [Github Pages](https://pages.github.com/). Its content is also included in the docs folder of this repository. If you want to contribute on it just clone the master of this repository and open a pull request.\n\n\nPapa Parse for Node\n--------------------\n\nPapa Parse can parse a [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) instead of a [File](https://www.w3.org/TR/FileAPI/) when used in Node.js environments (in addition to plain strings). In this mode, `encoding` must, if specified, be a Node-supported character encoding. The `Papa.LocalChunkSize`, `Papa.RemoteChunkSize` , `download`, `withCredentials` and `worker` config options are unavailable.\n\nPapa Parse can also parse in a node streaming style which makes `.pipe` available.  Simply pipe the [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) to the stream returned from `Papa.parse(Papa.NODE_STREAM_INPUT, options)`.  The `Papa.LocalChunkSize`, `Papa.RemoteChunkSize` , `download`, `withCredentials`, `worker`, `step`, and `complete` config options are unavailable.  To register a callback with the stream to process data, use the `data` event like so: `stream.on('data', callback)` and to signal the end of stream, use the 'end' event like so: `stream.on('end', callback)`.\n\nGet Started\n-----------\n\nFor usage instructions, see the [homepage](http://papaparse.com) and, for more detail, the [documentation](http://papaparse.com/docs).\n\nTests\n-----\n\nPapa Parse is under test. Download this repository, run `npm install`, then `npm test` to run the tests.\n\nContributing\n------------\n\nTo discuss a new feature or ask a question, open an issue. To fix a bug, submit a pull request to be credited with the [contributors](https://github.com/mholt/PapaParse/graphs/contributors)! Remember, a pull request, *with test*, is best. You may also discuss on Twitter with [#PapaParse](https://twitter.com/search?q=%23PapaParse&src=typd&f=realtime) or directly to me, [@mholt6](https://twitter.com/mholt6).\n\nIf you contribute a patch, ensure the tests suite is running correctly. We run continuous integration on each pull request and will not accept a patch that breaks the tests.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Matthew Holt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/papaparse/-/papaparse-5.2.0.tgz#97976a1b135c46612773029153dc64995caa3b7b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/papaparse/-/papaparse-5.2.0.tgz",
    "hash": "97976a1b135c46612773029153dc64995caa3b7b",
    "integrity": "sha512-ylq1wgUSnagU+MKQtNeVqrPhZuMYBvOSL00DHycFTCxownF95gpLAk1HiHdUW77N8yxRq1qHXLdlIPyBSG9NSA==",
    "registry": "npm",
    "packageName": "papaparse",
    "cacheIntegrity": "sha512-ylq1wgUSnagU+MKQtNeVqrPhZuMYBvOSL00DHycFTCxownF95gpLAk1HiHdUW77N8yxRq1qHXLdlIPyBSG9NSA== sha1-l5dqGxNcRmEncwKRU9xkmVyqO3s="
  },
  "registry": "npm",
  "hash": "97976a1b135c46612773029153dc64995caa3b7b"
}