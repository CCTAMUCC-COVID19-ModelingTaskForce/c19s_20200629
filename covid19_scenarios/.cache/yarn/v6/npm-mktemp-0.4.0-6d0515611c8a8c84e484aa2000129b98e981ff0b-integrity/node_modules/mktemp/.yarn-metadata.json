{
  "manifest": {
    "name": "mktemp",
    "version": "0.4.0",
    "author": {
      "name": "sasa+1",
      "email": "sasaplus1@gmail.com"
    },
    "contributors": [
      {
        "name": "Michael Ficarra",
        "email": "github.public.email@michael.ficarra.me"
      }
    ],
    "description": "mktemp command for node.js",
    "main": "./index.js",
    "license": "MIT",
    "readmeFilename": "README.md",
    "repository": {
      "type": "git",
      "url": "git://github.com/sasaplus1/mktemp.git"
    },
    "scripts": {
      "fix": "fixjsstyle --flagfile .closurelinter -r .",
      "lint": "gjslint --flagfile .closurelinter -r .",
      "test": "mocha"
    },
    "devDependencies": {
      "intelli-espower-loader": "^0.6.0",
      "mocha": "^2.1.0",
      "power-assert": "^0.10.1",
      "sinon": "^1.12.2"
    },
    "engines": {
      "node": ">0.9"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-mktemp-0.4.0-6d0515611c8a8c84e484aa2000129b98e981ff0b-integrity/node_modules/mktemp/package.json",
    "readme": "# mktemp\n\n[![Build Status](https://travis-ci.org/sasaplus1/mktemp.svg)](https://travis-ci.org/sasaplus1/mktemp)\n[![Dependency Status](https://gemnasium.com/sasaplus1/mktemp.svg)](https://gemnasium.com/sasaplus1/mktemp)\n[![NPM version](https://badge.fury.io/js/mktemp.svg)](http://badge.fury.io/js/mktemp)\n\nmktemp command for node.js\n\n## Installation\n\n```sh\n$ npm install mktemp\n```\n\n## Usage\n\n```js\nvar mktemp = require('mktemp');\n\nmktemp.createFile('XXXXX.txt', function(err, path) {\n  if (err) throw err;\n\n  // path match a /^[\\da-zA-Z]{5}\\.txt$/\n  console.log(path);\n});\n\n// return value match a /^[\\da-zA-Z]{5}\\.tmp$/\nmktemp.createFileSync('XXXXX.tmp');\n\nmktemp.createDir('XXXXXXX', function(err, path) {\n  if (err) throw err;\n\n  // path match a /^[\\da-zA-Z]{7}$/\n  console.log(path);\n});\n\n// return value match a /^XXX-[\\da-zA-Z]{3}$/\nmktemp.createDirSync('XXX-XXX');\n```\n\nif support Promise, can use Promise style.\n\n```js\nvar mktemp = require('mktemp');\n\nmktemp\n  .createFile('XXXXX.txt')\n  .then(function(path) {\n    // path match a /^[\\da-zA-Z]{5}\\.txt$/\n    console.log(path);\n  })\n  .catch(function(err) {\n    console.error(err);\n  });\n\nmktemp\n  .createDir('XXXXX')\n  .then(function(path) {\n    // path match a /^[\\da-zA-Z]{5}$/\n    console.log(path);\n  })\n  .catch(function(err) {\n    console.error(err);\n  });\n```\n\nmktemp functions are replace to random string from placeholder \"X\" in template. see example:\n\n```js\nmktemp.createFileSync('XXXXXXX');  // match a /^[\\da-zA-Z]{7}$/\nmktemp.createFileSync('XXX.tmp');  // match a /^[\\da-zA-Z]{3}\\.tmp$/\nmktemp.createFileSync('XXX-XXX');  // match a /^XXX-[\\da-zA-Z]{3}$/\n```\n\n## Functions\n\n### createFile(template[, callback])\n\n* `template`\n  * `String` - filename template\n* `callback`\n  * `function(err, path)` - callback function\n    * `err` : `Error|Null` - error object\n    * `path` :  `String` -  path\n\ncreate blank file of unique filename. permission is `0600`.\n\nit throws TypeError if node.js unsupported Promise and callback is not a function.\n\n### createFileSync(template)\n\n* `template`\n  * `String` - filename template\n* `return`\n  * `String` - path\n\nsync version createFile.\n\n### createDir(template[, callback])\n\n* `template`\n  * `String` - dirname template\n* `callback`\n  * `function(err, path)` - callback function\n    * `err` : `Error|Null` - error object\n    * `path` : `String` - path\n\ncreate directory of unique dirname. permission is `0700`.\n\nit throws TypeError if node.js unsupported Promise and callback is not a function.\n\n### createDirSync(template)\n\n* `template`\n  * `String` - dirname template\n* `return`\n  * `String` - path\n\nsync version createDir.\n\n## Test\n\n```sh\n$ npm install\n$ npm test\n```\n\n## Contributors\n\n* [Michael Ficarra](https://github.com/michaelficarra)\n\n## License\n\nThe MIT license. Please see LICENSE file.\n",
    "licenseText": "(The MIT LICENSE)\n\nCopyright (c) 2013-2014 sasa+1 <sasaplus1@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mktemp/-/mktemp-0.4.0.tgz#6d0515611c8a8c84e484aa2000129b98e981ff0b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mktemp/-/mktemp-0.4.0.tgz",
    "hash": "6d0515611c8a8c84e484aa2000129b98e981ff0b",
    "integrity": "sha1-bQUVYRyKjITkhKogABKbmOmB/ws=",
    "registry": "npm",
    "packageName": "mktemp",
    "cacheIntegrity": "sha512-IXnMcJ6ZyTuhRmJSjzvHSRhlVPiN9Jwc6e59V0bEJ0ba6OBeX2L0E+mRN1QseeOF4mM+F1Rit6Nh7o+rl2Yn/A== sha1-bQUVYRyKjITkhKogABKbmOmB/ws="
  },
  "registry": "npm",
  "hash": "6d0515611c8a8c84e484aa2000129b98e981ff0b"
}