{
  "manifest": {
    "name": "split-ca",
    "version": "1.0.1",
    "description": "Simple module to split a single certificate authority chain file (aka: bundle, ca-bundle, ca-chain, etc.) into an array, as expected by the node.js tls api.",
    "main": "index.js",
    "scripts": {
      "test": "make test"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/bushong1/split-ca.git"
    },
    "keywords": [
      "nodejs",
      "ca",
      "chain",
      "ssl",
      "tls",
      "https",
      "certificate",
      "authority",
      "bundle",
      "ca-bundle",
      "ca-chain",
      "split",
      "server"
    ],
    "author": {
      "name": "Charles Bushong"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/bushong1/split-ca/issues"
    },
    "homepage": "https://github.com/bushong1/split-ca",
    "devDependencies": {
      "chai": "^1.10.0",
      "mocha": "^2.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-split-ca-1.0.1-6c83aff3692fa61256e0cd197e05e9de157691a6-integrity/node_modules/split-ca/package.json",
    "readmeFilename": "README.md",
    "readme": "# split-ca\n\nSimple node.js module to split a single certificate authority chain file (bundle, ca-bundle, ca-chain, etc.) into an array, as expected by the node.js tls api\n\n## Installation\n\n`npm install split-ca`\n\n## Usage\n\nUsage will depend on your server module of choice, but most https modules require an options hash with `ca`, `key`, and `cert`.  Simply give split-ca the filepath of your bundle file.\n\n```js\nvar https = require('https');\nvar fs = require('fs');\n\nvar splitca = require('split-ca');\n\nvar options = {\n  ca: splitca(\"path/to/ca_bundle_file\"),\n  key:fs.readFileSync(\"path/to/server_key_file\"),\n  cert:fs.readFileSync(\"path/to/server_cert_file\"),\n  requestCert: true,\n  rejectUnauthorized: true\n};\n\nhttps.createServer(options, function (req, res) {\n  res.writeHead(200);\n  res.end(\"hello world\\n\");\n}).listen(8000);\n```\n\n## Args\n\n`split-ca('filepath','split-string','encoding')`\n\n#### `filepath`\n\nA standard node path to your object.  An error is thrown if the file cannot be parsed, is not formatted properly.\n\n#### `split-string`\n\nOptional.  Defaults to `\"\\n\"`, can be replaced with anything.\n\n#### `encoding`\n\nOptional.  Defaults to `\"utf-8\"`, can be replaced with anything accepted by node's `fs` module.\n\n## Credits\n\nThanks to [Benjie Gillam](https://twitter.com/Benjie) for the [blog post and sample code](http://www.benjiegillam.com/2012/06/node-dot-js-ssl-certificate-chain/) that was unashamedly ripped for this module.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/split-ca/-/split-ca-1.0.1.tgz#6c83aff3692fa61256e0cd197e05e9de157691a6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/split-ca/-/split-ca-1.0.1.tgz",
    "hash": "6c83aff3692fa61256e0cd197e05e9de157691a6",
    "integrity": "sha1-bIOv82kvphJW4M0ZfgXp3hV2kaY=",
    "registry": "npm",
    "packageName": "split-ca",
    "cacheIntegrity": "sha512-Q5thBSxp5t8WPTTJQS59LrGqOZqOsrhDGDVm8azCqIBjSBd7nd9o2PM+mDulQQkh8h//4U6hFZnc/mul8t5pWQ== sha1-bIOv82kvphJW4M0ZfgXp3hV2kaY="
  },
  "registry": "npm",
  "hash": "6c83aff3692fa61256e0cd197e05e9de157691a6"
}