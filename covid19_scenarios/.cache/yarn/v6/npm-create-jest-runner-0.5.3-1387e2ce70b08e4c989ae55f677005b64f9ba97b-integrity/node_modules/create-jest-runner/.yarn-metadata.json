{
  "manifest": {
    "name": "create-jest-runner",
    "version": "0.5.3",
    "main": "build/index.js",
    "author": {
      "name": "Rogelio Guzman",
      "email": "rogelioguzmanh@gmail.com"
    },
    "description": "A simple way of creating a Jest runner",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/rogeliog/create-jest-runner.git"
    },
    "homepage": "https://github.com/rogeliog/create-jest-runner",
    "files": [
      "build/",
      "generator/"
    ],
    "scripts": {
      "test": "jest",
      "lint": "eslint .",
      "watch": "babel lib -w --ignore **/*.test.js,integration -d build",
      "build": "babel lib --ignore **/*.test.js,integration -d build",
      "prepublish": "yarn build",
      "format": "prettier --single-quote --trailing-comma all --write \"!(build)/**/*.js\""
    },
    "dependencies": {
      "chalk": "^2.4.2",
      "jest-worker": "^24.0.0",
      "throat": "^4.1.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.0.0",
      "@babel/core": "^7.0.0",
      "@babel/preset-env": "^7.0.0",
      "babel-jest": "^24.0.0",
      "eslint": "^5.6.0",
      "eslint-config-airbnb-base": "^13.1.0",
      "eslint-config-prettier": "^4.0.0",
      "eslint-plugin-import": "^2.7.0",
      "eslint-plugin-jest": "^22.2.2",
      "eslint-plugin-prettier": "^3.0.1",
      "execa": "^1.0.0",
      "jest": "^24.0.0",
      "prettier": "^1.7.4"
    },
    "bin": {
      "create-jest-runner": "generator/index.js"
    },
    "_registry": "npm",
    "_loc": "/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/.cache/yarn/v6/npm-create-jest-runner-0.5.3-1387e2ce70b08e4c989ae55f677005b64f9ba97b-integrity/node_modules/create-jest-runner/package.json",
    "readmeFilename": "README.md",
    "readme": "# create-jest-runner\n\n[![Build Status](https://travis-ci.org/jest-community/create-jest-runner.svg?branch=master)](https://travis-ci.org/jest-community/create-jest-runner)\n\nA highly opinionated way for creating Jest Runners\n\n## Install\n\n```bash\nyarn add create-jest-runner\n```\n\n## Usage\n\ncreate-jest-runner takes care of handling the appropriate parallelization and creating a worker farm for your runner.\n\nYou simply need two files:\n\n* Entry file: Used by Jest as an entrypoint to your runner.\n* Run file: Runs once per test file, and it encapsulates the logic of your runner\n\n### 1) Create your entry file\n\n```js\n// index.js\nconst { createJestRunner } = require('create-jest-runner');\nmodule.exports = createJestRunner(require.resolve('./run'));\n```\n\n#### createJestRunner(pathToRunFile, config?: { getExtraOptions })\n\n* `pathToRunFile`: path to your run file.\n* `config`: Optional argument for configuring the runner.\n  * `getExtraOptions`: `() => object` used for passing extra options to the runner. It needs to be a serializable object because it will be send to a different Node process.\n\n### 2) Create your run file\n\n```js\nmodule.exports = options => {};\n```\n\n### Run File API\n\nThis file should export a function that receives one parameter with the options\n\n#### `options: { testPath, config, globalConfig }`\n\n* `testPath`: Path of the file that is going to be tests\n* `config`: Jest Project config used by this file\n* `globalConfig`: Jest global config\n* `extraOptions`: The return value of the `{ getExtraOptions }` argument of `createJestRunner(...)` the entry file.\n\nYou can return one of the following values:\n\n* `testResult`: Needs to be an object of type https://github.com/facebook/jest/blob/4d3c1a187bd429fd8611f6b0f19e4aa486fa2a85/packages/jest-test-result/src/types.ts#L103-L135\n* `Promise<testResult|Error>`: needs to be of above type.\n* `Error`: good for reporting system error, not failed tests.\n\n## Example of a runner\n\nThis runner \"blade-runner\" makes sure that these two emojis `‚öîÔ∏è üèÉ` are present in every file\n\n```js\n// index.js\nconst { createJestRunner } = require('create-jest-runner');\nmodule.exports = createJestRunner(require.resolve('./run'));\n```\n\n```js\n// run.js\nconst fs = require('fs');\nconst { pass, fail } = require('create-jest-runner');\n\nmodule.exports = ({ testPath }) => {\n  const start = Date.now();\n  const contents = fs.readFileSync(testPath, 'utf8');\n  const end = Date.now();\n\n  if (contents.includes('‚öîÔ∏èüèÉ')) {\n    return pass({ start, end, test: { path: testPath } });\n  }\n  const errorMessage = 'Company policies require ‚öîÔ∏è üèÉ in every file';\n  return fail({\n    start,\n    end,\n    test: { path: testPath, errorMessage, title: 'Check for ‚öîÔ∏è üèÉ' },\n  });\n};\n```\n\n## Create runner from binary\n\n```shell\nyarn create jest-runner my-runner\n\n# Or with npm\nnpm init jest-runner my-runner\n```\n\n**Note:** You will have to update the package name in `package.json` of the\ngenerated runner\n\n## Add your runner to Jest config\n\nOnce you have your Jest runner you can add it to your Jest config.\n\nIn your `package.json`\n\n```json\n{\n  \"jest\": {\n    \"runner\": \"/path/to/my-runner\"\n  }\n}\n```\n\nOr in `jest.config.js`\n\n```js\nmodule.exports = {\n  runner: '/path/to/my-runner',\n};\n```\n\n### Run Jest\n\n```bash\nyarn jest\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Rogelio Guzman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/create-jest-runner/-/create-jest-runner-0.5.3.tgz#1387e2ce70b08e4c989ae55f677005b64f9ba97b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/create-jest-runner/-/create-jest-runner-0.5.3.tgz",
    "hash": "1387e2ce70b08e4c989ae55f677005b64f9ba97b",
    "integrity": "sha512-a9VY2doMBmzRollJB3Ft3/Y5fBceSWJ4gdyVsg4/d7nP1S4715VG939s2VnITDj79YBmRgKhjGjNRv1c+Kre1g==",
    "registry": "npm",
    "packageName": "create-jest-runner",
    "cacheIntegrity": "sha512-a9VY2doMBmzRollJB3Ft3/Y5fBceSWJ4gdyVsg4/d7nP1S4715VG939s2VnITDj79YBmRgKhjGjNRv1c+Kre1g== sha1-E4fiznCwjkyYmuVfZ3AFtk+bqXs="
  },
  "registry": "npm",
  "hash": "1387e2ce70b08e4c989ae55f677005b64f9ba97b"
}