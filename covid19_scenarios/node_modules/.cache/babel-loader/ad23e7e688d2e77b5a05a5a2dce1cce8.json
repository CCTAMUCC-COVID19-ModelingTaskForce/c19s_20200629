{"ast":null,"code":"export const DATA_POINTS = {\n  /* Computed */\n  Exposed: 'exposed',\n  Susceptible: 'susceptible',\n  Infectious: 'infectious',\n  Severe: 'severe',\n  Critical: 'critical',\n  Overflow: 'overflow',\n  Recovered: 'recovered',\n  Fatalities: 'fatality',\n  WeeklyFatalities: 'weeklyFatality',\n  CumulativeCases: 'cumulativeCases',\n  NewCases: 'newCases',\n  HospitalBeds: 'hospitalBeds',\n  ICUbeds: 'ICUbeds',\n\n  /* Observed */\n  ObservedDeaths: 'observedDeaths',\n  ObservedCases: 'cases',\n  ObservedHospitalized: 'currentHospitalized',\n  ObservedICU: 'ICU',\n  ObservedNewCases: 'newCases',\n  ObservedWeeklyDeaths: 'weeklyDeaths'\n};\nexport const defaultEnabledPlots = [\n/* Computed */\n'susceptible', 'infectious', 'severe', 'recovered', 'weeklyFatality', 'hospitalBeds', 'ICUbeds',\n/* Observed */\n'cases', 'currentHospitalized', 'ICU', 'newCases', 'weeklyDeaths'];\nexport const colors = {\n  [DATA_POINTS.Susceptible]: '#a6cee3',\n  [DATA_POINTS.Infectious]: '#fdbf6f',\n  [DATA_POINTS.Severe]: '#fb9a99',\n  [DATA_POINTS.Critical]: '#e31a1c',\n  [DATA_POINTS.Overflow]: '#900d2c',\n  [DATA_POINTS.Recovered]: '#33a02c',\n  [DATA_POINTS.Fatalities]: '#5e506a',\n  [DATA_POINTS.WeeklyFatalities]: '#9e90Aa',\n  [DATA_POINTS.CumulativeCases]: '#aaaaaa',\n  [DATA_POINTS.NewCases]: '#e89f55',\n  [DATA_POINTS.HospitalBeds]: '#bbbbbb',\n  [DATA_POINTS.ICUbeds]: '#cccccc'\n};\nexport const linesToPlot = [{\n  key: DATA_POINTS.Susceptible,\n  color: colors.susceptible,\n  name: 'Susceptible',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.Recovered,\n  color: colors.recovered,\n  name: 'Recovered',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.Infectious,\n  color: colors.infectious,\n  name: 'Infectious',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.Severe,\n  color: colors.severe,\n  name: 'Severely ill',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.Critical,\n  color: colors.critical,\n  name: 'Patients in ICU (model)',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.Overflow,\n  color: colors.overflow,\n  name: 'ICU overflow',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.Fatalities,\n  color: colors.fatality,\n  name: 'Cumulative deaths (model)',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.WeeklyFatalities,\n  color: colors.weeklyFatality,\n  name: 'Weekly deaths (model)',\n  legendType: 'line'\n}, {\n  key: DATA_POINTS.HospitalBeds,\n  color: colors.hospitalBeds,\n  name: 'Total hospital beds',\n  legendType: 'none'\n}, {\n  key: DATA_POINTS.ICUbeds,\n  color: colors.ICUbeds,\n  name: 'Total ICU/ICM beds',\n  legendType: 'none'\n}];\nexport const areasToPlot = [{\n  key: `${DATA_POINTS.Susceptible}Area`,\n  color: colors.susceptible,\n  name: 'Susceptible uncertainty',\n  legendType: 'none'\n}, {\n  key: `${DATA_POINTS.Infectious}Area`,\n  color: colors.infectious,\n  name: 'Infectious uncertainty',\n  legendType: 'none'\n}, {\n  key: `${DATA_POINTS.Severe}Area`,\n  color: colors.severe,\n  name: 'Severely ill uncertainty',\n  legendType: 'none'\n}, {\n  key: `${DATA_POINTS.Critical}Area`,\n  color: colors.critical,\n  name: 'Patients in ICU (model) uncertainty',\n  legendType: 'none'\n}, {\n  key: `${DATA_POINTS.Overflow}Area`,\n  color: colors.overflow,\n  name: 'ICU overflow uncertainty',\n  legendType: 'none'\n}, {\n  key: `${DATA_POINTS.Recovered}Area`,\n  color: colors.recovered,\n  name: 'Recovered uncertainty',\n  legendType: 'none'\n}, {\n  key: `${DATA_POINTS.Fatalities}Area`,\n  color: colors.fatality,\n  name: 'Cumulative deaths (model) uncertainty',\n  legendType: 'none'\n}, {\n  key: `${DATA_POINTS.WeeklyFatalities}Area`,\n  color: colors.weeklyFatality,\n  name: 'Weekly deaths (model) uncertainty',\n  legendType: 'none'\n}];\nexport function observationsToPlot() {\n  return [{\n    key: DATA_POINTS.ObservedCases,\n    color: colors.cumulativeCases,\n    name: 'Cumulative cases (data)'\n  }, {\n    key: DATA_POINTS.ObservedNewCases,\n    color: colors.newCases,\n    name: `Weekly cases (data)`\n  }, {\n    key: DATA_POINTS.ObservedHospitalized,\n    color: colors.severe,\n    name: 'Patients in hospital (data)'\n  }, {\n    key: DATA_POINTS.ObservedICU,\n    color: colors.critical,\n    name: 'Patients in ICU (data)'\n  }, {\n    key: DATA_POINTS.ObservedDeaths,\n    color: colors.fatality,\n    name: 'Cumulative deaths (data)'\n  }, {\n    key: DATA_POINTS.ObservedWeeklyDeaths,\n    color: colors.weeklyFatality,\n    name: 'Weekly deaths (data)'\n  }];\n}\nexport function translatePlots(t, lines) {\n  return lines.map(line => {\n    return { ...line,\n      name: t(line.name)\n    };\n  });\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/ChartCommon.ts"],"names":["DATA_POINTS","Exposed","Susceptible","Infectious","Severe","Critical","Overflow","Recovered","Fatalities","WeeklyFatalities","CumulativeCases","NewCases","HospitalBeds","ICUbeds","ObservedDeaths","ObservedCases","ObservedHospitalized","ObservedICU","ObservedNewCases","ObservedWeeklyDeaths","defaultEnabledPlots","colors","linesToPlot","key","color","susceptible","name","legendType","recovered","infectious","severe","critical","overflow","fatality","weeklyFatality","hospitalBeds","areasToPlot","observationsToPlot","cumulativeCases","newCases","translatePlots","t","lines","map","line"],"mappings":"AAUA,OAAO,MAAMA,WAAW,GAAG;AACzB;AACAC,EAAAA,OAAO,EAAE,SAFgB;AAGzBC,EAAAA,WAAW,EAAE,aAHY;AAIzBC,EAAAA,UAAU,EAAE,YAJa;AAKzBC,EAAAA,MAAM,EAAE,QALiB;AAMzBC,EAAAA,QAAQ,EAAE,UANe;AAOzBC,EAAAA,QAAQ,EAAE,UAPe;AAQzBC,EAAAA,SAAS,EAAE,WARc;AASzBC,EAAAA,UAAU,EAAE,UATa;AAUzBC,EAAAA,gBAAgB,EAAE,gBAVO;AAWzBC,EAAAA,eAAe,EAAE,iBAXQ;AAYzBC,EAAAA,QAAQ,EAAE,UAZe;AAazBC,EAAAA,YAAY,EAAE,cAbW;AAczBC,EAAAA,OAAO,EAAE,SAdgB;;AAezB;AACAC,EAAAA,cAAc,EAAE,gBAhBS;AAiBzBC,EAAAA,aAAa,EAAE,OAjBU;AAkBzBC,EAAAA,oBAAoB,EAAE,qBAlBG;AAmBzBC,EAAAA,WAAW,EAAE,KAnBY;AAoBzBC,EAAAA,gBAAgB,EAAE,UApBO;AAqBzBC,EAAAA,oBAAoB,EAAE;AArBG,CAApB;AAwBP,OAAO,MAAMC,mBAAmB,GAAG;AACjC;AACA,aAFiC,EAGjC,YAHiC,EAIjC,QAJiC,EAKjC,WALiC,EAMjC,gBANiC,EAOjC,cAPiC,EAQjC,SARiC;AASjC;AACA,OAViC,EAWjC,qBAXiC,EAYjC,KAZiC,EAajC,UAbiC,EAcjC,cAdiC,CAA5B;AAiBP,OAAO,MAAMC,MAAM,GAAG;AACpB,GAACrB,WAAW,CAACE,WAAb,GAA2B,SADP;AAEpB,GAACF,WAAW,CAACG,UAAb,GAA0B,SAFN;AAGpB,GAACH,WAAW,CAACI,MAAb,GAAsB,SAHF;AAIpB,GAACJ,WAAW,CAACK,QAAb,GAAwB,SAJJ;AAKpB,GAACL,WAAW,CAACM,QAAb,GAAwB,SALJ;AAMpB,GAACN,WAAW,CAACO,SAAb,GAAyB,SANL;AAOpB,GAACP,WAAW,CAACQ,UAAb,GAA0B,SAPN;AAQpB,GAACR,WAAW,CAACS,gBAAb,GAAgC,SARZ;AASpB,GAACT,WAAW,CAACU,eAAb,GAA+B,SATX;AAUpB,GAACV,WAAW,CAACW,QAAb,GAAwB,SAVJ;AAWpB,GAACX,WAAW,CAACY,YAAb,GAA4B,SAXR;AAYpB,GAACZ,WAAW,CAACa,OAAb,GAAuB;AAZH,CAAf;AAeP,OAAO,MAAMS,WAAwB,GAAG,CACtC;AAAEC,EAAAA,GAAG,EAAEvB,WAAW,CAACE,WAAnB;AAAgCsB,EAAAA,KAAK,EAAEH,MAAM,CAACI,WAA9C;AAA2DC,EAAAA,IAAI,EAAE,aAAjE;AAAgFC,EAAAA,UAAU,EAAE;AAA5F,CADsC,EAEtC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACO,SAAnB;AAA8BiB,EAAAA,KAAK,EAAEH,MAAM,CAACO,SAA5C;AAAuDF,EAAAA,IAAI,EAAE,WAA7D;AAA0EC,EAAAA,UAAU,EAAE;AAAtF,CAFsC,EAGtC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACG,UAAnB;AAA+BqB,EAAAA,KAAK,EAAEH,MAAM,CAACQ,UAA7C;AAAyDH,EAAAA,IAAI,EAAE,YAA/D;AAA6EC,EAAAA,UAAU,EAAE;AAAzF,CAHsC,EAItC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACI,MAAnB;AAA2BoB,EAAAA,KAAK,EAAEH,MAAM,CAACS,MAAzC;AAAiDJ,EAAAA,IAAI,EAAE,cAAvD;AAAuEC,EAAAA,UAAU,EAAE;AAAnF,CAJsC,EAKtC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACK,QAAnB;AAA6BmB,EAAAA,KAAK,EAAEH,MAAM,CAACU,QAA3C;AAAqDL,EAAAA,IAAI,EAAE,yBAA3D;AAAsFC,EAAAA,UAAU,EAAE;AAAlG,CALsC,EAMtC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACM,QAAnB;AAA6BkB,EAAAA,KAAK,EAAEH,MAAM,CAACW,QAA3C;AAAqDN,EAAAA,IAAI,EAAE,cAA3D;AAA2EC,EAAAA,UAAU,EAAE;AAAvF,CANsC,EAOtC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACQ,UAAnB;AAA+BgB,EAAAA,KAAK,EAAEH,MAAM,CAACY,QAA7C;AAAuDP,EAAAA,IAAI,EAAE,2BAA7D;AAA0FC,EAAAA,UAAU,EAAE;AAAtG,CAPsC,EAQtC;AACEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACS,gBADnB;AAEEe,EAAAA,KAAK,EAAEH,MAAM,CAACa,cAFhB;AAGER,EAAAA,IAAI,EAAE,uBAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CARsC,EActC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACY,YAAnB;AAAiCY,EAAAA,KAAK,EAAEH,MAAM,CAACc,YAA/C;AAA6DT,EAAAA,IAAI,EAAE,qBAAnE;AAA0FC,EAAAA,UAAU,EAAE;AAAtG,CAdsC,EAetC;AAAEJ,EAAAA,GAAG,EAAEvB,WAAW,CAACa,OAAnB;AAA4BW,EAAAA,KAAK,EAAEH,MAAM,CAACR,OAA1C;AAAmDa,EAAAA,IAAI,EAAE,oBAAzD;AAA+EC,EAAAA,UAAU,EAAE;AAA3F,CAfsC,CAAjC;AAkBP,OAAO,MAAMS,WAAwB,GAAG,CACtC;AACEb,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACE,WAAY,MADlC;AAEEsB,EAAAA,KAAK,EAAEH,MAAM,CAACI,WAFhB;AAGEC,EAAAA,IAAI,EAAE,yBAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CADsC,EAOtC;AACEJ,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACG,UAAW,MADjC;AAEEqB,EAAAA,KAAK,EAAEH,MAAM,CAACQ,UAFhB;AAGEH,EAAAA,IAAI,EAAE,wBAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAPsC,EAatC;AACEJ,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACI,MAAO,MAD7B;AAEEoB,EAAAA,KAAK,EAAEH,MAAM,CAACS,MAFhB;AAGEJ,EAAAA,IAAI,EAAE,0BAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAbsC,EAmBtC;AACEJ,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACK,QAAS,MAD/B;AAEEmB,EAAAA,KAAK,EAAEH,MAAM,CAACU,QAFhB;AAGEL,EAAAA,IAAI,EAAE,qCAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAnBsC,EAyBtC;AACEJ,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACM,QAAS,MAD/B;AAEEkB,EAAAA,KAAK,EAAEH,MAAM,CAACW,QAFhB;AAGEN,EAAAA,IAAI,EAAE,0BAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAzBsC,EA+BtC;AACEJ,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACO,SAAU,MADhC;AAEEiB,EAAAA,KAAK,EAAEH,MAAM,CAACO,SAFhB;AAGEF,EAAAA,IAAI,EAAE,uBAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CA/BsC,EAqCtC;AACEJ,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACQ,UAAW,MADjC;AAEEgB,EAAAA,KAAK,EAAEH,MAAM,CAACY,QAFhB;AAGEP,EAAAA,IAAI,EAAE,uCAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CArCsC,EA2CtC;AACEJ,EAAAA,GAAG,EAAG,GAAEvB,WAAW,CAACS,gBAAiB,MADvC;AAEEe,EAAAA,KAAK,EAAEH,MAAM,CAACa,cAFhB;AAGER,EAAAA,IAAI,EAAE,mCAHR;AAIEC,EAAAA,UAAU,EAAE;AAJd,CA3CsC,CAAjC;AAmDP,OAAO,SAASU,kBAAT,GAA2C;AAChD,SAAO,CACL;AAAEd,IAAAA,GAAG,EAAEvB,WAAW,CAACe,aAAnB;AAAkCS,IAAAA,KAAK,EAAEH,MAAM,CAACiB,eAAhD;AAAiEZ,IAAAA,IAAI,EAAE;AAAvE,GADK,EAEL;AAAEH,IAAAA,GAAG,EAAEvB,WAAW,CAACkB,gBAAnB;AAAqCM,IAAAA,KAAK,EAAEH,MAAM,CAACkB,QAAnD;AAA6Db,IAAAA,IAAI,EAAG;AAApE,GAFK,EAGL;AAAEH,IAAAA,GAAG,EAAEvB,WAAW,CAACgB,oBAAnB;AAAyCQ,IAAAA,KAAK,EAAEH,MAAM,CAACS,MAAvD;AAA+DJ,IAAAA,IAAI,EAAE;AAArE,GAHK,EAIL;AAAEH,IAAAA,GAAG,EAAEvB,WAAW,CAACiB,WAAnB;AAAgCO,IAAAA,KAAK,EAAEH,MAAM,CAACU,QAA9C;AAAwDL,IAAAA,IAAI,EAAE;AAA9D,GAJK,EAKL;AAAEH,IAAAA,GAAG,EAAEvB,WAAW,CAACc,cAAnB;AAAmCU,IAAAA,KAAK,EAAEH,MAAM,CAACY,QAAjD;AAA2DP,IAAAA,IAAI,EAAE;AAAjE,GALK,EAML;AAAEH,IAAAA,GAAG,EAAEvB,WAAW,CAACmB,oBAAnB;AAAyCK,IAAAA,KAAK,EAAEH,MAAM,CAACa,cAAvD;AAAuER,IAAAA,IAAI,EAAE;AAA7E,GANK,CAAP;AAQD;AAED,OAAO,SAASc,cAAT,CAAwBC,CAAxB,EAAsCC,KAAtC,EAAuE;AAC5E,SAAOA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACzB,WAAO,EAAE,GAAGA,IAAL;AAAWlB,MAAAA,IAAI,EAAEe,CAAC,CAACG,IAAI,CAAClB,IAAN;AAAlB,KAAP;AACD,GAFM,CAAP;AAGD","sourcesContent":["import { LineProps as RechartsLineProps } from 'recharts'\nimport { TFunction } from 'i18next'\n\nexport interface LineProps {\n  key: string\n  name: string\n  color: string\n  legendType?: RechartsLineProps['legendType']\n}\n\nexport const DATA_POINTS = {\n  /* Computed */\n  Exposed: 'exposed',\n  Susceptible: 'susceptible',\n  Infectious: 'infectious',\n  Severe: 'severe',\n  Critical: 'critical',\n  Overflow: 'overflow',\n  Recovered: 'recovered',\n  Fatalities: 'fatality',\n  WeeklyFatalities: 'weeklyFatality',\n  CumulativeCases: 'cumulativeCases',\n  NewCases: 'newCases',\n  HospitalBeds: 'hospitalBeds',\n  ICUbeds: 'ICUbeds',\n  /* Observed */\n  ObservedDeaths: 'observedDeaths',\n  ObservedCases: 'cases',\n  ObservedHospitalized: 'currentHospitalized',\n  ObservedICU: 'ICU',\n  ObservedNewCases: 'newCases',\n  ObservedWeeklyDeaths: 'weeklyDeaths',\n}\n\nexport const defaultEnabledPlots = [\n  /* Computed */\n  'susceptible',\n  'infectious',\n  'severe',\n  'recovered',\n  'weeklyFatality',\n  'hospitalBeds',\n  'ICUbeds',\n  /* Observed */\n  'cases',\n  'currentHospitalized',\n  'ICU',\n  'newCases',\n  'weeklyDeaths',\n]\n\nexport const colors = {\n  [DATA_POINTS.Susceptible]: '#a6cee3',\n  [DATA_POINTS.Infectious]: '#fdbf6f',\n  [DATA_POINTS.Severe]: '#fb9a99',\n  [DATA_POINTS.Critical]: '#e31a1c',\n  [DATA_POINTS.Overflow]: '#900d2c',\n  [DATA_POINTS.Recovered]: '#33a02c',\n  [DATA_POINTS.Fatalities]: '#5e506a',\n  [DATA_POINTS.WeeklyFatalities]: '#9e90Aa',\n  [DATA_POINTS.CumulativeCases]: '#aaaaaa',\n  [DATA_POINTS.NewCases]: '#e89f55',\n  [DATA_POINTS.HospitalBeds]: '#bbbbbb',\n  [DATA_POINTS.ICUbeds]: '#cccccc',\n}\n\nexport const linesToPlot: LineProps[] = [\n  { key: DATA_POINTS.Susceptible, color: colors.susceptible, name: 'Susceptible', legendType: 'line' },\n  { key: DATA_POINTS.Recovered, color: colors.recovered, name: 'Recovered', legendType: 'line' },\n  { key: DATA_POINTS.Infectious, color: colors.infectious, name: 'Infectious', legendType: 'line' },\n  { key: DATA_POINTS.Severe, color: colors.severe, name: 'Severely ill', legendType: 'line' },\n  { key: DATA_POINTS.Critical, color: colors.critical, name: 'Patients in ICU (model)', legendType: 'line' },\n  { key: DATA_POINTS.Overflow, color: colors.overflow, name: 'ICU overflow', legendType: 'line' },\n  { key: DATA_POINTS.Fatalities, color: colors.fatality, name: 'Cumulative deaths (model)', legendType: 'line' },\n  {\n    key: DATA_POINTS.WeeklyFatalities,\n    color: colors.weeklyFatality,\n    name: 'Weekly deaths (model)',\n    legendType: 'line',\n  },\n  { key: DATA_POINTS.HospitalBeds, color: colors.hospitalBeds, name: 'Total hospital beds', legendType: 'none' },\n  { key: DATA_POINTS.ICUbeds, color: colors.ICUbeds, name: 'Total ICU/ICM beds', legendType: 'none' },\n]\n\nexport const areasToPlot: LineProps[] = [\n  {\n    key: `${DATA_POINTS.Susceptible}Area`,\n    color: colors.susceptible,\n    name: 'Susceptible uncertainty',\n    legendType: 'none',\n  },\n  {\n    key: `${DATA_POINTS.Infectious}Area`,\n    color: colors.infectious,\n    name: 'Infectious uncertainty',\n    legendType: 'none',\n  },\n  {\n    key: `${DATA_POINTS.Severe}Area`,\n    color: colors.severe,\n    name: 'Severely ill uncertainty',\n    legendType: 'none',\n  },\n  {\n    key: `${DATA_POINTS.Critical}Area`,\n    color: colors.critical,\n    name: 'Patients in ICU (model) uncertainty',\n    legendType: 'none',\n  },\n  {\n    key: `${DATA_POINTS.Overflow}Area`,\n    color: colors.overflow,\n    name: 'ICU overflow uncertainty',\n    legendType: 'none',\n  },\n  {\n    key: `${DATA_POINTS.Recovered}Area`,\n    color: colors.recovered,\n    name: 'Recovered uncertainty',\n    legendType: 'none',\n  },\n  {\n    key: `${DATA_POINTS.Fatalities}Area`,\n    color: colors.fatality,\n    name: 'Cumulative deaths (model) uncertainty',\n    legendType: 'none',\n  },\n  {\n    key: `${DATA_POINTS.WeeklyFatalities}Area`,\n    color: colors.weeklyFatality,\n    name: 'Weekly deaths (model) uncertainty',\n    legendType: 'none',\n  },\n]\n\nexport function observationsToPlot(): LineProps[] {\n  return [\n    { key: DATA_POINTS.ObservedCases, color: colors.cumulativeCases, name: 'Cumulative cases (data)' },\n    { key: DATA_POINTS.ObservedNewCases, color: colors.newCases, name: `Weekly cases (data)` },\n    { key: DATA_POINTS.ObservedHospitalized, color: colors.severe, name: 'Patients in hospital (data)' },\n    { key: DATA_POINTS.ObservedICU, color: colors.critical, name: 'Patients in ICU (data)' },\n    { key: DATA_POINTS.ObservedDeaths, color: colors.fatality, name: 'Cumulative deaths (data)' },\n    { key: DATA_POINTS.ObservedWeeklyDeaths, color: colors.weeklyFatality, name: 'Weekly deaths (data)' },\n  ]\n}\n\nexport function translatePlots(t: TFunction, lines: LineProps[]): LineProps[] {\n  return lines.map((line) => {\n    return { ...line, name: t(line.name) }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}