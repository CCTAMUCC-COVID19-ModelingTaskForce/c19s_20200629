{"ast":null,"code":"import _last from \"lodash/last\";\n\nvar _last2;\n\nimport semver from 'semver';\nimport { getOrThrow } from '../../helpers/getOrThrow';\nimport v2_0_0 from './v2.0.0/serialize';\nexport const SERIALIZERS = new Map(Object.entries({ ...v2_0_0\n}));\nexport const SERIALIZER_VERSIONS = semver.sort(Array.from(SERIALIZERS.keys()));\nexport const SERIALIZER_VERSION_LATEST = (_last2 = _last(SERIALIZER_VERSIONS)) !== null && _last2 !== void 0 ? _last2 : 'NO_SERIALIZERS';\nexport const SERIALIZER_LATEST = getOrThrow(SERIALIZERS, SERIALIZER_VERSION_LATEST);\n_c = SERIALIZER_LATEST;\n\nvar _c;\n\n$RefreshReg$(_c, \"SERIALIZER_LATEST\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/io/serialization/versioning.ts"],"names":["semver","getOrThrow","v2_0_0","SERIALIZERS","Map","Object","entries","SERIALIZER_VERSIONS","sort","Array","from","keys","SERIALIZER_VERSION_LATEST","SERIALIZER_LATEST"],"mappings":";;;;AAIA,OAAOA,MAAP,MAAmB,QAAnB;AAIA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAUA,OAAO,MAAMC,WAAW,GAAG,IAAIC,GAAJ,CACzBC,MAAM,CAACC,OAAP,CAAe,EACb,GAAGJ;AADU,CAAf,CADyB,CAApB;AAMP,OAAO,MAAMK,mBAAmB,GAAGP,MAAM,CAACQ,IAAP,CAAYC,KAAK,CAACC,IAAN,CAAWP,WAAW,CAACQ,IAAZ,EAAX,CAAZ,CAA5B;AACP,OAAO,MAAMC,yBAAyB,aAAG,MAAKL,mBAAL,CAAH,2CAAgC,gBAA/D;AACP,OAAO,MAAMM,iBAAiB,GAAGZ,UAAU,CAACE,WAAD,EAAcS,yBAAd,CAApC;KAAMC,iB","sourcesContent":["/* eslint-disable camelcase */\n\nimport { last } from 'lodash'\n\nimport semver from 'semver'\n\nimport type { ScenarioParameters } from '../../algorithms/types/Param.types'\n\nimport { getOrThrow } from '../../helpers/getOrThrow'\n\nimport v2_0_0 from './v2.0.0/serialize'\n\nexport type Serializer = (input: ScenarioParameters) => string\nexport type Deserializer = (input: string) => ScenarioParameters\n\nexport interface Serializers {\n  serialize: Serializer\n  deserialize: Deserializer\n}\n\nexport const SERIALIZERS = new Map<string, Serializers>(\n  Object.entries({\n    ...v2_0_0,\n  }),\n)\n\nexport const SERIALIZER_VERSIONS = semver.sort(Array.from(SERIALIZERS.keys()))\nexport const SERIALIZER_VERSION_LATEST = last(SERIALIZER_VERSIONS) ?? 'NO_SERIALIZERS'\nexport const SERIALIZER_LATEST = getOrThrow(SERIALIZERS, SERIALIZER_VERSION_LATEST)\n"]},"metadata":{},"sourceType":"module"}