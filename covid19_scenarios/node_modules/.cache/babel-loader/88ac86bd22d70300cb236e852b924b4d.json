{"ast":null,"code":"export const schemaVer = '2.0.0'; // To parse this data:\n//\n//   import { Convert, AgeDistributionArray, AgeDistributionData, AgeDistributionDatum, AgeGroup, CaseCountsArray, CaseCountsData, CaseCountsDatum, DateRange, MitigationInterval, NumericRangeNonNegative, PercentageRange, ScenarioArray, ScenarioData, ScenarioDatum, ScenarioDatumEpidemiological, ScenarioDatumMitigation, ScenarioDatumPopulation, SeverityDistributionArray, ScenarioDatumSimulation, SeverityDistributionData, Shareable, SeverityDistributionDatum } from \"./file\";\n//\n//   const ageDistributionArray = Convert.toAgeDistributionArray(json);\n//   const ageDistributionData = Convert.toAgeDistributionData(json);\n//   const ageDistributionDatum = Convert.toAgeDistributionDatum(json);\n//   const ageGroup = Convert.toAgeGroup(json);\n//   const caseCountsArray = Convert.toCaseCountsArray(json);\n//   const caseCountsData = Convert.toCaseCountsData(json);\n//   const caseCountsDatum = Convert.toCaseCountsDatum(json);\n//   const colorHex = Convert.toColorHex(json);\n//   const integer = Convert.toInteger(json);\n//   const dateRange = Convert.toDateRange(json);\n//   const integerNonNegative = Convert.toIntegerNonNegative(json);\n//   const integerPositive = Convert.toIntegerPositive(json);\n//   const mitigationInterval = Convert.toMitigationInterval(json);\n//   const numericRangeNonNegative = Convert.toNumericRangeNonNegative(json);\n//   const percentage = Convert.toPercentage(json);\n//   const percentageRange = Convert.toPercentageRange(json);\n//   const scenarioArray = Convert.toScenarioArray(json);\n//   const scenarioData = Convert.toScenarioData(json);\n//   const scenarioDatum = Convert.toScenarioDatum(json);\n//   const scenarioDatumEpidemiological = Convert.toScenarioDatumEpidemiological(json);\n//   const scenarioDatumMitigation = Convert.toScenarioDatumMitigation(json);\n//   const scenarioDatumPopulation = Convert.toScenarioDatumPopulation(json);\n//   const severityDistributionArray = Convert.toSeverityDistributionArray(json);\n//   const scenarioDatumSimulation = Convert.toScenarioDatumSimulation(json);\n//   const severityDistributionData = Convert.toSeverityDistributionData(json);\n//   const shareable = Convert.toShareable(json);\n//   const severityDistributionDatum = Convert.toSeverityDistributionDatum(json);\n//   const schemaVer = Convert.toSchemaVer(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport let AgeGroup;\n\n(function (AgeGroup) {\n  AgeGroup[\"The09\"] = \"0-9\";\n  AgeGroup[\"The1019\"] = \"10-19\";\n  AgeGroup[\"The2029\"] = \"20-29\";\n  AgeGroup[\"The3039\"] = \"30-39\";\n  AgeGroup[\"The4049\"] = \"40-49\";\n  AgeGroup[\"The5059\"] = \"50-59\";\n  AgeGroup[\"The6069\"] = \"60-69\";\n  AgeGroup[\"The7079\"] = \"70-79\";\n  AgeGroup[\"The80\"] = \"80+\";\n})(AgeGroup || (AgeGroup = {}));\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  static toAgeDistributionArray(json) {\n    return cast(JSON.parse(json), r(\"AgeDistributionArray\"));\n  }\n\n  static ageDistributionArrayToJson(value) {\n    return JSON.stringify(uncast(value, r(\"AgeDistributionArray\")), null, 2);\n  }\n\n  static toAgeDistributionData(json) {\n    return cast(JSON.parse(json), r(\"AgeDistributionData\"));\n  }\n\n  static ageDistributionDataToJson(value) {\n    return JSON.stringify(uncast(value, r(\"AgeDistributionData\")), null, 2);\n  }\n\n  static toAgeDistributionDatum(json) {\n    return cast(JSON.parse(json), r(\"AgeDistributionDatum\"));\n  }\n\n  static ageDistributionDatumToJson(value) {\n    return JSON.stringify(uncast(value, r(\"AgeDistributionDatum\")), null, 2);\n  }\n\n  static toCaseCountsArray(json) {\n    return cast(JSON.parse(json), r(\"CaseCountsArray\"));\n  }\n\n  static caseCountsArrayToJson(value) {\n    return JSON.stringify(uncast(value, r(\"CaseCountsArray\")), null, 2);\n  }\n\n  static toCaseCountsData(json) {\n    return cast(JSON.parse(json), r(\"CaseCountsData\"));\n  }\n\n  static caseCountsDataToJson(value) {\n    return JSON.stringify(uncast(value, r(\"CaseCountsData\")), null, 2);\n  }\n\n  static toCaseCountsDatum(json) {\n    return cast(JSON.parse(json), r(\"CaseCountsDatum\"));\n  }\n\n  static caseCountsDatumToJson(value) {\n    return JSON.stringify(uncast(value, r(\"CaseCountsDatum\")), null, 2);\n  }\n\n  static toScenarioArray(json) {\n    return cast(JSON.parse(json), r(\"ScenarioArray\"));\n  }\n\n  static scenarioArrayToJson(value) {\n    return JSON.stringify(uncast(value, r(\"ScenarioArray\")), null, 2);\n  }\n\n  static toScenarioData(json) {\n    return cast(JSON.parse(json), r(\"ScenarioData\"));\n  }\n\n  static scenarioDataToJson(value) {\n    return JSON.stringify(uncast(value, r(\"ScenarioData\")), null, 2);\n  }\n\n  static toScenarioDatum(json) {\n    return cast(JSON.parse(json), r(\"ScenarioDatum\"));\n  }\n\n  static scenarioDatumToJson(value) {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatum\")), null, 2);\n  }\n\n  static toScenarioDatumEpidemiological(json) {\n    return cast(JSON.parse(json), r(\"ScenarioDatumEpidemiological\"));\n  }\n\n  static scenarioDatumEpidemiologicalToJson(value) {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatumEpidemiological\")), null, 2);\n  }\n\n  static toNumericRangeNonNegative(json) {\n    return cast(JSON.parse(json), r(\"NumericRangeNonNegative\"));\n  }\n\n  static numericRangeNonNegativeToJson(value) {\n    return JSON.stringify(uncast(value, r(\"NumericRangeNonNegative\")), null, 2);\n  }\n\n  static toScenarioDatumMitigation(json) {\n    return cast(JSON.parse(json), r(\"ScenarioDatumMitigation\"));\n  }\n\n  static scenarioDatumMitigationToJson(value) {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatumMitigation\")), null, 2);\n  }\n\n  static toMitigationInterval(json) {\n    return cast(JSON.parse(json), r(\"MitigationInterval\"));\n  }\n\n  static mitigationIntervalToJson(value) {\n    return JSON.stringify(uncast(value, r(\"MitigationInterval\")), null, 2);\n  }\n\n  static toDateRange(json) {\n    return cast(JSON.parse(json), r(\"DateRange\"));\n  }\n\n  static dateRangeToJson(value) {\n    return JSON.stringify(uncast(value, r(\"DateRange\")), null, 2);\n  }\n\n  static toPercentageRange(json) {\n    return cast(JSON.parse(json), r(\"PercentageRange\"));\n  }\n\n  static percentageRangeToJson(value) {\n    return JSON.stringify(uncast(value, r(\"PercentageRange\")), null, 2);\n  }\n\n  static toScenarioDatumPopulation(json) {\n    return cast(JSON.parse(json), r(\"ScenarioDatumPopulation\"));\n  }\n\n  static scenarioDatumPopulationToJson(value) {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatumPopulation\")), null, 2);\n  }\n\n  static toScenarioDatumSimulation(json) {\n    return cast(JSON.parse(json), r(\"ScenarioDatumSimulation\"));\n  }\n\n  static scenarioDatumSimulationToJson(value) {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatumSimulation\")), null, 2);\n  }\n\n  static toSeverityDistributionArray(json) {\n    return cast(JSON.parse(json), r(\"SeverityDistributionArray\"));\n  }\n\n  static severityDistributionArrayToJson(value) {\n    return JSON.stringify(uncast(value, r(\"SeverityDistributionArray\")), null, 2);\n  }\n\n  static toSeverityDistributionData(json) {\n    return cast(JSON.parse(json), r(\"SeverityDistributionData\"));\n  }\n\n  static severityDistributionDataToJson(value) {\n    return JSON.stringify(uncast(value, r(\"SeverityDistributionData\")), null, 2);\n  }\n\n  static toSeverityDistributionDatum(json) {\n    return cast(JSON.parse(json), r(\"SeverityDistributionDatum\"));\n  }\n\n  static severityDistributionDatumToJson(value) {\n    return JSON.stringify(uncast(value, r(\"SeverityDistributionDatum\")), null, 2);\n  }\n\n  static toShareable(json) {\n    return cast(JSON.parse(json), r(\"Shareable\"));\n  }\n\n  static shareableToJson(value) {\n    return JSON.stringify(uncast(value, r(\"Shareable\")), null, 2);\n  }\n\n}\n\nfunction invalidValue(typ, val) {\n  throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`);\n}\n\nfunction jsonToJSProps(typ) {\n  if (typ.jsonToJS === undefined) {\n    const map = {};\n    typ.props.forEach(p => map[p.json] = {\n      key: p.js,\n      typ: p.typ\n    });\n    typ.jsonToJS = map;\n  }\n\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ) {\n  if (typ.jsToJSON === undefined) {\n    const map = {};\n    typ.props.forEach(p => map[p.js] = {\n      key: p.json,\n      typ: p.typ\n    });\n    typ.jsToJSON = map;\n  }\n\n  return typ.jsToJSON;\n}\n\nfunction transform(val, typ, getProps) {\n  function transformPrimitive(typ, val) {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val);\n  }\n\n  function transformUnion(typs, val) {\n    // val must validate against one typ in typs\n    const l = typs.length;\n\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) {}\n    }\n\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases, val) {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ, val) {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map(el => transform(el, typ, getProps));\n  }\n\n  function transformDate(val) {\n    if (val === null) {\n      return null;\n    }\n\n    const d = new Date(val);\n\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n\n    return d;\n  }\n\n  function transformObject(props, additional, val) {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n\n    const result = {};\n    Object.getOwnPropertyNames(props).forEach(key => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps);\n    });\n    Object.getOwnPropertyNames(val).forEach(key => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n\n  if (typ === null) {\n    if (val === null) return val;\n    return invalidValue(typ, val);\n  }\n\n  if (typ === false) return invalidValue(typ, val);\n\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val) : typ.hasOwnProperty(\"arrayItems\") ? transformArray(typ.arrayItems, val) : typ.hasOwnProperty(\"props\") ? transformObject(getProps(typ), typ.additional, val) : invalidValue(typ, val);\n  } // Numbers can be parsed by Date but shouldn't be.\n\n\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast(val, typ) {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast(val, typ) {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ) {\n  return {\n    arrayItems: typ\n  };\n}\n\nfunction u(...typs) {\n  return {\n    unionMembers: typs\n  };\n}\n\nfunction o(props, additional) {\n  return {\n    props,\n    additional\n  };\n}\n\nfunction m(additional) {\n  return {\n    props: [],\n    additional\n  };\n}\n\nfunction r(name) {\n  return {\n    ref: name\n  };\n}\n\nconst typeMap = {\n  AgeDistributionArray: o([{\n    json: \"all\",\n    js: \"all\",\n    typ: a(r(\"AgeDistributionData\"))\n  }], false),\n  AgeDistributionData: o([{\n    json: \"data\",\n    js: \"data\",\n    typ: a(r(\"AgeDistributionDatum\"))\n  }, {\n    json: \"name\",\n    js: \"name\",\n    typ: \"\"\n  }], false),\n  AgeDistributionDatum: o([{\n    json: \"ageGroup\",\n    js: \"ageGroup\",\n    typ: r(\"AgeGroup\")\n  }, {\n    json: \"population\",\n    js: \"population\",\n    typ: 0\n  }], false),\n  CaseCountsArray: o([{\n    json: \"all\",\n    js: \"all\",\n    typ: a(r(\"CaseCountsData\"))\n  }], false),\n  CaseCountsData: o([{\n    json: \"data\",\n    js: \"data\",\n    typ: a(r(\"CaseCountsDatum\"))\n  }, {\n    json: \"name\",\n    js: \"name\",\n    typ: \"\"\n  }], false),\n  CaseCountsDatum: o([{\n    json: \"cases\",\n    js: \"cases\",\n    typ: u(0, null)\n  }, {\n    json: \"deaths\",\n    js: \"deaths\",\n    typ: u(undefined, u(0, null))\n  }, {\n    json: \"hospitalized\",\n    js: \"hospitalized\",\n    typ: u(undefined, u(0, null))\n  }, {\n    json: \"icu\",\n    js: \"icu\",\n    typ: u(undefined, u(0, null))\n  }, {\n    json: \"recovered\",\n    js: \"recovered\",\n    typ: u(undefined, u(0, null))\n  }, {\n    json: \"time\",\n    js: \"time\",\n    typ: Date\n  }], false),\n  ScenarioArray: o([{\n    json: \"all\",\n    js: \"all\",\n    typ: a(r(\"ScenarioData\"))\n  }], false),\n  ScenarioData: o([{\n    json: \"data\",\n    js: \"data\",\n    typ: r(\"ScenarioDatum\")\n  }, {\n    json: \"name\",\n    js: \"name\",\n    typ: \"\"\n  }], false),\n  ScenarioDatum: o([{\n    json: \"epidemiological\",\n    js: \"epidemiological\",\n    typ: r(\"ScenarioDatumEpidemiological\")\n  }, {\n    json: \"mitigation\",\n    js: \"mitigation\",\n    typ: r(\"ScenarioDatumMitigation\")\n  }, {\n    json: \"population\",\n    js: \"population\",\n    typ: r(\"ScenarioDatumPopulation\")\n  }, {\n    json: \"simulation\",\n    js: \"simulation\",\n    typ: r(\"ScenarioDatumSimulation\")\n  }], false),\n  ScenarioDatumEpidemiological: o([{\n    json: \"hospitalStayDays\",\n    js: \"hospitalStayDays\",\n    typ: 3.14\n  }, {\n    json: \"icuStayDays\",\n    js: \"icuStayDays\",\n    typ: 3.14\n  }, {\n    json: \"infectiousPeriodDays\",\n    js: \"infectiousPeriodDays\",\n    typ: 3.14\n  }, {\n    json: \"latencyDays\",\n    js: \"latencyDays\",\n    typ: 3.14\n  }, {\n    json: \"overflowSeverity\",\n    js: \"overflowSeverity\",\n    typ: 3.14\n  }, {\n    json: \"peakMonth\",\n    js: \"peakMonth\",\n    typ: 0\n  }, {\n    json: \"r0\",\n    js: \"r0\",\n    typ: r(\"NumericRangeNonNegative\")\n  }, {\n    json: \"seasonalForcing\",\n    js: \"seasonalForcing\",\n    typ: 3.14\n  }], false),\n  NumericRangeNonNegative: o([{\n    json: \"begin\",\n    js: \"begin\",\n    typ: 3.14\n  }, {\n    json: \"end\",\n    js: \"end\",\n    typ: 3.14\n  }], false),\n  ScenarioDatumMitigation: o([{\n    json: \"mitigationIntervals\",\n    js: \"mitigationIntervals\",\n    typ: a(r(\"MitigationInterval\"))\n  }], false),\n  MitigationInterval: o([{\n    json: \"color\",\n    js: \"color\",\n    typ: \"\"\n  }, {\n    json: \"name\",\n    js: \"name\",\n    typ: \"\"\n  }, {\n    json: \"timeRange\",\n    js: \"timeRange\",\n    typ: r(\"DateRange\")\n  }, {\n    json: \"transmissionReduction\",\n    js: \"transmissionReduction\",\n    typ: r(\"PercentageRange\")\n  }], false),\n  DateRange: o([{\n    json: \"begin\",\n    js: \"begin\",\n    typ: Date\n  }, {\n    json: \"end\",\n    js: \"end\",\n    typ: Date\n  }], false),\n  PercentageRange: o([{\n    json: \"begin\",\n    js: \"begin\",\n    typ: 3.14\n  }, {\n    json: \"end\",\n    js: \"end\",\n    typ: 3.14\n  }], false),\n  ScenarioDatumPopulation: o([{\n    json: \"ageDistributionName\",\n    js: \"ageDistributionName\",\n    typ: \"\"\n  }, {\n    json: \"caseCountsName\",\n    js: \"caseCountsName\",\n    typ: \"\"\n  }, {\n    json: \"hospitalBeds\",\n    js: \"hospitalBeds\",\n    typ: 0\n  }, {\n    json: \"icuBeds\",\n    js: \"icuBeds\",\n    typ: 0\n  }, {\n    json: \"importsPerDay\",\n    js: \"importsPerDay\",\n    typ: 3.14\n  }, {\n    json: \"initialNumberOfCases\",\n    js: \"initialNumberOfCases\",\n    typ: 0\n  }, {\n    json: \"populationServed\",\n    js: \"populationServed\",\n    typ: 0\n  }], false),\n  ScenarioDatumSimulation: o([{\n    json: \"numberStochasticRuns\",\n    js: \"numberStochasticRuns\",\n    typ: 0\n  }, {\n    json: \"simulationTimeRange\",\n    js: \"simulationTimeRange\",\n    typ: r(\"DateRange\")\n  }], false),\n  SeverityDistributionArray: o([{\n    json: \"all\",\n    js: \"all\",\n    typ: a(r(\"SeverityDistributionData\"))\n  }], false),\n  SeverityDistributionData: o([{\n    json: \"data\",\n    js: \"data\",\n    typ: a(r(\"SeverityDistributionDatum\"))\n  }, {\n    json: \"name\",\n    js: \"name\",\n    typ: \"\"\n  }], false),\n  SeverityDistributionDatum: o([{\n    json: \"ageGroup\",\n    js: \"ageGroup\",\n    typ: r(\"AgeGroup\")\n  }, {\n    json: \"confirmed\",\n    js: \"confirmed\",\n    typ: 3.14\n  }, {\n    json: \"critical\",\n    js: \"critical\",\n    typ: 3.14\n  }, {\n    json: \"fatal\",\n    js: \"fatal\",\n    typ: 3.14\n  }, {\n    json: \"isolated\",\n    js: \"isolated\",\n    typ: 3.14\n  }, {\n    json: \"severe\",\n    js: \"severe\",\n    typ: 3.14\n  }], false),\n  Shareable: o([{\n    json: \"ageDistributionData\",\n    js: \"ageDistributionData\",\n    typ: r(\"AgeDistributionData\")\n  }, {\n    json: \"scenarioData\",\n    js: \"scenarioData\",\n    typ: r(\"ScenarioData\")\n  }, {\n    json: \"schemaVer\",\n    js: \"schemaVer\",\n    typ: \"\"\n  }, {\n    json: \"severityDistributionData\",\n    js: \"severityDistributionData\",\n    typ: r(\"SeverityDistributionData\")\n  }], false),\n  AgeGroup: [\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"]\n};","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/.generated/latest/types.ts"],"names":["schemaVer","AgeGroup","Convert","toAgeDistributionArray","json","cast","JSON","parse","r","ageDistributionArrayToJson","value","stringify","uncast","toAgeDistributionData","ageDistributionDataToJson","toAgeDistributionDatum","ageDistributionDatumToJson","toCaseCountsArray","caseCountsArrayToJson","toCaseCountsData","caseCountsDataToJson","toCaseCountsDatum","caseCountsDatumToJson","toScenarioArray","scenarioArrayToJson","toScenarioData","scenarioDataToJson","toScenarioDatum","scenarioDatumToJson","toScenarioDatumEpidemiological","scenarioDatumEpidemiologicalToJson","toNumericRangeNonNegative","numericRangeNonNegativeToJson","toScenarioDatumMitigation","scenarioDatumMitigationToJson","toMitigationInterval","mitigationIntervalToJson","toDateRange","dateRangeToJson","toPercentageRange","percentageRangeToJson","toScenarioDatumPopulation","scenarioDatumPopulationToJson","toScenarioDatumSimulation","scenarioDatumSimulationToJson","toSeverityDistributionArray","severityDistributionArrayToJson","toSeverityDistributionData","severityDistributionDataToJson","toSeverityDistributionDatum","severityDistributionDatumToJson","toShareable","shareableToJson","invalidValue","typ","val","Error","jsonToJSProps","jsonToJS","undefined","map","props","forEach","p","key","js","jsToJSONProps","jsToJSON","transform","getProps","transformPrimitive","transformUnion","typs","l","length","i","_","transformEnum","cases","indexOf","transformArray","Array","isArray","el","transformDate","d","Date","isNaN","valueOf","transformObject","additional","result","Object","getOwnPropertyNames","prop","v","prototype","hasOwnProperty","call","ref","typeMap","unionMembers","arrayItems","a","u","o","m","name","AgeDistributionArray","AgeDistributionData","AgeDistributionDatum","CaseCountsArray","CaseCountsData","CaseCountsDatum","ScenarioArray","ScenarioData","ScenarioDatum","ScenarioDatumEpidemiological","NumericRangeNonNegative","ScenarioDatumMitigation","MitigationInterval","DateRange","PercentageRange","ScenarioDatumPopulation","ScenarioDatumSimulation","SeverityDistributionArray","SeverityDistributionData","SeverityDistributionDatum","Shareable"],"mappings":"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","sourcesContent":["export const schemaVer = '2.0.0'\n\n// To parse this data:\n//\n//   import { Convert, AgeDistributionArray, AgeDistributionData, AgeDistributionDatum, AgeGroup, CaseCountsArray, CaseCountsData, CaseCountsDatum, DateRange, MitigationInterval, NumericRangeNonNegative, PercentageRange, ScenarioArray, ScenarioData, ScenarioDatum, ScenarioDatumEpidemiological, ScenarioDatumMitigation, ScenarioDatumPopulation, SeverityDistributionArray, ScenarioDatumSimulation, SeverityDistributionData, Shareable, SeverityDistributionDatum } from \"./file\";\n//\n//   const ageDistributionArray = Convert.toAgeDistributionArray(json);\n//   const ageDistributionData = Convert.toAgeDistributionData(json);\n//   const ageDistributionDatum = Convert.toAgeDistributionDatum(json);\n//   const ageGroup = Convert.toAgeGroup(json);\n//   const caseCountsArray = Convert.toCaseCountsArray(json);\n//   const caseCountsData = Convert.toCaseCountsData(json);\n//   const caseCountsDatum = Convert.toCaseCountsDatum(json);\n//   const colorHex = Convert.toColorHex(json);\n//   const integer = Convert.toInteger(json);\n//   const dateRange = Convert.toDateRange(json);\n//   const integerNonNegative = Convert.toIntegerNonNegative(json);\n//   const integerPositive = Convert.toIntegerPositive(json);\n//   const mitigationInterval = Convert.toMitigationInterval(json);\n//   const numericRangeNonNegative = Convert.toNumericRangeNonNegative(json);\n//   const percentage = Convert.toPercentage(json);\n//   const percentageRange = Convert.toPercentageRange(json);\n//   const scenarioArray = Convert.toScenarioArray(json);\n//   const scenarioData = Convert.toScenarioData(json);\n//   const scenarioDatum = Convert.toScenarioDatum(json);\n//   const scenarioDatumEpidemiological = Convert.toScenarioDatumEpidemiological(json);\n//   const scenarioDatumMitigation = Convert.toScenarioDatumMitigation(json);\n//   const scenarioDatumPopulation = Convert.toScenarioDatumPopulation(json);\n//   const severityDistributionArray = Convert.toSeverityDistributionArray(json);\n//   const scenarioDatumSimulation = Convert.toScenarioDatumSimulation(json);\n//   const severityDistributionData = Convert.toSeverityDistributionData(json);\n//   const shareable = Convert.toShareable(json);\n//   const severityDistributionDatum = Convert.toSeverityDistributionDatum(json);\n//   const schemaVer = Convert.toSchemaVer(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface AgeDistributionArray {\n  all: AgeDistributionData[];\n}\n\nexport interface AgeDistributionData {\n  data: AgeDistributionDatum[];\n  name: string;\n}\n\nexport interface AgeDistributionDatum {\n  ageGroup: AgeGroup;\n  population: number;\n}\n\nexport enum AgeGroup {\n  The09 = \"0-9\",\n  The1019 = \"10-19\",\n  The2029 = \"20-29\",\n  The3039 = \"30-39\",\n  The4049 = \"40-49\",\n  The5059 = \"50-59\",\n  The6069 = \"60-69\",\n  The7079 = \"70-79\",\n  The80 = \"80+\",\n}\n\nexport interface CaseCountsArray {\n  all: CaseCountsData[];\n}\n\nexport interface CaseCountsData {\n  data: CaseCountsDatum[];\n  name: string;\n}\n\nexport interface CaseCountsDatum {\n  cases: number | null;\n  deaths?: number | null;\n  hospitalized?: number | null;\n  icu?: number | null;\n  recovered?: number | null;\n  time: Date;\n}\n\nexport interface ScenarioArray {\n  all: ScenarioData[];\n}\n\nexport interface ScenarioData {\n  data: ScenarioDatum;\n  name: string;\n}\n\nexport interface ScenarioDatum {\n  epidemiological: ScenarioDatumEpidemiological;\n  mitigation: ScenarioDatumMitigation;\n  population: ScenarioDatumPopulation;\n  simulation: ScenarioDatumSimulation;\n}\n\nexport interface ScenarioDatumEpidemiological {\n  hospitalStayDays: number;\n  icuStayDays: number;\n  infectiousPeriodDays: number;\n  latencyDays: number;\n  overflowSeverity: number;\n  peakMonth: number;\n  r0: NumericRangeNonNegative;\n  seasonalForcing: number;\n}\n\nexport interface NumericRangeNonNegative {\n  begin: number;\n  end: number;\n}\n\nexport interface ScenarioDatumMitigation {\n  mitigationIntervals: MitigationInterval[];\n}\n\nexport interface MitigationInterval {\n  color: string;\n  name: string;\n  timeRange: DateRange;\n  transmissionReduction: PercentageRange;\n}\n\nexport interface DateRange {\n  begin: Date;\n  end: Date;\n}\n\nexport interface PercentageRange {\n  begin: number;\n  end: number;\n}\n\nexport interface ScenarioDatumPopulation {\n  ageDistributionName: string;\n  caseCountsName: string;\n  hospitalBeds: number;\n  icuBeds: number;\n  importsPerDay: number;\n  initialNumberOfCases: number;\n  populationServed: number;\n}\n\nexport interface ScenarioDatumSimulation {\n  numberStochasticRuns: number;\n  simulationTimeRange: DateRange;\n}\n\nexport interface SeverityDistributionArray {\n  all: SeverityDistributionData[];\n}\n\nexport interface SeverityDistributionData {\n  data: SeverityDistributionDatum[];\n  name: string;\n}\n\nexport interface SeverityDistributionDatum {\n  ageGroup: AgeGroup;\n  confirmed: number;\n  critical: number;\n  fatal: number;\n  isolated: number;\n  severe: number;\n}\n\nexport interface Shareable {\n  ageDistributionData: AgeDistributionData;\n  scenarioData: ScenarioData;\n  schemaVer: '2.0.0';\n  severityDistributionData: SeverityDistributionData;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  public static toAgeDistributionArray(json: string): AgeDistributionArray {\n    return cast(JSON.parse(json), r(\"AgeDistributionArray\"));\n  }\n\n  public static ageDistributionArrayToJson(\n    value: AgeDistributionArray\n  ): string {\n    return JSON.stringify(uncast(value, r(\"AgeDistributionArray\")), null, 2);\n  }\n\n  public static toAgeDistributionData(json: string): AgeDistributionData {\n    return cast(JSON.parse(json), r(\"AgeDistributionData\"));\n  }\n\n  public static ageDistributionDataToJson(value: AgeDistributionData): string {\n    return JSON.stringify(uncast(value, r(\"AgeDistributionData\")), null, 2);\n  }\n\n  public static toAgeDistributionDatum(json: string): AgeDistributionDatum {\n    return cast(JSON.parse(json), r(\"AgeDistributionDatum\"));\n  }\n\n  public static ageDistributionDatumToJson(\n    value: AgeDistributionDatum\n  ): string {\n    return JSON.stringify(uncast(value, r(\"AgeDistributionDatum\")), null, 2);\n  }\n\n  public static toCaseCountsArray(json: string): CaseCountsArray {\n    return cast(JSON.parse(json), r(\"CaseCountsArray\"));\n  }\n\n  public static caseCountsArrayToJson(value: CaseCountsArray): string {\n    return JSON.stringify(uncast(value, r(\"CaseCountsArray\")), null, 2);\n  }\n\n  public static toCaseCountsData(json: string): CaseCountsData {\n    return cast(JSON.parse(json), r(\"CaseCountsData\"));\n  }\n\n  public static caseCountsDataToJson(value: CaseCountsData): string {\n    return JSON.stringify(uncast(value, r(\"CaseCountsData\")), null, 2);\n  }\n\n  public static toCaseCountsDatum(json: string): CaseCountsDatum {\n    return cast(JSON.parse(json), r(\"CaseCountsDatum\"));\n  }\n\n  public static caseCountsDatumToJson(value: CaseCountsDatum): string {\n    return JSON.stringify(uncast(value, r(\"CaseCountsDatum\")), null, 2);\n  }\n\n  public static toScenarioArray(json: string): ScenarioArray {\n    return cast(JSON.parse(json), r(\"ScenarioArray\"));\n  }\n\n  public static scenarioArrayToJson(value: ScenarioArray): string {\n    return JSON.stringify(uncast(value, r(\"ScenarioArray\")), null, 2);\n  }\n\n  public static toScenarioData(json: string): ScenarioData {\n    return cast(JSON.parse(json), r(\"ScenarioData\"));\n  }\n\n  public static scenarioDataToJson(value: ScenarioData): string {\n    return JSON.stringify(uncast(value, r(\"ScenarioData\")), null, 2);\n  }\n\n  public static toScenarioDatum(json: string): ScenarioDatum {\n    return cast(JSON.parse(json), r(\"ScenarioDatum\"));\n  }\n\n  public static scenarioDatumToJson(value: ScenarioDatum): string {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatum\")), null, 2);\n  }\n\n  public static toScenarioDatumEpidemiological(\n    json: string\n  ): ScenarioDatumEpidemiological {\n    return cast(JSON.parse(json), r(\"ScenarioDatumEpidemiological\"));\n  }\n\n  public static scenarioDatumEpidemiologicalToJson(\n    value: ScenarioDatumEpidemiological\n  ): string {\n    return JSON.stringify(\n      uncast(value, r(\"ScenarioDatumEpidemiological\")),\n      null,\n      2\n    );\n  }\n\n  public static toNumericRangeNonNegative(\n    json: string\n  ): NumericRangeNonNegative {\n    return cast(JSON.parse(json), r(\"NumericRangeNonNegative\"));\n  }\n\n  public static numericRangeNonNegativeToJson(\n    value: NumericRangeNonNegative\n  ): string {\n    return JSON.stringify(uncast(value, r(\"NumericRangeNonNegative\")), null, 2);\n  }\n\n  public static toScenarioDatumMitigation(\n    json: string\n  ): ScenarioDatumMitigation {\n    return cast(JSON.parse(json), r(\"ScenarioDatumMitigation\"));\n  }\n\n  public static scenarioDatumMitigationToJson(\n    value: ScenarioDatumMitigation\n  ): string {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatumMitigation\")), null, 2);\n  }\n\n  public static toMitigationInterval(json: string): MitigationInterval {\n    return cast(JSON.parse(json), r(\"MitigationInterval\"));\n  }\n\n  public static mitigationIntervalToJson(value: MitigationInterval): string {\n    return JSON.stringify(uncast(value, r(\"MitigationInterval\")), null, 2);\n  }\n\n  public static toDateRange(json: string): DateRange {\n    return cast(JSON.parse(json), r(\"DateRange\"));\n  }\n\n  public static dateRangeToJson(value: DateRange): string {\n    return JSON.stringify(uncast(value, r(\"DateRange\")), null, 2);\n  }\n\n  public static toPercentageRange(json: string): PercentageRange {\n    return cast(JSON.parse(json), r(\"PercentageRange\"));\n  }\n\n  public static percentageRangeToJson(value: PercentageRange): string {\n    return JSON.stringify(uncast(value, r(\"PercentageRange\")), null, 2);\n  }\n\n  public static toScenarioDatumPopulation(\n    json: string\n  ): ScenarioDatumPopulation {\n    return cast(JSON.parse(json), r(\"ScenarioDatumPopulation\"));\n  }\n\n  public static scenarioDatumPopulationToJson(\n    value: ScenarioDatumPopulation\n  ): string {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatumPopulation\")), null, 2);\n  }\n\n  public static toScenarioDatumSimulation(\n    json: string\n  ): ScenarioDatumSimulation {\n    return cast(JSON.parse(json), r(\"ScenarioDatumSimulation\"));\n  }\n\n  public static scenarioDatumSimulationToJson(\n    value: ScenarioDatumSimulation\n  ): string {\n    return JSON.stringify(uncast(value, r(\"ScenarioDatumSimulation\")), null, 2);\n  }\n\n  public static toSeverityDistributionArray(\n    json: string\n  ): SeverityDistributionArray {\n    return cast(JSON.parse(json), r(\"SeverityDistributionArray\"));\n  }\n\n  public static severityDistributionArrayToJson(\n    value: SeverityDistributionArray\n  ): string {\n    return JSON.stringify(\n      uncast(value, r(\"SeverityDistributionArray\")),\n      null,\n      2\n    );\n  }\n\n  public static toSeverityDistributionData(\n    json: string\n  ): SeverityDistributionData {\n    return cast(JSON.parse(json), r(\"SeverityDistributionData\"));\n  }\n\n  public static severityDistributionDataToJson(\n    value: SeverityDistributionData\n  ): string {\n    return JSON.stringify(\n      uncast(value, r(\"SeverityDistributionData\")),\n      null,\n      2\n    );\n  }\n\n  public static toSeverityDistributionDatum(\n    json: string\n  ): SeverityDistributionDatum {\n    return cast(JSON.parse(json), r(\"SeverityDistributionDatum\"));\n  }\n\n  public static severityDistributionDatumToJson(\n    value: SeverityDistributionDatum\n  ): string {\n    return JSON.stringify(\n      uncast(value, r(\"SeverityDistributionDatum\")),\n      null,\n      2\n    );\n  }\n\n  public static toShareable(json: string): Shareable {\n    return cast(JSON.parse(json), r(\"Shareable\"));\n  }\n\n  public static shareableToJson(value: Shareable): string {\n    return JSON.stringify(uncast(value, r(\"Shareable\")), null, 2);\n  }\n}\n\nfunction invalidValue(typ: any, val: any): never {\n  throw Error(\n    `Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`\n  );\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) {}\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map((el) => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n    return d;\n  }\n\n  function transformObject(\n    props: { [k: string]: any },\n    additional: any,\n    val: any\n  ): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach((key) => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key)\n        ? val[key]\n        : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps);\n    });\n    Object.getOwnPropertyNames(val).forEach((key) => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n    return invalidValue(typ, val);\n  }\n  if (typ === false) return invalidValue(typ, val);\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\")\n      ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\")\n      ? transformArray(typ.arrayItems, val)\n      : typ.hasOwnProperty(\"props\")\n      ? transformObject(getProps(typ), typ.additional, val)\n      : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\nfunction m(additional: any) {\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nconst typeMap: any = {\n  AgeDistributionArray: o(\n    [{ json: \"all\", js: \"all\", typ: a(r(\"AgeDistributionData\")) }],\n    false\n  ),\n  AgeDistributionData: o(\n    [\n      { json: \"data\", js: \"data\", typ: a(r(\"AgeDistributionDatum\")) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    false\n  ),\n  AgeDistributionDatum: o(\n    [\n      { json: \"ageGroup\", js: \"ageGroup\", typ: r(\"AgeGroup\") },\n      { json: \"population\", js: \"population\", typ: 0 },\n    ],\n    false\n  ),\n  CaseCountsArray: o(\n    [{ json: \"all\", js: \"all\", typ: a(r(\"CaseCountsData\")) }],\n    false\n  ),\n  CaseCountsData: o(\n    [\n      { json: \"data\", js: \"data\", typ: a(r(\"CaseCountsDatum\")) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    false\n  ),\n  CaseCountsDatum: o(\n    [\n      { json: \"cases\", js: \"cases\", typ: u(0, null) },\n      { json: \"deaths\", js: \"deaths\", typ: u(undefined, u(0, null)) },\n      {\n        json: \"hospitalized\",\n        js: \"hospitalized\",\n        typ: u(undefined, u(0, null)),\n      },\n      { json: \"icu\", js: \"icu\", typ: u(undefined, u(0, null)) },\n      { json: \"recovered\", js: \"recovered\", typ: u(undefined, u(0, null)) },\n      { json: \"time\", js: \"time\", typ: Date },\n    ],\n    false\n  ),\n  ScenarioArray: o(\n    [{ json: \"all\", js: \"all\", typ: a(r(\"ScenarioData\")) }],\n    false\n  ),\n  ScenarioData: o(\n    [\n      { json: \"data\", js: \"data\", typ: r(\"ScenarioDatum\") },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    false\n  ),\n  ScenarioDatum: o(\n    [\n      {\n        json: \"epidemiological\",\n        js: \"epidemiological\",\n        typ: r(\"ScenarioDatumEpidemiological\"),\n      },\n      {\n        json: \"mitigation\",\n        js: \"mitigation\",\n        typ: r(\"ScenarioDatumMitigation\"),\n      },\n      {\n        json: \"population\",\n        js: \"population\",\n        typ: r(\"ScenarioDatumPopulation\"),\n      },\n      {\n        json: \"simulation\",\n        js: \"simulation\",\n        typ: r(\"ScenarioDatumSimulation\"),\n      },\n    ],\n    false\n  ),\n  ScenarioDatumEpidemiological: o(\n    [\n      { json: \"hospitalStayDays\", js: \"hospitalStayDays\", typ: 3.14 },\n      { json: \"icuStayDays\", js: \"icuStayDays\", typ: 3.14 },\n      { json: \"infectiousPeriodDays\", js: \"infectiousPeriodDays\", typ: 3.14 },\n      { json: \"latencyDays\", js: \"latencyDays\", typ: 3.14 },\n      { json: \"overflowSeverity\", js: \"overflowSeverity\", typ: 3.14 },\n      { json: \"peakMonth\", js: \"peakMonth\", typ: 0 },\n      { json: \"r0\", js: \"r0\", typ: r(\"NumericRangeNonNegative\") },\n      { json: \"seasonalForcing\", js: \"seasonalForcing\", typ: 3.14 },\n    ],\n    false\n  ),\n  NumericRangeNonNegative: o(\n    [\n      { json: \"begin\", js: \"begin\", typ: 3.14 },\n      { json: \"end\", js: \"end\", typ: 3.14 },\n    ],\n    false\n  ),\n  ScenarioDatumMitigation: o(\n    [\n      {\n        json: \"mitigationIntervals\",\n        js: \"mitigationIntervals\",\n        typ: a(r(\"MitigationInterval\")),\n      },\n    ],\n    false\n  ),\n  MitigationInterval: o(\n    [\n      { json: \"color\", js: \"color\", typ: \"\" },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"timeRange\", js: \"timeRange\", typ: r(\"DateRange\") },\n      {\n        json: \"transmissionReduction\",\n        js: \"transmissionReduction\",\n        typ: r(\"PercentageRange\"),\n      },\n    ],\n    false\n  ),\n  DateRange: o(\n    [\n      { json: \"begin\", js: \"begin\", typ: Date },\n      { json: \"end\", js: \"end\", typ: Date },\n    ],\n    false\n  ),\n  PercentageRange: o(\n    [\n      { json: \"begin\", js: \"begin\", typ: 3.14 },\n      { json: \"end\", js: \"end\", typ: 3.14 },\n    ],\n    false\n  ),\n  ScenarioDatumPopulation: o(\n    [\n      { json: \"ageDistributionName\", js: \"ageDistributionName\", typ: \"\" },\n      { json: \"caseCountsName\", js: \"caseCountsName\", typ: \"\" },\n      { json: \"hospitalBeds\", js: \"hospitalBeds\", typ: 0 },\n      { json: \"icuBeds\", js: \"icuBeds\", typ: 0 },\n      { json: \"importsPerDay\", js: \"importsPerDay\", typ: 3.14 },\n      { json: \"initialNumberOfCases\", js: \"initialNumberOfCases\", typ: 0 },\n      { json: \"populationServed\", js: \"populationServed\", typ: 0 },\n    ],\n    false\n  ),\n  ScenarioDatumSimulation: o(\n    [\n      { json: \"numberStochasticRuns\", js: \"numberStochasticRuns\", typ: 0 },\n      {\n        json: \"simulationTimeRange\",\n        js: \"simulationTimeRange\",\n        typ: r(\"DateRange\"),\n      },\n    ],\n    false\n  ),\n  SeverityDistributionArray: o(\n    [{ json: \"all\", js: \"all\", typ: a(r(\"SeverityDistributionData\")) }],\n    false\n  ),\n  SeverityDistributionData: o(\n    [\n      { json: \"data\", js: \"data\", typ: a(r(\"SeverityDistributionDatum\")) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    false\n  ),\n  SeverityDistributionDatum: o(\n    [\n      { json: \"ageGroup\", js: \"ageGroup\", typ: r(\"AgeGroup\") },\n      { json: \"confirmed\", js: \"confirmed\", typ: 3.14 },\n      { json: \"critical\", js: \"critical\", typ: 3.14 },\n      { json: \"fatal\", js: \"fatal\", typ: 3.14 },\n      { json: \"isolated\", js: \"isolated\", typ: 3.14 },\n      { json: \"severe\", js: \"severe\", typ: 3.14 },\n    ],\n    false\n  ),\n  Shareable: o(\n    [\n      {\n        json: \"ageDistributionData\",\n        js: \"ageDistributionData\",\n        typ: r(\"AgeDistributionData\"),\n      },\n      { json: \"scenarioData\", js: \"scenarioData\", typ: r(\"ScenarioData\") },\n      { json: \"schemaVer\", js: \"schemaVer\", typ: \"\" },\n      {\n        json: \"severityDistributionData\",\n        js: \"severityDistributionData\",\n        typ: r(\"SeverityDistributionData\"),\n      },\n    ],\n    false\n  ),\n  AgeGroup: [\n    \"0-9\",\n    \"10-19\",\n    \"20-29\",\n    \"30-39\",\n    \"40-49\",\n    \"50-59\",\n    \"60-69\",\n    \"70-79\",\n    \"80+\",\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}