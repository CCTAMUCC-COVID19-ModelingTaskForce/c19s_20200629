{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Disclaimer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Button, Col, CustomInput, Form, FormGroup, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\nimport { selectDisclaimerShouldSuppress, selectDisclaimerVersionAccepted } from '../../state/settings/settings.selectors';\nimport { setDisclaimerVersionAccepted, toggleDisclaimerShouldSuppress } from '../../state/settings/settings.actions';\nimport './Disclaimer.scss';\nconst DISCLAIMER_CURRENT_VERSION = 1;\n\nconst mapStateToProps = state => ({\n  disclaimerVersionAccepted: selectDisclaimerVersionAccepted(state),\n  disclaimerShouldSuppress: selectDisclaimerShouldSuppress(state)\n});\n\nconst mapDispatchToProps = {\n  setDisclaimerVersionAccepted,\n  toggleDisclaimerShouldSuppress\n};\nexport const Disclaimer = connect(mapStateToProps, mapDispatchToProps)(DisclaimerDisconnected);\nexport function DisclaimerDisconnected({\n  disclaimerVersionAccepted,\n  disclaimerShouldSuppress,\n  setDisclaimerVersionAccepted,\n  toggleDisclaimerShouldSuppress\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [isOpen, setIsOpen] = useState(!(disclaimerShouldSuppress && disclaimerVersionAccepted && disclaimerVersionAccepted <= DISCLAIMER_CURRENT_VERSION));\n\n  function onAccept() {\n    setDisclaimerVersionAccepted(DISCLAIMER_CURRENT_VERSION);\n    setIsOpen(false);\n  }\n\n  const toggleDisclaimerShouldSuppressLocal = () => toggleDisclaimerShouldSuppress();\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    backdrop: \"static\",\n    fade: false,\n    centered: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, t(`COVID-19 Scenarios`)), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, t('This tool uses a mathematical model to simulate a variety of COVID-19 outcomes based on user-defined parameters. This output of the model depends on model assumptions and parameter choices.')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, t('It is not a medical predictor, and should be used for informational and research purposes only. Please carefully consider the parameters you choose. Interpret and use the simulated results responsibly. Authors are not liable for any direct or indirect consequences of this usage.')))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dont-show-again\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"dont-show-again\",\n    type: \"checkbox\",\n    onChange: toggleDisclaimerShouldSuppressLocal,\n    checked: disclaimerShouldSuppress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }), t(`Don't show again`))))))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: onAccept,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, t('Accept'))));\n}\n\n_s(DisclaimerDisconnected, \"kESDR1JIPac+rGRzMa8NcG3Fies=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DisclaimerDisconnected;\nDisclaimerDisconnected.propTypes = {\n  disclaimerVersionAccepted: _pt.number,\n  disclaimerShouldSuppress: _pt.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DisclaimerDisconnected\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Disclaimer.tsx"],"names":["React","useState","useTranslation","connect","Button","Col","CustomInput","Form","FormGroup","Modal","ModalBody","ModalFooter","ModalHeader","Row","selectDisclaimerShouldSuppress","selectDisclaimerVersionAccepted","setDisclaimerVersionAccepted","toggleDisclaimerShouldSuppress","DISCLAIMER_CURRENT_VERSION","mapStateToProps","state","disclaimerVersionAccepted","disclaimerShouldSuppress","mapDispatchToProps","Disclaimer","DisclaimerDisconnected","t","isOpen","setIsOpen","onAccept","toggleDisclaimerShouldSuppressLocal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\nimport { Button, Col, CustomInput, Form, FormGroup, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap'\nimport { ActionCreator } from 'typescript-fsa'\n\nimport type { State } from '../../state/reducer'\nimport {\n  selectDisclaimerShouldSuppress,\n  selectDisclaimerVersionAccepted,\n} from '../../state/settings/settings.selectors'\nimport { setDisclaimerVersionAccepted, toggleDisclaimerShouldSuppress } from '../../state/settings/settings.actions'\n\nimport './Disclaimer.scss'\n\nconst DISCLAIMER_CURRENT_VERSION = 1\n\nexport interface DisclaimerProps {\n  disclaimerVersionAccepted?: number\n  disclaimerShouldSuppress: boolean\n  setDisclaimerVersionAccepted: ActionCreator<number>\n  toggleDisclaimerShouldSuppress: ActionCreator<void>\n}\n\nconst mapStateToProps = (state: State) => ({\n  disclaimerVersionAccepted: selectDisclaimerVersionAccepted(state),\n  disclaimerShouldSuppress: selectDisclaimerShouldSuppress(state),\n})\n\nconst mapDispatchToProps = {\n  setDisclaimerVersionAccepted,\n  toggleDisclaimerShouldSuppress,\n}\n\nexport const Disclaimer = connect(mapStateToProps, mapDispatchToProps)(DisclaimerDisconnected)\n\nexport function DisclaimerDisconnected({\n  disclaimerVersionAccepted,\n  disclaimerShouldSuppress,\n  setDisclaimerVersionAccepted,\n  toggleDisclaimerShouldSuppress,\n}: DisclaimerProps) {\n  const { t } = useTranslation()\n\n  const [isOpen, setIsOpen] = useState(\n    !(disclaimerShouldSuppress && disclaimerVersionAccepted && disclaimerVersionAccepted <= DISCLAIMER_CURRENT_VERSION),\n  )\n\n  function onAccept() {\n    setDisclaimerVersionAccepted(DISCLAIMER_CURRENT_VERSION)\n    setIsOpen(false)\n  }\n\n  const toggleDisclaimerShouldSuppressLocal = () => toggleDisclaimerShouldSuppress()\n\n  return (\n    <Modal isOpen={isOpen} backdrop=\"static\" fade={false} centered autoFocus>\n      <ModalHeader>{t(`COVID-19 Scenarios`)}</ModalHeader>\n      <ModalBody>\n        <Row>\n          <Col>\n            <p>\n              {t(\n                'This tool uses a mathematical model to simulate a variety of COVID-19 outcomes based on user-defined parameters. This output of the model depends on model assumptions and parameter choices.',\n              )}\n            </p>\n            <p>\n              {t(\n                'It is not a medical predictor, and should be used for informational and research purposes only. Please carefully consider the parameters you choose. Interpret and use the simulated results responsibly. Authors are not liable for any direct or indirect consequences of this usage.',\n              )}\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form inline>\n              <FormGroup className=\"ml-auto\">\n                <label htmlFor=\"dont-show-again\" className=\"d-flex\">\n                  <CustomInput\n                    id=\"dont-show-again\"\n                    type=\"checkbox\"\n                    onChange={toggleDisclaimerShouldSuppressLocal}\n                    checked={disclaimerShouldSuppress}\n                  />\n                  {t(`Don't show again`)}\n                </label>\n              </FormGroup>\n            </Form>\n          </Col>\n        </Row>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"danger\" onClick={onAccept}>\n          {t('Accept')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}