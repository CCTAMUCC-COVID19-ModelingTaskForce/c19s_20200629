{"ast":null,"code":"export const selectRunParams = state => {\n  const {\n    scenarioData,\n    ageDistributionData,\n    severityDistributionData\n  } = state.scenario;\n  const params = { ...scenarioData.data.population,\n    ...scenarioData.data.epidemiological,\n    ...scenarioData.data.simulation,\n    ...scenarioData.data.mitigation\n  };\n  return {\n    params,\n    ageDistribution: ageDistributionData.data,\n    severity: severityDistributionData.data\n  };\n};\nexport const selectScenarioNames = state => state.scenario.defaultScenariosNames;\nexport const selectCurrentScenarioName = state => state.scenario.scenarioData.name;\nexport const selectScenarioData = state => state.scenario.scenarioData.data;\nexport const selectAgeDistributionData = state => state.scenario.ageDistributionData.data;\nexport const selectSeverityDistributionData = state => state.scenario.severityDistributionData.data;\nexport const selectCaseCountsData = state => {\n  var _state$scenario$caseC;\n\n  return (_state$scenario$caseC = state.scenario.caseCountsData) === null || _state$scenario$caseC === void 0 ? void 0 : _state$scenario$caseC.data;\n};\nexport const selectCaseCountsNameCustom = state => state.scenario.caseCountsNameCustom;\nexport const selectScenarioParameters = ({\n  scenario: {\n    scenarioData,\n    severityDistributionData,\n    ageDistributionData\n  }\n}) => ({\n  scenarioData,\n  severityDistributionData,\n  ageDistributionData\n});\nexport const selectMitigationIntervals = state => state.scenario.scenarioData.data.mitigation.mitigationIntervals;\nexport const selectCanRun = state => state.scenario.canRun && !state.algorithm.isRunning;","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/state/scenario/scenario.selectors.ts"],"names":["selectRunParams","state","scenarioData","ageDistributionData","severityDistributionData","scenario","params","data","population","epidemiological","simulation","mitigation","ageDistribution","severity","selectScenarioNames","defaultScenariosNames","selectCurrentScenarioName","name","selectScenarioData","selectAgeDistributionData","selectSeverityDistributionData","selectCaseCountsData","caseCountsData","selectCaseCountsNameCustom","caseCountsNameCustom","selectScenarioParameters","selectMitigationIntervals","mitigationIntervals","selectCanRun","canRun","algorithm","isRunning"],"mappings":"AAUA,OAAO,MAAMA,eAAe,GAAIC,KAAD,IAA6B;AAC1D,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,mBAAhB;AAAqCC,IAAAA;AAArC,MAAkEH,KAAK,CAACI,QAA9E;AAEA,QAAMC,MAAM,GAAG,EACb,GAAGJ,YAAY,CAACK,IAAb,CAAkBC,UADR;AAEb,OAAGN,YAAY,CAACK,IAAb,CAAkBE,eAFR;AAGb,OAAGP,YAAY,CAACK,IAAb,CAAkBG,UAHR;AAIb,OAAGR,YAAY,CAACK,IAAb,CAAkBI;AAJR,GAAf;AAOA,SAAO;AAAEL,IAAAA,MAAF;AAAUM,IAAAA,eAAe,EAAET,mBAAmB,CAACI,IAA/C;AAAqDM,IAAAA,QAAQ,EAAET,wBAAwB,CAACG;AAAxF,GAAP;AACD,CAXM;AAaP,OAAO,MAAMO,mBAAmB,GAAIb,KAAD,IAA4BA,KAAK,CAACI,QAAN,CAAeU,qBAAvE;AAEP,OAAO,MAAMC,yBAAyB,GAAIf,KAAD,IAA0BA,KAAK,CAACI,QAAN,CAAeH,YAAf,CAA4Be,IAAxF;AAEP,OAAO,MAAMC,kBAAkB,GAAIjB,KAAD,IAAiCA,KAAK,CAACI,QAAN,CAAeH,YAAf,CAA4BK,IAAxF;AAEP,OAAO,MAAMY,yBAAyB,GAAIlB,KAAD,IACvCA,KAAK,CAACI,QAAN,CAAeF,mBAAf,CAAmCI,IAD9B;AAGP,OAAO,MAAMa,8BAA8B,GAAInB,KAAD,IAC5CA,KAAK,CAACI,QAAN,CAAeD,wBAAf,CAAwCG,IADnC;AAGP,OAAO,MAAMc,oBAAoB,GAAIpB,KAAD;AAAA;;AAAA,kCAAkBA,KAAK,CAACI,QAAN,CAAeiB,cAAjC,0DAAkB,sBAA+Bf,IAAjD;AAAA,CAA7B;AAEP,OAAO,MAAMgB,0BAA0B,GAAItB,KAAD,IAAkBA,KAAK,CAACI,QAAN,CAAemB,oBAApE;AAEP,OAAO,MAAMC,wBAAwB,GAAG,CAAC;AACvCpB,EAAAA,QAAQ,EAAE;AAAEH,IAAAA,YAAF;AAAgBE,IAAAA,wBAAhB;AAA0CD,IAAAA;AAA1C;AAD6B,CAAD,MAEN;AAChCD,EAAAA,YADgC;AAEhCE,EAAAA,wBAFgC;AAGhCD,EAAAA;AAHgC,CAFM,CAAjC;AAQP,OAAO,MAAMuB,yBAAyB,GAAIzB,KAAD,IACvCA,KAAK,CAACI,QAAN,CAAeH,YAAf,CAA4BK,IAA5B,CAAiCI,UAAjC,CAA4CgB,mBADvC;AAGP,OAAO,MAAMC,YAAY,GAAI3B,KAAD,IAA2BA,KAAK,CAACI,QAAN,CAAewB,MAAf,IAAyB,CAAC5B,KAAK,CAAC6B,SAAN,CAAgBC,SAA1F","sourcesContent":["import type { RunParams } from '../../algorithms/run'\nimport type {\n  AgeDistributionDatum,\n  MitigationInterval,\n  ScenarioDatum,\n  SeverityDistributionDatum,\n  ScenarioParameters,\n} from '../../algorithms/types/Param.types'\nimport type { State } from '../reducer'\n\nexport const selectRunParams = (state: State): RunParams => {\n  const { scenarioData, ageDistributionData, severityDistributionData } = state.scenario\n\n  const params = {\n    ...scenarioData.data.population,\n    ...scenarioData.data.epidemiological,\n    ...scenarioData.data.simulation,\n    ...scenarioData.data.mitigation,\n  }\n\n  return { params, ageDistribution: ageDistributionData.data, severity: severityDistributionData.data }\n}\n\nexport const selectScenarioNames = (state: State): string[] => state.scenario.defaultScenariosNames\n\nexport const selectCurrentScenarioName = (state: State): string => state.scenario.scenarioData.name\n\nexport const selectScenarioData = (state: State): ScenarioDatum => state.scenario.scenarioData.data\n\nexport const selectAgeDistributionData = (state: State): AgeDistributionDatum[] =>\n  state.scenario.ageDistributionData.data\n\nexport const selectSeverityDistributionData = (state: State): SeverityDistributionDatum[] =>\n  state.scenario.severityDistributionData.data\n\nexport const selectCaseCountsData = (state: State) => state.scenario.caseCountsData?.data\n\nexport const selectCaseCountsNameCustom = (state: State) => state.scenario.caseCountsNameCustom\n\nexport const selectScenarioParameters = ({\n  scenario: { scenarioData, severityDistributionData, ageDistributionData },\n}: State): ScenarioParameters => ({\n  scenarioData,\n  severityDistributionData,\n  ageDistributionData,\n})\n\nexport const selectMitigationIntervals = (state: State): MitigationInterval[] =>\n  state.scenario.scenarioData.data.mitigation.mitigationIntervals\n\nexport const selectCanRun = (state: State): boolean => state.scenario.canRun && !state.algorithm.isRunning\n"]},"metadata":{},"sourceType":"module"}