{"ast":null,"code":"\"use strict\";\n\nvar ucs2length = require(\"ajv/lib/compile/ucs2length\");\n\nvar equal = require(\"ajv/lib/compile/equal\");\n\nvar validate = function () {\n  var refVal = [];\n\n  var refVal1 = function () {\n    var refVal = [];\n\n    var refVal1 = function () {\n      var refVal = [];\n      var refVal1 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"AgeGroup\",\n        title: \"AgeGroup\",\n        type: \"string\",\n        enum: [\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"]\n      };\n      refVal[1] = refVal1;\n      var refVal2 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"Percentage\",\n        title: \"Percentage\",\n        type: \"number\",\n        minimum: 0,\n        maximum: 100\n      };\n      refVal[2] = refVal2;\n      return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n        \"use strict\";\n\n        var vErrors = null;\n        var errors = 0;\n\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n\n          for (var key0 in data) {\n            var isAdditional0 = !(false || key0 == \"ageGroup\" || key0 == \"isolated\" || key0 == \"confirmed\" || key0 == \"severe\" || key0 == \"critical\" || key0 == \"fatal\");\n\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\"\n                },\n                message: \"should NOT have additional properties\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          }\n\n          var data1 = data.ageGroup;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"ageGroup\"\n              },\n              message: \"should have required property 'ageGroup'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 !== \"string\") {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/type\",\n                params: {\n                  type: \"string\"\n                },\n                message: \"should be string\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var schema2 = refVal1.enum;\n            var valid2;\n            valid2 = false;\n\n            for (var i2 = 0; i2 < schema2.length; i2++) if (equal(data1, schema2[i2])) {\n              valid2 = true;\n              break;\n            }\n\n            if (!valid2) {\n              var err = {\n                keyword: \"enum\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/enum\",\n                params: {\n                  allowedValues: schema2\n                },\n                message: \"should be equal to one of the allowed values\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.isolated;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"isolated\"\n              },\n              message: \"should have required property 'isolated'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/isolated\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.confirmed;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"confirmed\"\n              },\n              message: \"should have required property 'confirmed'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/confirmed\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.severe;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"severe\"\n              },\n              message: \"should have required property 'severe'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/severe\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.critical;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"critical\"\n              },\n              message: \"should have required property 'critical'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/critical\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.fatal;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"fatal\"\n              },\n              message: \"should have required property 'fatal'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/fatal\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\"\n            },\n            message: \"should be object\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    }();\n\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"SeverityDistributionDatum\",\n      title: \"SeverityDistributionDatum\",\n      additionalProperties: false,\n      type: \"object\",\n      required: [\"ageGroup\", \"isolated\", \"confirmed\", \"severe\", \"critical\", \"fatal\"],\n      properties: {\n        ageGroup: {\n          $ref: \"AgeGroup#\"\n        },\n        isolated: {\n          $ref: \"Percentage#\"\n        },\n        confirmed: {\n          $ref: \"Percentage#\"\n        },\n        severe: {\n          $ref: \"Percentage#\"\n        },\n        critical: {\n          $ref: \"Percentage#\"\n        },\n        fatal: {\n          $ref: \"Percentage#\"\n        }\n      }\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \"use strict\";\n\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\"\n              },\n              message: \"should NOT have additional properties\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n        }\n\n        var data1 = data.name;\n\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\"\n            },\n            message: \"should have required property 'name'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1\n                },\n                message: \"should NOT be shorter than 1 characters\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\"\n              },\n              message: \"should be string\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n\n        var data1 = data.data;\n\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\"\n            },\n            message: \"should have required property 'data'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (Array.isArray(data1)) {\n            var errs__1 = errors;\n            var valid1;\n\n            for (var i1 = 0; i1 < data1.length; i1++) {\n              var errs_2 = errors;\n\n              if (!refVal1(data1[i1], (dataPath || \"\") + \"/data/\" + i1, data1, i1, rootData)) {\n                if (vErrors === null) vErrors = refVal1.errors;else vErrors = vErrors.concat(refVal1.errors);\n                errors = vErrors.length;\n              }\n\n              var valid2 = errors === errs_2;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/data\",\n              schemaPath: \"#/properties/data/type\",\n              params: {\n                type: \"array\"\n              },\n              message: \"should be array\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"should be object\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      }\n\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  }();\n\n  refVal1.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"SeverityDistributionData\",\n    title: \"SeverityDistributionData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1\n      },\n      data: {\n        type: \"array\",\n        items: {\n          $ref: \"SeverityDistributionDatum#\"\n        }\n      }\n    }\n  };\n  refVal1.errors = null;\n  refVal[1] = refVal1;\n  return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n    \"use strict\";\n\n    var vErrors = null;\n    var errors = 0;\n    if (rootData === undefined) rootData = data;\n\n    if (data && typeof data === \"object\" && !Array.isArray(data)) {\n      var errs__0 = errors;\n      var valid1 = true;\n\n      for (var key0 in data) {\n        var isAdditional0 = !(false || key0 == \"all\");\n\n        if (isAdditional0) {\n          valid1 = false;\n          var err = {\n            keyword: \"additionalProperties\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/additionalProperties\",\n            params: {\n              additionalProperty: \"\" + key0 + \"\"\n            },\n            message: \"should NOT have additional properties\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n      }\n\n      var data1 = data.all;\n\n      if (data1 === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"all\"\n          },\n          message: \"should have required property 'all'\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n\n        if (Array.isArray(data1)) {\n          var errs__1 = errors;\n          var valid1;\n\n          for (var i1 = 0; i1 < data1.length; i1++) {\n            var errs_2 = errors;\n\n            if (!refVal1(data1[i1], (dataPath || \"\") + \"/all/\" + i1, data1, i1, rootData)) {\n              if (vErrors === null) vErrors = refVal1.errors;else vErrors = vErrors.concat(refVal1.errors);\n              errors = vErrors.length;\n            }\n\n            var valid2 = errors === errs_2;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"/all\",\n            schemaPath: \"#/properties/all/type\",\n            params: {\n              type: \"array\"\n            },\n            message: \"should be array\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n\n        var valid1 = errors === errs_1;\n      }\n    } else {\n      var err = {\n        keyword: \"type\",\n        dataPath: (dataPath || \"\") + \"\",\n        schemaPath: \"#/type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"should be object\"\n      };\n      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n      errors++;\n    }\n\n    validate.errors = vErrors;\n    return errors === 0;\n  };\n}();\n\nvalidate.schema = {\n  $schema: \"http://json-schema.org/draft-07/schema\",\n  $id: \"SeverityDistributionArray\",\n  title: \"SeverityDistributionArray\",\n  type: \"object\",\n  additionalProperties: false,\n  required: [\"all\"],\n  properties: {\n    all: {\n      type: \"array\",\n      items: {\n        $ref: \"SeverityDistributionData#\"\n      }\n    }\n  }\n};\nvalidate.errors = null;\nmodule.exports = validate;","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/.generated/latest/validateSeverityDistributionArray.js"],"names":["ucs2length","require","equal","validate","refVal","refVal1","$schema","$id","title","type","enum","refVal2","minimum","maximum","data","dataPath","parentData","parentDataProperty","rootData","vErrors","errors","Array","isArray","errs__0","valid1","key0","isAdditional0","err","keyword","schemaPath","params","additionalProperty","message","push","data1","ageGroup","undefined","missingProperty","errs_1","errs_2","schema2","valid2","i2","length","allowedValues","isolated","comparison","limit","exclusive","confirmed","severe","critical","fatal","schema","additionalProperties","required","properties","$ref","name","errs__1","i1","concat","minLength","items","all","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar ucs2length = require(\"ajv/lib/compile/ucs2length\");\nvar equal = require(\"ajv/lib/compile/equal\");\nvar validate = (function () {\n  var refVal = [];\n  var refVal1 = (function () {\n    var refVal = [];\n    var refVal1 = (function () {\n      var refVal = [];\n      var refVal1 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"AgeGroup\",\n        title: \"AgeGroup\",\n        type: \"string\",\n        enum: [\n          \"0-9\",\n          \"10-19\",\n          \"20-29\",\n          \"30-39\",\n          \"40-49\",\n          \"50-59\",\n          \"60-69\",\n          \"70-79\",\n          \"80+\",\n        ],\n      };\n      refVal[1] = refVal1;\n      var refVal2 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"Percentage\",\n        title: \"Percentage\",\n        type: \"number\",\n        minimum: 0,\n        maximum: 100,\n      };\n      refVal[2] = refVal2;\n      return function validate(\n        data,\n        dataPath,\n        parentData,\n        parentDataProperty,\n        rootData\n      ) {\n        \"use strict\" /*# sourceURL=SeverityDistributionDatum */;\n        var vErrors = null;\n        var errors = 0;\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n          for (var key0 in data) {\n            var isAdditional0 = !(\n              false ||\n              key0 == \"ageGroup\" ||\n              key0 == \"isolated\" ||\n              key0 == \"confirmed\" ||\n              key0 == \"severe\" ||\n              key0 == \"critical\" ||\n              key0 == \"fatal\"\n            );\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\",\n                },\n                message: \"should NOT have additional properties\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          }\n          var data1 = data.ageGroup;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"ageGroup\",\n              },\n              message: \"should have required property 'ageGroup'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 !== \"string\") {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/type\",\n                params: {\n                  type: \"string\",\n                },\n                message: \"should be string\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var schema2 = refVal1.enum;\n            var valid2;\n            valid2 = false;\n            for (var i2 = 0; i2 < schema2.length; i2++)\n              if (equal(data1, schema2[i2])) {\n                valid2 = true;\n                break;\n              }\n            if (!valid2) {\n              var err = {\n                keyword: \"enum\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/enum\",\n                params: {\n                  allowedValues: schema2,\n                },\n                message: \"should be equal to one of the allowed values\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.isolated;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"isolated\",\n              },\n              message: \"should have required property 'isolated'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/isolated\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.confirmed;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"confirmed\",\n              },\n              message: \"should have required property 'confirmed'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/confirmed\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.severe;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"severe\",\n              },\n              message: \"should have required property 'severe'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/severe\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.critical;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"critical\",\n              },\n              message: \"should have required property 'critical'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/critical\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.fatal;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"fatal\",\n              },\n              message: \"should have required property 'fatal'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/fatal\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\",\n            },\n            message: \"should be object\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    })();\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"SeverityDistributionDatum\",\n      title: \"SeverityDistributionDatum\",\n      additionalProperties: false,\n      type: \"object\",\n      required: [\n        \"ageGroup\",\n        \"isolated\",\n        \"confirmed\",\n        \"severe\",\n        \"critical\",\n        \"fatal\",\n      ],\n      properties: {\n        ageGroup: {\n          $ref: \"AgeGroup#\",\n        },\n        isolated: {\n          $ref: \"Percentage#\",\n        },\n        confirmed: {\n          $ref: \"Percentage#\",\n        },\n        severe: {\n          $ref: \"Percentage#\",\n        },\n        critical: {\n          $ref: \"Percentage#\",\n        },\n        fatal: {\n          $ref: \"Percentage#\",\n        },\n      },\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(\n      data,\n      dataPath,\n      parentData,\n      parentDataProperty,\n      rootData\n    ) {\n      \"use strict\" /*# sourceURL=SeverityDistributionData */;\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\",\n              },\n              message: \"should NOT have additional properties\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        var data1 = data.name;\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\",\n            },\n            message: \"should have required property 'name'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1,\n                },\n                message: \"should NOT be shorter than 1 characters\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\",\n              },\n              message: \"should be string\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        var data1 = data.data;\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\",\n            },\n            message: \"should have required property 'data'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (Array.isArray(data1)) {\n            var errs__1 = errors;\n            var valid1;\n            for (var i1 = 0; i1 < data1.length; i1++) {\n              var errs_2 = errors;\n              if (\n                !refVal1(\n                  data1[i1],\n                  (dataPath || \"\") + \"/data/\" + i1,\n                  data1,\n                  i1,\n                  rootData\n                )\n              ) {\n                if (vErrors === null) vErrors = refVal1.errors;\n                else vErrors = vErrors.concat(refVal1.errors);\n                errors = vErrors.length;\n              }\n              var valid2 = errors === errs_2;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/data\",\n              schemaPath: \"#/properties/data/type\",\n              params: {\n                type: \"array\",\n              },\n              message: \"should be array\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\",\n          },\n          message: \"should be object\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal1.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"SeverityDistributionData\",\n    title: \"SeverityDistributionData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1,\n      },\n      data: {\n        type: \"array\",\n        items: {\n          $ref: \"SeverityDistributionDatum#\",\n        },\n      },\n    },\n  };\n  refVal1.errors = null;\n  refVal[1] = refVal1;\n  return function validate(\n    data,\n    dataPath,\n    parentData,\n    parentDataProperty,\n    rootData\n  ) {\n    \"use strict\" /*# sourceURL=SeverityDistributionArray */;\n    var vErrors = null;\n    var errors = 0;\n    if (rootData === undefined) rootData = data;\n    if (data && typeof data === \"object\" && !Array.isArray(data)) {\n      var errs__0 = errors;\n      var valid1 = true;\n      for (var key0 in data) {\n        var isAdditional0 = !(false || key0 == \"all\");\n        if (isAdditional0) {\n          valid1 = false;\n          var err = {\n            keyword: \"additionalProperties\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/additionalProperties\",\n            params: {\n              additionalProperty: \"\" + key0 + \"\",\n            },\n            message: \"should NOT have additional properties\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n      }\n      var data1 = data.all;\n      if (data1 === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"all\",\n          },\n          message: \"should have required property 'all'\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n        if (Array.isArray(data1)) {\n          var errs__1 = errors;\n          var valid1;\n          for (var i1 = 0; i1 < data1.length; i1++) {\n            var errs_2 = errors;\n            if (\n              !refVal1(\n                data1[i1],\n                (dataPath || \"\") + \"/all/\" + i1,\n                data1,\n                i1,\n                rootData\n              )\n            ) {\n              if (vErrors === null) vErrors = refVal1.errors;\n              else vErrors = vErrors.concat(refVal1.errors);\n              errors = vErrors.length;\n            }\n            var valid2 = errors === errs_2;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"/all\",\n            schemaPath: \"#/properties/all/type\",\n            params: {\n              type: \"array\",\n            },\n            message: \"should be array\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n        var valid1 = errors === errs_1;\n      }\n    } else {\n      var err = {\n        keyword: \"type\",\n        dataPath: (dataPath || \"\") + \"\",\n        schemaPath: \"#/type\",\n        params: {\n          type: \"object\",\n        },\n        message: \"should be object\",\n      };\n      if (vErrors === null) vErrors = [err];\n      else vErrors.push(err);\n      errors++;\n    }\n    validate.errors = vErrors;\n    return errors === 0;\n  };\n})();\nvalidate.schema = {\n  $schema: \"http://json-schema.org/draft-07/schema\",\n  $id: \"SeverityDistributionArray\",\n  title: \"SeverityDistributionArray\",\n  type: \"object\",\n  additionalProperties: false,\n  required: [\"all\"],\n  properties: {\n    all: {\n      type: \"array\",\n      items: {\n        $ref: \"SeverityDistributionData#\",\n      },\n    },\n  },\n};\nvalidate.errors = null;\nmodule.exports = validate;\n"]},"metadata":{},"sourceType":"script"}