{"ast":null,"code":"import _pt from \"prop-types\";\nimport _isNil from \"lodash/isNil\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/OutcomesDetailsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Table } from 'reactstrap';\nimport { selectResult } from '../../../state/algorithm/algorithm.selectors';\nimport { numberFormatter } from '../../../helpers/numberFormat';\nimport './OutcomesDetailsTable.scss';\nconst STEP = 7;\nconst formatter = numberFormatter(true, true);\n\nfunction numberFormat(x) {\n  return formatter(x !== null && x !== void 0 ? x : 0);\n}\n\nfunction dateFormat(time) {\n  return moment(time).format('MMM DD YYYY');\n}\n/**\n * Samples array values with a given step.\n * For example, if step is 7, it will return an array with every 7th value from the original array.\n */\n\n\nexport function sampleEvery(arr, step) {\n  return arr.filter((_0, i) => i % step === 0);\n}\nexport function NumberWithUncertainty({\n  value,\n  lower,\n  upper\n}) {\n  const lowerFinite = !_isNil(lower) && Number.isFinite(lower);\n  const valueFinite = !_isNil(value) && Number.isFinite(value);\n  const upperFinite = !_isNil(upper) && Number.isFinite(upper); // Three-way range\n\n  if (valueFinite && lowerFinite && upperFinite) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \"(\", numberFormat(lower), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, numberFormat(value)), \", \", numberFormat(upper), \")\");\n  } // Just value\n\n\n  if ((!lowerFinite || !upperFinite) && valueFinite) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, numberFormat(value));\n  } // Two-way range (\"from - $to\")\n\n\n  if (!valueFinite && lowerFinite && upperFinite) {\n    const lowerFormatted = numberFormat(lower);\n    const upperFormatted = numberFormat(upper); // Avoid formats like \"0 - 0\" and \"5k - 5k\"\n\n    if (lowerFormatted === upperFormatted) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 14\n        }\n      }, lowerFormatted);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, numberFormat(lower), \" - \", numberFormat(upper));\n  } // Catch-all value is zero\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, '0');\n}\n_c = NumberWithUncertainty;\nNumberWithUncertainty.propTypes = {\n  value: _pt.number,\n  lower: _pt.number,\n  upper: _pt.number\n};\n\nconst mapStateToProps = state => ({\n  result: selectResult(state)\n});\n\nconst mapDispatchToProps = {};\nexport const OutcomesDetailsTable = connect(mapStateToProps, mapDispatchToProps)(OutcomesDetailsTableDisconnected);\nexport function OutcomesDetailsTableDisconnected({\n  result,\n  forPrint,\n  formatter = Number.toString\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  if (!result) {\n    return null;\n  }\n\n  const downsampled = {\n    middle: sampleEvery(result.trajectory.middle, STEP),\n    lower: sampleEvery(result.trajectory.lower, STEP),\n    upper: sampleEvery(result.trajectory.upper, STEP)\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('outcomes-table-wrapper', forPrint && 'print-preview'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classNames('outcomes-table', forPrint && 'print-preview'),\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"outcome-table-th outcome-table-th-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, t(`Date`)), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"outcome-table-th bg-severe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, t(`Severe`)), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"outcome-table-th bg-critical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, t(`Critical`)), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"outcome-table-th bg-overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, t(`ICU Overflow`)), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"outcome-table-th bg-fatality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, t(`Deaths`)), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"outcome-table-th bg-recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, t(`Recovered`)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"outcomes-table-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, downsampled.middle.map((line, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: line.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, dateFormat(line.time)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"bg-severe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NumberWithUncertainty, {\n    lower: downsampled.lower[i].current.severe.total,\n    upper: downsampled.upper[i].current.severe.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"bg-critical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NumberWithUncertainty, {\n    lower: downsampled.lower[i].current.critical.total,\n    upper: downsampled.upper[i].current.critical.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"bg-overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NumberWithUncertainty, {\n    lower: downsampled.lower[i].current.overflow.total,\n    upper: downsampled.upper[i].current.overflow.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"bg-fatality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NumberWithUncertainty, {\n    lower: downsampled.lower[i].cumulative.fatality.total,\n    upper: downsampled.upper[i].cumulative.fatality.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"bg-recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NumberWithUncertainty, {\n    lower: downsampled.lower[i].cumulative.recovered.total,\n    upper: downsampled.upper[i].cumulative.recovered.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  })))))));\n}\n\n_s(OutcomesDetailsTableDisconnected, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = OutcomesDetailsTableDisconnected;\nOutcomesDetailsTableDisconnected.propTypes = {\n  forPrint: _pt.bool,\n  formatter: _pt.func\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NumberWithUncertainty\");\n$RefreshReg$(_c2, \"OutcomesDetailsTableDisconnected\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/OutcomesDetailsTable.tsx"],"names":["React","moment","classNames","useTranslation","connect","Table","selectResult","numberFormatter","STEP","formatter","numberFormat","x","dateFormat","time","format","sampleEvery","arr","step","filter","_0","i","NumberWithUncertainty","value","lower","upper","lowerFinite","Number","isFinite","valueFinite","upperFinite","lowerFormatted","upperFormatted","mapStateToProps","state","result","mapDispatchToProps","OutcomesDetailsTable","OutcomesDetailsTableDisconnected","forPrint","toString","t","downsampled","middle","trajectory","map","line","current","severe","total","critical","overflow","cumulative","fatality","recovered"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { isNil } from 'lodash'\n\nimport moment from 'moment'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\nimport { Table } from 'reactstrap'\n\nimport type { AlgorithmResult } from '../../../algorithms/types/Result.types'\n\nimport { State } from '../../../state/reducer'\nimport { selectResult } from '../../../state/algorithm/algorithm.selectors'\n\nimport { numberFormatter } from '../../../helpers/numberFormat'\n\nimport './OutcomesDetailsTable.scss'\n\nconst STEP = 7\n\nconst formatter = numberFormatter(true, true)\n\nfunction numberFormat(x?: number): string {\n  return formatter(x ?? 0)\n}\n\nfunction dateFormat(time: number) {\n  return moment(time).format('MMM DD YYYY')\n}\n\n/**\n * Samples array values with a given step.\n * For example, if step is 7, it will return an array with every 7th value from the original array.\n */\nexport function sampleEvery<T>(arr: T[], step: number): T[] {\n  return arr.filter((_0, i) => i % step === 0)\n}\n\ninterface NumberWithUncertaintyProps {\n  value?: number\n  lower?: number\n  upper?: number\n}\n\nexport function NumberWithUncertainty({ value, lower, upper }: NumberWithUncertaintyProps) {\n  const lowerFinite = !isNil(lower) && Number.isFinite(lower)\n  const valueFinite = !isNil(value) && Number.isFinite(value)\n  const upperFinite = !isNil(upper) && Number.isFinite(upper)\n\n  // Three-way range\n  if (valueFinite && lowerFinite && upperFinite) {\n    return (\n      <div>\n        ({numberFormat(lower)}, <b>{numberFormat(value)}</b>, {numberFormat(upper)})\n      </div>\n    )\n  }\n\n  // Just value\n  if ((!lowerFinite || !upperFinite) && valueFinite) {\n    return <div>{numberFormat(value)}</div>\n  }\n\n  // Two-way range (\"from - $to\")\n  if (!valueFinite && lowerFinite && upperFinite) {\n    const lowerFormatted = numberFormat(lower)\n    const upperFormatted = numberFormat(upper)\n\n    // Avoid formats like \"0 - 0\" and \"5k - 5k\"\n    if (lowerFormatted === upperFormatted) {\n      return <div>{lowerFormatted}</div>\n    }\n\n    return (\n      <div>\n        {numberFormat(lower)} - {numberFormat(upper)}\n      </div>\n    )\n  }\n\n  // Catch-all value is zero\n  return <div>{'0'}</div>\n}\n\nexport interface OutcomesDetailsTableProps {\n  result?: AlgorithmResult\n  forPrint?: boolean\n  formatter?: (num: number) => string\n}\n\nconst mapStateToProps = (state: State) => ({\n  result: selectResult(state),\n})\n\nconst mapDispatchToProps = {}\n\nexport const OutcomesDetailsTable = connect(mapStateToProps, mapDispatchToProps)(OutcomesDetailsTableDisconnected)\n\nexport function OutcomesDetailsTableDisconnected({\n  result,\n  forPrint,\n  formatter = Number.toString,\n}: OutcomesDetailsTableProps) {\n  const { t } = useTranslation()\n\n  if (!result) {\n    return null\n  }\n\n  const downsampled = {\n    middle: sampleEvery(result.trajectory.middle, STEP),\n    lower: sampleEvery(result.trajectory.lower, STEP),\n    upper: sampleEvery(result.trajectory.upper, STEP),\n  }\n\n  return (\n    <div className={classNames('outcomes-table-wrapper', forPrint && 'print-preview')}>\n      <Table className={classNames('outcomes-table', forPrint && 'print-preview')} bordered>\n        <thead>\n          <tr>\n            <th scope=\"col\" className=\"outcome-table-th outcome-table-th-date\">\n              {t(`Date`)}\n            </th>\n            <th scope=\"col\" className=\"outcome-table-th bg-severe\">\n              {t(`Severe`)}\n            </th>\n            <th scope=\"col\" className=\"outcome-table-th bg-critical\">\n              {t(`Critical`)}\n            </th>\n            <th scope=\"col\" className=\"outcome-table-th bg-overflow\">\n              {t(`ICU Overflow`)}\n            </th>\n            <th scope=\"col\" className=\"outcome-table-th bg-fatality\">\n              {t(`Deaths`)}\n            </th>\n            <th scope=\"col\" className=\"outcome-table-th bg-recovered\">\n              {t(`Recovered`)}\n            </th>\n          </tr>\n        </thead>\n\n        <tbody className=\"outcomes-table-body\">\n          {downsampled.middle.map((line, i) => (\n            <tr key={line.time}>\n              <th scope=\"row\">{dateFormat(line.time)}</th>\n              <td className=\"bg-severe\">\n                <NumberWithUncertainty\n                  lower={downsampled.lower[i].current.severe.total}\n                  upper={downsampled.upper[i].current.severe.total}\n                />\n              </td>\n              <td className=\"bg-critical\">\n                <NumberWithUncertainty\n                  lower={downsampled.lower[i].current.critical.total}\n                  upper={downsampled.upper[i].current.critical.total}\n                />\n              </td>\n              <td className=\"bg-overflow\">\n                <NumberWithUncertainty\n                  lower={downsampled.lower[i].current.overflow.total}\n                  upper={downsampled.upper[i].current.overflow.total}\n                />\n              </td>\n              <td className=\"bg-fatality\">\n                <NumberWithUncertainty\n                  lower={downsampled.lower[i].cumulative.fatality.total}\n                  upper={downsampled.upper[i].cumulative.fatality.total}\n                />\n              </td>\n              <td className=\"bg-recovered\">\n                <NumberWithUncertainty\n                  lower={downsampled.lower[i].cumulative.recovered.total}\n                  upper={downsampled.upper[i].cumulative.recovered.total}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}