{"ast":null,"code":"import produce from 'immer';\n// https://github.com/dphilipson/typescript-fsa-reducers/issues/30\nexport default function immerCase(actionCreator, handler) {\n  return reducer => reducer.case(actionCreator, (state, payload) => produce(state, draft => handler(draft, payload)));\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/state/util/fsaImmerReducer.ts"],"names":["produce","immerCase","actionCreator","handler","reducer","case","state","payload","draft"],"mappings":"AAEA,OAAOA,OAAP,MAA+B,OAA/B;AAIA;AACA,eAAe,SAASC,SAAT,CACbC,aADa,EAEbC,OAFa,EAGsD;AACnE,SAAQC,OAAD,IACLA,OAAO,CAACC,IAAR,CAAaH,aAAb,EAA4B,CAACI,KAAD,EAAQC,OAAR,KAC1BP,OAAO,CAACM,KAAD,EAASE,KAAD,IAAWL,OAAO,CAACK,KAAD,EAAQD,OAAR,CAA1B,CADT,CADF;AAID","sourcesContent":["import type { DeepWritable } from 'ts-essentials'\n\nimport produce, { Draft } from 'immer'\nimport { ActionCreator } from 'typescript-fsa'\nimport { ReducerBuilder } from 'typescript-fsa-reducers'\n\n// https://github.com/dphilipson/typescript-fsa-reducers/issues/30\nexport default function immerCase<StateType, PayloadType>(\n  actionCreator: ActionCreator<PayloadType>,\n  handler: (draft: Draft<StateType>, payload: DeepWritable<PayloadType>) => void,\n): (reducer: ReducerBuilder<StateType>) => ReducerBuilder<StateType> {\n  return (reducer) =>\n    reducer.case(actionCreator, (state, payload) =>\n      produce(state, (draft) => handler(draft, payload as DeepWritable<PayloadType>)),\n    )\n}\n"]},"metadata":{},"sourceType":"module"}