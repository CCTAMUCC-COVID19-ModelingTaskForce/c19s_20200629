{"ast":null,"code":"import { connectRouter } from 'connected-react-router';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { algorithmReducer } from './algorithm/algorithm.reducer';\nimport { scenarioReducer } from './scenario/scenario.reducer';\nimport { errorReducer } from './error/error.reducer';\nimport { settingsReducer } from './settings/settings.reducer';\nconst SETTINGS_VERSION = 1;\nconst settingsReducerPersisted = persistReducer({\n  key: 'settings',\n  version: SETTINGS_VERSION,\n  storage,\n  timeout: 3000\n}, settingsReducer);\n\nconst rootReducer = history => combineReducers({\n  algorithm: algorithmReducer,\n  error: errorReducer,\n  scenario: scenarioReducer,\n  settings: settingsReducerPersisted,\n  router: connectRouter(history)\n});\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/state/reducer.ts"],"names":["connectRouter","combineReducers","persistReducer","storage","algorithmReducer","scenarioReducer","errorReducer","settingsReducer","SETTINGS_VERSION","settingsReducerPersisted","key","version","timeout","rootReducer","history","algorithm","error","scenario","settings","router"],"mappings":"AAAA,SAASA,aAAT,QAA2C,wBAA3C;AAEA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AAIA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,SAASC,YAAT,QAAyC,uBAAzC;AAGA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,wBAAwB,GAAGP,cAAc,CAC7C;AAAEQ,EAAAA,GAAG,EAAE,UAAP;AAAmBC,EAAAA,OAAO,EAAEH,gBAA5B;AAA8CL,EAAAA,OAA9C;AAAuDS,EAAAA,OAAO,EAAE;AAAhE,CAD6C,EAE7CL,eAF6C,CAA/C;;AAaA,MAAMM,WAAW,GAAIC,OAAD,IAClBb,eAAe,CAAC;AACdc,EAAAA,SAAS,EAAEX,gBADG;AAEdY,EAAAA,KAAK,EAAEV,YAFO;AAGdW,EAAAA,QAAQ,EAAEZ,eAHI;AAIda,EAAAA,QAAQ,EAAET,wBAJI;AAKdU,EAAAA,MAAM,EAAEnB,aAAa,CAACc,OAAD;AALP,CAAD,CADjB;;AASA,eAAeD,WAAf","sourcesContent":["import { connectRouter, RouterState } from 'connected-react-router'\nimport { History } from 'history'\nimport { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport { algorithmReducer } from './algorithm/algorithm.reducer'\nimport { AlgorithmState } from './algorithm/algorithm.state'\n\nimport type { ScenarioState } from './scenario/scenario.state'\nimport { scenarioReducer } from './scenario/scenario.reducer'\n\nimport { errorReducer, ErrorState } from './error/error.reducer'\n\nimport type { SettingsState } from './settings/settings.state'\nimport { settingsReducer } from './settings/settings.reducer'\n\nconst SETTINGS_VERSION = 1\nconst settingsReducerPersisted = persistReducer(\n  { key: 'settings', version: SETTINGS_VERSION, storage, timeout: 3000 },\n  settingsReducer,\n)\n\nexport interface State {\n  algorithm: AlgorithmState\n  error: ErrorState\n  scenario: ScenarioState\n  settings: SettingsState\n  router: RouterState\n}\n\nconst rootReducer = (history: History) =>\n  combineReducers({\n    algorithm: algorithmReducer,\n    error: errorReducer,\n    scenario: scenarioReducer,\n    settings: settingsReducerPersisted,\n    router: connectRouter(history),\n  })\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}