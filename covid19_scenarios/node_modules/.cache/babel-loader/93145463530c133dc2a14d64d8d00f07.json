{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/OutcomeRatesTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as d3 from 'd3';\nimport { Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { selectResult } from '../../../state/algorithm/algorithm.selectors';\nimport { selectShouldFormatNumbers } from '../../../state/settings/settings.selectors';\nimport { numberFormatter } from '../../../helpers/numberFormat';\n\nfunction TableRow({\n  entry,\n  fmt\n}) {\n  switch (entry.length) {\n    case 1:\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }\n      }, fmt(entry[0]));\n\n    case 3:\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, \"(\", fmt(entry[0]), \", \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }\n      }, fmt(entry[1])), \", \", fmt(entry[2]), \")\");\n\n    default:\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      });\n  }\n}\n\n_c = TableRow;\nTableRow.propTypes = {\n  entry: _pt.arrayOf(_pt.number).isRequired,\n  fmt: _pt.func.isRequired\n};\n\nconst percentageFormatter = v => d3.format('.2f')(v * 100);\n\nconst mapStateToProps = state => ({\n  result: selectResult(state),\n  shouldFormatNumbers: selectShouldFormatNumbers(state)\n});\n\nconst mapDispatchToProps = {};\nexport const OutcomeRatesTable = connect(mapStateToProps, mapDispatchToProps)(OutcomeRatesTableDisconnected);\nexport function OutcomeRatesTableDisconnected({\n  result,\n  shouldFormatNumbers,\n  forPrint\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  if (!result) {\n    return null;\n  }\n\n  const formatNumber = numberFormatter(shouldFormatNumbers, false);\n  const endResult = {\n    lower: result.trajectory.lower[result.trajectory.middle.length - 1],\n    value: result.trajectory.middle[result.trajectory.middle.length - 1],\n    upper: result.trajectory.upper[result.trajectory.middle.length - 1]\n  };\n  const totalDeath = [endResult.lower.cumulative.fatality.total, endResult.value.cumulative.fatality.total, endResult.upper.cumulative.fatality.total];\n  const totalSevere = [endResult.lower.cumulative.hospitalized.total, endResult.value.cumulative.hospitalized.total, endResult.upper.cumulative.hospitalized.total];\n  const totalCritical = [endResult.lower.cumulative.critical.total, endResult.value.cumulative.critical.total, endResult.upper.cumulative.critical.total];\n  const totalCases = [endResult.lower.cumulative.recovered.total + endResult.lower.cumulative.fatality.total, endResult.value.cumulative.recovered.total + endResult.value.cumulative.fatality.total, endResult.upper.cumulative.recovered.total + endResult.upper.cumulative.fatality.total];\n  const severeFrac = totalSevere.map((x, i) => 1.0 * x / totalCases[i]);\n  const criticalFrac = totalCritical.map((x, i) => 1.0 * x / totalCases[i]);\n  const deathFrac = totalDeath.map((x, i) => 1.0 * x / totalCases[i]);\n  const mildFrac = severeFrac.map((x, i) => 1 - x - criticalFrac[i] - deathFrac[i]);\n  const peakSevere = [Math.round(Math.max(...result.trajectory.lower.map(x => x.current.severe.total))), Math.round(Math.max(...result.trajectory.middle.map(x => x.current.severe.total))), Math.round(Math.max(...result.trajectory.upper.map(x => x.current.severe.total)))];\n  const peakCritical = [Math.round(Math.max(...result.trajectory.lower.map(x => x.current.critical.total + x.current.overflow.total))), Math.round(Math.max(...result.trajectory.middle.map(x => x.current.critical.total + x.current.overflow.total))), Math.round(Math.max(...result.trajectory.upper.map(x => x.current.critical.total + x.current.overflow.total)))];\n\n  const totalFormatter = value => formatNumber(value);\n\n  if (forPrint) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, t('Proportions')), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, t('Outcome')), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, t('Population average')))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, t('Mild'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: mildFrac.slice(1, 2),\n      fmt: percentageFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, t('Severe'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: severeFrac.slice(1, 2),\n      fmt: percentageFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, t('Critical'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: criticalFrac.slice(1, 2),\n      fmt: percentageFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, t('Fatal'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: deathFrac.slice(1, 2),\n      fmt: percentageFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, t('Totals/Peak')), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, t('Quantity')), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, t('Peak/total value')))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, t('Total death'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: totalDeath,\n      fmt: totalFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, t('Total severe'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: totalSevere,\n      fmt: totalFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, t('Peak severe'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: peakSevere,\n      fmt: totalFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, t('Peak critical'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n      entry: peakCritical,\n      fmt: totalFormatter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    })))));\n  } // TODO: replace this with the table component (similar to severity table)\n\n\n  return /*#__PURE__*/React.createElement(Row, {\n    \"data-testid\": \"OutcomeRatesTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, t('Proportions')), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, t('Outcome')), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, t('Population average')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, t('Mild'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: mildFrac.slice(1, 2),\n    fmt: percentageFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, t('Severe'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: severeFrac.slice(1, 2),\n    fmt: percentageFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, t('Critical'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: criticalFrac.slice(1, 2),\n    fmt: percentageFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, t('Fatal'), \" [%]: \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: deathFrac.slice(1, 2),\n    fmt: percentageFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, t('Totals/Peak')), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, t('Quantity')), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, t('Peak/total value')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, t('Total death'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: totalDeath,\n    fmt: totalFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, t('Total severe'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: totalSevere,\n    fmt: totalFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, t('Peak severe'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: peakSevere,\n    fmt: totalFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, t('Peak critical'), \": \"), /*#__PURE__*/React.createElement(TableRow, {\n    entry: peakCritical,\n    fmt: totalFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n_s(OutcomeRatesTableDisconnected, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = OutcomeRatesTableDisconnected;\nOutcomeRatesTableDisconnected.propTypes = {\n  shouldFormatNumbers: _pt.bool.isRequired,\n  forPrint: _pt.bool\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableRow\");\n$RefreshReg$(_c2, \"OutcomeRatesTableDisconnected\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/OutcomeRatesTable.tsx"],"names":["React","useTranslation","d3","Col","Row","connect","selectResult","selectShouldFormatNumbers","numberFormatter","TableRow","entry","fmt","length","percentageFormatter","v","format","mapStateToProps","state","result","shouldFormatNumbers","mapDispatchToProps","OutcomeRatesTable","OutcomeRatesTableDisconnected","forPrint","t","formatNumber","endResult","lower","trajectory","middle","value","upper","totalDeath","cumulative","fatality","total","totalSevere","hospitalized","totalCritical","critical","totalCases","recovered","severeFrac","map","x","i","criticalFrac","deathFrac","mildFrac","peakSevere","Math","round","max","current","severe","peakCritical","overflow","totalFormatter","slice"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { useTranslation } from 'react-i18next'\n\nimport * as d3 from 'd3'\nimport { Col, Row } from 'reactstrap'\nimport { connect } from 'react-redux'\n\nimport type { AlgorithmResult } from '../../../algorithms/types/Result.types'\n\nimport type { State } from '../../../state/reducer'\nimport { selectResult } from '../../../state/algorithm/algorithm.selectors'\nimport { selectShouldFormatNumbers } from '../../../state/settings/settings.selectors'\n\nimport { numberFormatter } from '../../../helpers/numberFormat'\n\ninterface RowProps {\n  entry: number[]\n  fmt: (x: number) => string\n}\n\nfunction TableRow({ entry, fmt }: RowProps) {\n  switch (entry.length) {\n    case 1:\n      return <td>{fmt(entry[0])}</td>\n    case 3:\n      return (\n        <td>\n          ({fmt(entry[0])}, <b>{fmt(entry[1])}</b>, {fmt(entry[2])})\n        </td>\n      )\n    default:\n      return <td />\n  }\n}\n\nconst percentageFormatter = (v: number) => d3.format('.2f')(v * 100)\n\nexport interface TableProps {\n  result?: AlgorithmResult\n  shouldFormatNumbers: boolean\n  forPrint?: boolean\n}\n\nconst mapStateToProps = (state: State) => ({\n  result: selectResult(state),\n  shouldFormatNumbers: selectShouldFormatNumbers(state),\n})\n\nconst mapDispatchToProps = {}\n\nexport const OutcomeRatesTable = connect(mapStateToProps, mapDispatchToProps)(OutcomeRatesTableDisconnected)\n\nexport function OutcomeRatesTableDisconnected({ result, shouldFormatNumbers, forPrint }: TableProps) {\n  const { t } = useTranslation()\n\n  if (!result) {\n    return null\n  }\n\n  const formatNumber = numberFormatter(shouldFormatNumbers, false)\n\n  const endResult = {\n    lower: result.trajectory.lower[result.trajectory.middle.length - 1],\n    value: result.trajectory.middle[result.trajectory.middle.length - 1],\n    upper: result.trajectory.upper[result.trajectory.middle.length - 1],\n  }\n\n  const totalDeath = [\n    endResult.lower.cumulative.fatality.total,\n    endResult.value.cumulative.fatality.total,\n    endResult.upper.cumulative.fatality.total,\n  ]\n  const totalSevere = [\n    endResult.lower.cumulative.hospitalized.total,\n    endResult.value.cumulative.hospitalized.total,\n    endResult.upper.cumulative.hospitalized.total,\n  ]\n  const totalCritical = [\n    endResult.lower.cumulative.critical.total,\n    endResult.value.cumulative.critical.total,\n    endResult.upper.cumulative.critical.total,\n  ]\n  const totalCases = [\n    endResult.lower.cumulative.recovered.total + endResult.lower.cumulative.fatality.total,\n    endResult.value.cumulative.recovered.total + endResult.value.cumulative.fatality.total,\n    endResult.upper.cumulative.recovered.total + endResult.upper.cumulative.fatality.total,\n  ]\n\n  const severeFrac = totalSevere.map((x, i) => (1.0 * x) / totalCases[i])\n  const criticalFrac = totalCritical.map((x, i) => (1.0 * x) / totalCases[i])\n  const deathFrac = totalDeath.map((x, i) => (1.0 * x) / totalCases[i])\n  const mildFrac = severeFrac.map((x, i) => 1 - x - criticalFrac[i] - deathFrac[i])\n\n  const peakSevere = [\n    Math.round(Math.max(...result.trajectory.lower.map((x) => x.current.severe.total))),\n    Math.round(Math.max(...result.trajectory.middle.map((x) => x.current.severe.total))),\n    Math.round(Math.max(...result.trajectory.upper.map((x) => x.current.severe.total))),\n  ]\n  const peakCritical = [\n    Math.round(Math.max(...result.trajectory.lower.map((x) => x.current.critical.total + x.current.overflow.total))),\n    Math.round(Math.max(...result.trajectory.middle.map((x) => x.current.critical.total + x.current.overflow.total))),\n    Math.round(Math.max(...result.trajectory.upper.map((x) => x.current.critical.total + x.current.overflow.total))),\n  ]\n\n  const totalFormatter = (value: number) => formatNumber(value)\n\n  if (forPrint) {\n    return (\n      <div>\n        <h3>{t('Proportions')}</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>{t('Outcome')}</th>\n              <th>{t('Population average')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{t('Mild')} [%]: </td>\n              <TableRow entry={mildFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Severe')} [%]: </td>\n              <TableRow entry={severeFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Critical')} [%]: </td>\n              <TableRow entry={criticalFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Fatal')} [%]: </td>\n              <TableRow entry={deathFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n          </tbody>\n        </table>\n        <h3>{t('Totals/Peak')}</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>{t('Quantity')}</th>\n              <th>{t('Peak/total value')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{t('Total death')}: </td>\n              <TableRow entry={totalDeath} fmt={totalFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Total severe')}: </td>\n              <TableRow entry={totalSevere} fmt={totalFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Peak severe')}: </td>\n              <TableRow entry={peakSevere} fmt={totalFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Peak critical')}: </td>\n              <TableRow entry={peakCritical} fmt={totalFormatter} />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  // TODO: replace this with the table component (similar to severity table)\n  return (\n    <Row data-testid=\"OutcomeRatesTable\">\n      <Col lg={6}>\n        <h3>{t('Proportions')}</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>{t('Outcome')}</th>\n              <th>{t('Population average')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{t('Mild')} [%]: </td>\n              <TableRow entry={mildFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Severe')} [%]: </td>\n              <TableRow entry={severeFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Critical')} [%]: </td>\n              <TableRow entry={criticalFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Fatal')} [%]: </td>\n              <TableRow entry={deathFrac.slice(1, 2)} fmt={percentageFormatter} />\n            </tr>\n          </tbody>\n        </table>\n      </Col>\n      <Col lg={6}>\n        <h3>{t('Totals/Peak')}</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>{t('Quantity')}</th>\n              <th>{t('Peak/total value')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{t('Total death')}: </td>\n              <TableRow entry={totalDeath} fmt={totalFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Total severe')}: </td>\n              <TableRow entry={totalSevere} fmt={totalFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Peak severe')}: </td>\n              <TableRow entry={peakSevere} fmt={totalFormatter} />\n            </tr>\n            <tr>\n              <td>{t('Peak critical')}: </td>\n              <TableRow entry={peakCritical} fmt={totalFormatter} />\n            </tr>\n          </tbody>\n        </table>\n      </Col>\n    </Row>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}