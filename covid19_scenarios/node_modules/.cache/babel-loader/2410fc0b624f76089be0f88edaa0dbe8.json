{"ast":null,"code":"import _pt from \"prop-types\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormSpinBox.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Field } from 'formik';\nimport { Col, FormGroup, Row } from 'reactstrap';\nimport { getFormikErrors } from '../../helpers/getFormikErrors';\nimport FormLabel from './FormLabel';\nexport function FormSpinBox({\n  identifier,\n  label,\n  help,\n  step,\n  min,\n  max,\n  pattern,\n  errors,\n  touched\n}) {\n  const errorMessages = getFormikErrors({\n    identifier,\n    errors,\n    touched\n  });\n  const hasError = errorMessages.length > 0;\n  return /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, () => /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    identifier: identifier,\n    label: label,\n    help: help,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: classNames(`form-control form-spinbox`, hasError && 'border-danger'),\n    id: identifier,\n    name: identifier,\n    type: \"number\",\n    step: step,\n    min: min,\n    max: max,\n    pattern: pattern,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), errorMessages.map(message => /*#__PURE__*/React.createElement(\"div\", {\n    key: message,\n    className: \"my-0 text-right text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, message))))));\n}\n_c = FormSpinBox;\nFormSpinBox.propTypes = {\n  identifier: _pt.string.isRequired,\n  label: _pt.string.isRequired,\n  help: _pt.oneOfType([_pt.string, _pt.node]),\n  step: _pt.oneOfType([_pt.number, _pt.string]),\n  min: _pt.number,\n  max: _pt.number,\n  pattern: _pt.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormSpinBox\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormSpinBox.tsx"],"names":["React","classNames","Field","Col","FormGroup","Row","getFormikErrors","FormLabel","FormSpinBox","identifier","label","help","step","min","max","pattern","errors","touched","errorMessages","hasError","length","map","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAmD,QAAnD;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAcA,OAAO,SAASC,WAAT,CAAwB;AAC7BC,EAAAA,UAD6B;AAE7BC,EAAAA,KAF6B;AAG7BC,EAAAA,IAH6B;AAI7BC,EAAAA,IAJ6B;AAK7BC,EAAAA,GAL6B;AAM7BC,EAAAA,GAN6B;AAO7BC,EAAAA,OAP6B;AAQ7BC,EAAAA,MAR6B;AAS7BC,EAAAA;AAT6B,CAAxB,EAUiB;AACtB,QAAMC,aAAa,GAAGZ,eAAe,CAAC;AAAEG,IAAAA,UAAF;AAAcO,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,GAAD,CAArC;AACA,QAAME,QAAQ,GAAGD,aAAa,CAACE,MAAd,GAAuB,CAAxC;AAEA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,mBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEX,UAAvB;AAAmC,IAAA,KAAK,EAAEC,KAA1C;AAAiD,IAAA,IAAI,EAAEC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEV,UAAU,CAAE,2BAAF,EAA8BkB,QAAQ,IAAI,eAA1C,CADvB;AAEE,IAAA,EAAE,EAAEV,UAFN;AAGE,IAAA,IAAI,EAAEA,UAHR;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,IAAI,EAAEG,IALR;AAME,IAAA,GAAG,EAAEC,GANP;AAOE,IAAA,GAAG,EAAEC,GAPP;AAQE,IAAA,OAAO,EAAEC,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGG,aAAa,CAACG,GAAd,CAAmBC,OAAD,iBACjB;AAAK,IAAA,GAAG,EAAEA,OAAV;AAAmB,IAAA,SAAS,EAAC,6BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADD,CAXH,CAJF,CADF,CAFJ,CADF;AA8BD;KA5Ced,W;;AAXdC,EAAAA,U;AACAC,EAAAA,K;AACAC,EAAAA,I;AACAC,EAAAA,I;AACAC,EAAAA,G;AACAC,EAAAA,G;AACAC,EAAAA,O","sourcesContent":["import React from 'react'\n\nimport classNames from 'classnames'\nimport { Field, FormikErrors, FormikTouched } from 'formik'\nimport { Col, FormGroup, Row } from 'reactstrap'\nimport { getFormikErrors } from '../../helpers/getFormikErrors'\n\nimport FormLabel from './FormLabel'\n\nexport interface FormSpinBoxProps<T> {\n  identifier: string\n  label: string\n  help?: string | React.ReactNode\n  step?: number | string\n  min?: number\n  max?: number\n  pattern?: string\n  errors?: FormikErrors<T>\n  touched?: FormikTouched<T>\n}\n\nexport function FormSpinBox<T>({\n  identifier,\n  label,\n  help,\n  step,\n  min,\n  max,\n  pattern,\n  errors,\n  touched,\n}: FormSpinBoxProps<T>) {\n  const errorMessages = getFormikErrors({ identifier, errors, touched })\n  const hasError = errorMessages.length > 0\n\n  return (\n    <Field>\n      {() => (\n        <FormGroup className=\"my-0\">\n          <Row noGutters>\n            <Col xl={7}>\n              <FormLabel identifier={identifier} label={label} help={help} />\n            </Col>\n            <Col xl={5}>\n              <Field\n                className={classNames(`form-control form-spinbox`, hasError && 'border-danger')}\n                id={identifier}\n                name={identifier}\n                type=\"number\"\n                step={step}\n                min={min}\n                max={max}\n                pattern={pattern}\n              />\n              {errorMessages.map((message) => (\n                <div key={message} className=\"my-0 text-right text-danger\">\n                  {message}\n                </div>\n              ))}\n            </Col>\n          </Row>\n        </FormGroup>\n      )}\n    </Field>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}