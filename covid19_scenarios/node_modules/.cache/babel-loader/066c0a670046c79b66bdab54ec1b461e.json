{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/LinePlotTooltip.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { linesToPlot, observationsToPlot, translatePlots } from './ChartCommon';\nimport { ResponsiveTooltipContent } from './ResponsiveTooltipContent';\nimport './ResponsiveTooltipContent.scss';\nexport function LinePlotTooltip({\n  active,\n  payload,\n  label,\n  valueFormatter,\n  labelFormatter,\n  itemsToDisplay\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  if (!active || !label || !payload || payload.length <= 2) {\n    // The tooltip gets some odd payloads intermittently\n    // https://github.com/neherlab/covid19_scenarios/issues/234#issuecomment-611279609\n    return null;\n  }\n\n  const formattedLabel = labelFormatter ? labelFormatter(label) : label;\n  const uncertainty = {};\n  payload.forEach(item => {\n    if (item.name && item.name.includes(' uncertainty')) {\n      const relatedItemName = item.name.replace(' uncertainty', '');\n      uncertainty[relatedItemName] = [item.value[0], item.value[1]];\n    }\n  });\n  const tooltipItems = [].concat(translatePlots(t, observationsToPlot()).map(observationToPlot => ({ ...observationToPlot,\n    displayUndefinedAs: '-'\n  }))).concat(translatePlots(t, linesToPlot).map(lineToPlot => ({ ...lineToPlot,\n    displayUndefinedAs: 0\n  }))).filter(tooltipItem => !itemsToDisplay || !!itemsToDisplay.find(itemKey => itemKey === tooltipItem.key)).map(tooltipItem => {\n    const payloadItem = payload.find(payloadItem => payloadItem.dataKey === tooltipItem.key);\n    const value = payloadItem && payloadItem.value !== undefined ? payloadItem.value : tooltipItem.displayUndefinedAs;\n    return { ...tooltipItem,\n      value: valueFormatter ? valueFormatter(value) : value,\n      lower: tooltipItem.name in uncertainty && typeof value === 'number' ? valueFormatter(uncertainty[tooltipItem.name][0]) : undefined,\n      upper: tooltipItem.name in uncertainty && typeof value === 'number' ? valueFormatter(uncertainty[tooltipItem.name][1]) : undefined\n    };\n  }).filter(tooltipItem => tooltipItem.name ? !tooltipItem.name.includes('uncertainty') : true);\n  return /*#__PURE__*/React.createElement(ResponsiveTooltipContent, {\n    formattedLabel: formattedLabel,\n    tooltipItems: tooltipItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  });\n}\n\n_s(LinePlotTooltip, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LinePlotTooltip;\nLinePlotTooltip.propTypes = {\n  valueFormatter: _pt.func.isRequired,\n  itemsToDisplay: _pt.arrayOf(_pt.string)\n};\n\nfunction round(value) {\n  return Math.round(100 * value) / 100;\n}\n\nexport function R0PlotTooltip({\n  active,\n  payload,\n  label,\n  valueFormatter,\n  labelFormatter,\n  itemsToDisplay\n}) {\n  if (!active || !label || !payload || !itemsToDisplay || payload.length <= 2) {\n    // The tooltip gets some odd payloads intermittently\n    // https://github.com/neherlab/covid19_scenarios/issues/234#issuecomment-611279609\n    return null;\n  }\n\n  const formattedLabel = labelFormatter ? labelFormatter(label) : label;\n  const datum = payload.filter(elt => typeof elt.dataKey === 'string' && itemsToDisplay.includes(elt.dataKey))[0];\n  const tooltipItem = {\n    key: 'r0',\n    name: 'effective reproductive number',\n    color: datum.color || '#883322',\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    value: valueFormatter ? valueFormatter(round(datum.payload.median)) : round(datum.payload.median),\n    lower: valueFormatter ? valueFormatter(round(datum.payload.range[0])) : round(datum.payload.range[0]),\n    upper: valueFormatter ? valueFormatter(round(datum.payload.range[1])) : round(datum.payload.range[1])\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  };\n  return /*#__PURE__*/React.createElement(ResponsiveTooltipContent, {\n    formattedLabel: formattedLabel,\n    tooltipItems: [tooltipItem],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  });\n}\n_c2 = R0PlotTooltip;\nR0PlotTooltip.propTypes = {\n  valueFormatter: _pt.func.isRequired,\n  itemsToDisplay: _pt.arrayOf(_pt.string)\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinePlotTooltip\");\n$RefreshReg$(_c2, \"R0PlotTooltip\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/LinePlotTooltip.tsx"],"names":["React","useTranslation","linesToPlot","observationsToPlot","translatePlots","ResponsiveTooltipContent","LinePlotTooltip","active","payload","label","valueFormatter","labelFormatter","itemsToDisplay","t","length","formattedLabel","uncertainty","forEach","item","name","includes","relatedItemName","replace","value","tooltipItems","concat","map","observationToPlot","displayUndefinedAs","lineToPlot","filter","tooltipItem","find","itemKey","key","payloadItem","dataKey","undefined","lower","upper","round","Math","R0PlotTooltip","datum","elt","color","median","range"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { TooltipProps } from 'recharts'\nimport { useTranslation } from 'react-i18next'\n\nimport { linesToPlot, observationsToPlot, translatePlots } from './ChartCommon'\nimport { ResponsiveTooltipContent, TooltipItem } from './ResponsiveTooltipContent'\n\nimport './ResponsiveTooltipContent.scss'\n\ninterface LinePlotItem extends TooltipItem {\n  displayUndefinedAs: string | number\n}\n\nexport interface R0PlotTooltipProps extends TooltipProps {\n  valueFormatter: (value: number | string) => string\n  itemsToDisplay?: string[]\n}\n\nexport function LinePlotTooltip({\n  active,\n  payload,\n  label,\n  valueFormatter,\n  labelFormatter,\n  itemsToDisplay,\n}: R0PlotTooltipProps) {\n  const { t } = useTranslation()\n\n  if (!active || !label || !payload || payload.length <= 2) {\n    // The tooltip gets some odd payloads intermittently\n    // https://github.com/neherlab/covid19_scenarios/issues/234#issuecomment-611279609\n    return null\n  }\n\n  const formattedLabel = labelFormatter ? labelFormatter(label) : label\n\n  const uncertainty: Record<string, [number, number]> = {}\n  payload.forEach((item) => {\n    if (item.name && item.name.includes(' uncertainty')) {\n      const relatedItemName = item.name.replace(' uncertainty', '')\n      uncertainty[relatedItemName] = [(item.value as number[])[0], (item.value as number[])[1]]\n    }\n  })\n\n  const tooltipItems = []\n    .concat(\n      translatePlots(t, observationsToPlot()).map((observationToPlot) => ({\n        ...observationToPlot,\n        displayUndefinedAs: '-',\n      })) as never,\n    )\n    .concat(\n      translatePlots(t, linesToPlot).map((lineToPlot) => ({\n        ...lineToPlot,\n        displayUndefinedAs: 0,\n      })) as never,\n    )\n    .filter(\n      (tooltipItem: LinePlotItem): boolean =>\n        !itemsToDisplay || !!itemsToDisplay.find((itemKey) => itemKey === tooltipItem.key),\n    )\n    .map(\n      (tooltipItem: LinePlotItem): LinePlotItem => {\n        const payloadItem = payload.find((payloadItem) => payloadItem.dataKey === tooltipItem.key)\n\n        const value =\n          payloadItem && payloadItem.value !== undefined\n            ? (payloadItem.value as string | number)\n            : tooltipItem.displayUndefinedAs\n\n        return {\n          ...tooltipItem,\n          value: valueFormatter ? valueFormatter(value) : value,\n          lower:\n            tooltipItem.name in uncertainty && typeof value === 'number'\n              ? valueFormatter(uncertainty[tooltipItem.name][0])\n              : undefined,\n          upper:\n            tooltipItem.name in uncertainty && typeof value === 'number'\n              ? valueFormatter(uncertainty[tooltipItem.name][1])\n              : undefined,\n        }\n      },\n    )\n    .filter((tooltipItem) => (tooltipItem.name ? !tooltipItem.name.includes('uncertainty') : true))\n\n  return <ResponsiveTooltipContent formattedLabel={formattedLabel} tooltipItems={tooltipItems} />\n}\n\nfunction round(value: number): number {\n  return Math.round(100 * value) / 100\n}\n\nexport function R0PlotTooltip({\n  active,\n  payload,\n  label,\n  valueFormatter,\n  labelFormatter,\n  itemsToDisplay,\n}: R0PlotTooltipProps) {\n  if (!active || !label || !payload || !itemsToDisplay || payload.length <= 2) {\n    // The tooltip gets some odd payloads intermittently\n    // https://github.com/neherlab/covid19_scenarios/issues/234#issuecomment-611279609\n    return null\n  }\n  const formattedLabel = labelFormatter ? labelFormatter(label) : label\n  const datum = payload.filter((elt) => typeof elt.dataKey === 'string' && itemsToDisplay.includes(elt.dataKey))[0]\n\n  const tooltipItem: TooltipItem = {\n    key: 'r0',\n    name: 'effective reproductive number',\n    color: datum.color || '#883322',\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    value: valueFormatter ? valueFormatter(round(datum.payload.median)) : round(datum.payload.median),\n    lower: valueFormatter ? valueFormatter(round(datum.payload.range[0])) : round(datum.payload.range[0]),\n    upper: valueFormatter ? valueFormatter(round(datum.payload.range[1])) : round(datum.payload.range[1]),\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  }\n\n  return <ResponsiveTooltipContent formattedLabel={formattedLabel} tooltipItems={[tooltipItem]} />\n}\n"]},"metadata":{},"sourceType":"module"}