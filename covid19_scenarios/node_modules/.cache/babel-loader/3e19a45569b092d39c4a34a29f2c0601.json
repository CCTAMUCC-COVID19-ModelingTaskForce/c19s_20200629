{"ast":null,"code":"export function detectLocale({\n  defaultLanguage,\n  availableLocales,\n  shorten = true\n}) {\n  var _navigator;\n\n  const navigatorLocal = (_navigator = navigator) !== null && _navigator !== void 0 ? _navigator : window.navigator;\n  let language;\n\n  if ((navigatorLocal === null || navigatorLocal === void 0 ? void 0 : navigatorLocal.languages) && (navigatorLocal === null || navigatorLocal === void 0 ? void 0 : navigatorLocal.languages.length) > 0) {\n    language = navigatorLocal === null || navigatorLocal === void 0 ? void 0 : navigatorLocal.language;\n  } else {\n    var _ref, _ref2, _navigatorLocal$brows;\n\n    language = (_ref = (_ref2 = (_navigatorLocal$brows = navigatorLocal === null || navigatorLocal === void 0 ? void 0 : navigatorLocal.browserLanguage) !== null && _navigatorLocal$brows !== void 0 ? _navigatorLocal$brows : navigatorLocal === null || navigatorLocal === void 0 ? void 0 : navigatorLocal.userLanguage) !== null && _ref2 !== void 0 ? _ref2 : navigatorLocal === null || navigatorLocal === void 0 ? void 0 : navigatorLocal.systemLanguage) !== null && _ref !== void 0 ? _ref : defaultLanguage;\n  }\n\n  if (!language) {\n    language = defaultLanguage;\n  }\n\n  if (shorten) {\n    language = language.slice(0, 2);\n  }\n\n  if (availableLocales.includes(language)) {\n    return language;\n  }\n\n  return defaultLanguage;\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/i18n/detectLocale.ts"],"names":["detectLocale","defaultLanguage","availableLocales","shorten","navigatorLocal","navigator","window","language","languages","length","browserLanguage","userLanguage","systemLanguage","slice","includes"],"mappings":"AAUA,OAAO,SAASA,YAAT,CAAsB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,gBAAnB;AAAqCC,EAAAA,OAAO,GAAG;AAA/C,CAAtB,EAA8G;AAAA;;AACnH,QAAMC,cAAc,iBAAIC,SAAJ,mDAAiBC,MAAM,CAACD,SAA5C;AAEA,MAAIE,QAAJ;;AACA,MAAI,CAAAH,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEI,SAAhB,KAA6B,CAAAJ,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEI,SAAhB,CAA0BC,MAA1B,IAAmC,CAApE,EAAuE;AACrEF,IAAAA,QAAQ,GAAGH,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEG,QAA3B;AACD,GAFD,MAEO;AAAA;;AACLA,IAAAA,QAAQ,6CACNH,cADM,aACNA,cADM,uBACNA,cAAc,CAAEM,eADV,yEAENN,cAFM,aAENA,cAFM,uBAENA,cAAc,CAAEO,YAFV,yCAGNP,cAHM,aAGNA,cAHM,uBAGNA,cAAc,CAAEQ,cAHV,uCAINX,eAJF;AAKD;;AAED,MAAI,CAACM,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAGN,eAAX;AACD;;AAED,MAAIE,OAAJ,EAAa;AACXI,IAAAA,QAAQ,GAAGA,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAX;AACD;;AAED,MAAIX,gBAAgB,CAACY,QAAjB,CAA0BP,QAA1B,CAAJ,EAAsD;AACpD,WAAOA,QAAP;AACD;;AAED,SAAON,eAAP;AACD","sourcesContent":["import { LocaleKey } from './i18n'\n\ntype NavigatorPlus = Navigator & { browserLanguage?: string; userLanguage?: string; systemLanguage?: string }\n\nexport interface DetectLanguageParams {\n  defaultLanguage: LocaleKey\n  availableLocales: LocaleKey[]\n  shorten?: boolean\n}\n\nexport function detectLocale({ defaultLanguage, availableLocales, shorten = true }: DetectLanguageParams): LocaleKey {\n  const navigatorLocal = (navigator ?? window.navigator) as NavigatorPlus | undefined\n\n  let language\n  if (navigatorLocal?.languages && navigatorLocal?.languages.length > 0) {\n    language = navigatorLocal?.language\n  } else {\n    language =\n      navigatorLocal?.browserLanguage ??\n      navigatorLocal?.userLanguage ??\n      navigatorLocal?.systemLanguage ??\n      defaultLanguage\n  }\n\n  if (!language) {\n    language = defaultLanguage\n  }\n\n  if (shorten) {\n    language = language.slice(0, 2)\n  }\n\n  if (availableLocales.includes(language as LocaleKey)) {\n    return language as LocaleKey\n  }\n\n  return defaultLanguage\n}\n"]},"metadata":{},"sourceType":"module"}