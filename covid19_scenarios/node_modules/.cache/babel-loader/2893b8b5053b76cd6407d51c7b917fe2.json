{"ast":null,"code":"// TODO(nnoll): Generalize to allow for sampling multiple uncertainty ranges\nexport function sampleUniform({\n  begin,\n  end\n}, npoints) {\n  const sample = [];\n  const delta = (end - begin) / npoints;\n  let val = begin;\n\n  while (sample.length < npoints) {\n    sample.push(val);\n    val += delta;\n  }\n\n  return sample;\n}\nexport function sampleRandom({\n  begin,\n  end\n}) {\n  // tslint:disable-next-line insecure-random\n  return (end - begin) * Math.random() + begin;\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/algorithms/utils/sample.ts"],"names":["sampleUniform","begin","end","npoints","sample","delta","val","length","push","sampleRandom","Math","random"],"mappings":"AAEA;AACA,OAAO,SAASA,aAAT,CAAuB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAvB,EAAgEC,OAAhE,EAA2F;AAChG,QAAMC,MAAgB,GAAG,EAAzB;AACA,QAAMC,KAAK,GAAG,CAACH,GAAG,GAAGD,KAAP,IAAgBE,OAA9B;AACA,MAAIG,GAAG,GAAGL,KAAV;;AACA,SAAOG,MAAM,CAACG,MAAP,GAAgBJ,OAAvB,EAAgC;AAC9BC,IAAAA,MAAM,CAACI,IAAP,CAAYF,GAAZ;AACAA,IAAAA,GAAG,IAAID,KAAP;AACD;;AACD,SAAOD,MAAP;AACD;AAED,OAAO,SAASK,YAAT,CAAsB;AAAER,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAtB,EAAuE;AAC5E;AACA,SAAO,CAACA,GAAG,GAAGD,KAAP,IAAgBS,IAAI,CAACC,MAAL,EAAhB,GAAgCV,KAAvC;AACD","sourcesContent":["import { NumericRangeNonNegative } from '../types/Param.types'\n\n// TODO(nnoll): Generalize to allow for sampling multiple uncertainty ranges\nexport function sampleUniform({ begin, end }: NumericRangeNonNegative, npoints: number): number[] {\n  const sample: number[] = []\n  const delta = (end - begin) / npoints\n  let val = begin\n  while (sample.length < npoints) {\n    sample.push(val)\n    val += delta\n  }\n  return sample\n}\n\nexport function sampleRandom({ begin, end }: NumericRangeNonNegative): number {\n  // tslint:disable-next-line insecure-random\n  return (end - begin) * Math.random() + begin\n}\n"]},"metadata":{},"sourceType":"module"}