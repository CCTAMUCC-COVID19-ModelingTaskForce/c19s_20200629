{"ast":null,"code":"import _pt from \"prop-types\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Scenario/ScenarioTitle.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { If, Then, Else } from 'react-if';\nimport { Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { MdEdit, MdCheck, MdCancel } from 'react-icons/md';\n\nfunction ScenarioTitle({\n  title,\n  onRename\n}) {\n  _s();\n\n  var _inputRef$current;\n\n  const inputRef = useRef();\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentName, setCurrentName] = useState(title);\n  const [previousName, setPreviousName] = useState(title);\n  useEffect(() => {\n    setCurrentName(title);\n  }, [title]);\n\n  function handleStartEditing() {\n    setIsEditing(true);\n    const input = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current;\n\n    if (!input) {\n      return;\n    } // focus and select the input text\n\n\n    input.focus();\n    input.select();\n  }\n\n  function handleKeyDown(event) {\n    if (isEditing) {\n      if (event.keyCode === 13\n      /* Enter */\n      ) {\n          event.preventDefault();\n          handleRename();\n        } else if (event.keyCode === 27\n      /* Escape */\n      ) {\n          event.preventDefault();\n          handleCancel();\n        }\n    }\n  }\n\n  function handleRename() {\n    var _window, _window$getSelection, _window2, _window2$getSelection;\n\n    if (!currentName || _isEmpty(currentName)) {\n      return;\n    }\n\n    onRename(currentName);\n    setPreviousName(currentName);\n    setIsEditing(false);\n    const input = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current;\n\n    if (!input) {\n      return;\n    } // deselect and remove focus\n\n\n    (_window = window) === null || _window === void 0 ? void 0 : (_window$getSelection = _window.getSelection()) === null || _window$getSelection === void 0 ? void 0 : _window$getSelection.empty();\n    (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$getSelection = _window2.getSelection()) === null || _window2$getSelection === void 0 ? void 0 : _window2$getSelection.removeAllRanges();\n    input.blur();\n  }\n\n  function handleCancel() {\n    var _window3, _window3$getSelection, _window4, _window4$getSelection;\n\n    setCurrentName(previousName);\n    setIsEditing(false);\n    const input = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current;\n\n    if (!input) {\n      return;\n    } // deselect and remove focus\n\n\n    (_window3 = window) === null || _window3 === void 0 ? void 0 : (_window3$getSelection = _window3.getSelection()) === null || _window3$getSelection === void 0 ? void 0 : _window3$getSelection.empty();\n    (_window4 = window) === null || _window4 === void 0 ? void 0 : (_window4$getSelection = _window4.getSelection()) === null || _window4$getSelection === void 0 ? void 0 : _window4$getSelection.removeAllRanges();\n    input.blur();\n  }\n\n  return /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"scenario-title-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: classNames('form-control', 'scenario-title-input', !isEditing && 'readonly'),\n    style: {\n      display: 'inline',\n      width: inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.scrollWidth\n    },\n    type: \"text\",\n    readOnly: !isEditing,\n    value: currentName,\n    onChange: event => setCurrentName(event.target.value),\n    onDoubleClick: handleStartEditing,\n    onKeyDown: handleKeyDown // NOTE: This is a bug in @types/reactstrap typings:\n    // it claims that `innerRef` is `React.Ref` while in reality it is `React.RefObject`\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    ,\n    innerRef: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(If, {\n    condition: !isEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Then, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"transparent\",\n    className: \"scenario-title-btn scenario-title-btn-edit\",\n    onClick: handleStartEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdEdit, {\n    className: \"scenario-title-icon scenario-title-icon-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Else, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"transparent\",\n    className: \"scenario-title-btn scenario-title-btn-cancel\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdCancel, {\n    className: \"scenario-title-icon scenario-title-icon-cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    color: \"transparent\",\n    className: \"scenario-title-btn scenario-title-btn-confirm\",\n    onClick: handleRename,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdCheck, {\n    className: \"scenario-title-icon scenario-title-icon-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n_s(ScenarioTitle, \"eje/yvCC2U21V9hMvuFCmbEg2t4=\");\n\n_c = ScenarioTitle;\nScenarioTitle.propTypes = {\n  title: _pt.string.isRequired\n};\nexport { ScenarioTitle };\n\nvar _c;\n\n$RefreshReg$(_c, \"ScenarioTitle\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Scenario/ScenarioTitle.tsx"],"names":["React","useState","useRef","useEffect","classNames","If","Then","Else","Button","Input","InputGroup","InputGroupAddon","MdEdit","MdCheck","MdCancel","ScenarioTitle","title","onRename","inputRef","isEditing","setIsEditing","currentName","setCurrentName","previousName","setPreviousName","handleStartEditing","input","current","focus","select","handleKeyDown","event","keyCode","preventDefault","handleRename","handleCancel","window","getSelection","empty","removeAllRanges","blur","display","width","scrollWidth","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\n\nimport { isEmpty } from 'lodash'\n\nimport classNames from 'classnames'\nimport { If, Then, Else } from 'react-if'\nimport { Button, Input, InputGroup, InputGroupAddon } from 'reactstrap'\nimport { MdEdit, MdCheck, MdCancel } from 'react-icons/md'\n\nexport interface ScenarioTitleProps {\n  title: string\n  onRename(title: string): void\n}\n\nfunction ScenarioTitle({ title, onRename }: ScenarioTitleProps) {\n  const inputRef = useRef<HTMLInputElement>()\n  const [isEditing, setIsEditing] = useState(false)\n  const [currentName, setCurrentName] = useState(title)\n  const [previousName, setPreviousName] = useState(title)\n\n  useEffect(() => {\n    setCurrentName(title)\n  }, [title])\n\n  function handleStartEditing() {\n    setIsEditing(true)\n\n    const input = inputRef?.current\n    if (!input) {\n      return\n    }\n\n    // focus and select the input text\n    input.focus()\n    input.select()\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    if (isEditing) {\n      if (event.keyCode === 13 /* Enter */) {\n        event.preventDefault()\n        handleRename()\n      } else if (event.keyCode === 27 /* Escape */) {\n        event.preventDefault()\n        handleCancel()\n      }\n    }\n  }\n\n  function handleRename() {\n    if (!currentName || isEmpty(currentName)) {\n      return\n    }\n\n    onRename(currentName)\n    setPreviousName(currentName)\n    setIsEditing(false)\n\n    const input = inputRef?.current\n    if (!input) {\n      return\n    }\n\n    // deselect and remove focus\n    window?.getSelection()?.empty()\n    window?.getSelection()?.removeAllRanges()\n    input.blur()\n  }\n\n  function handleCancel() {\n    setCurrentName(previousName)\n    setIsEditing(false)\n\n    const input = inputRef?.current\n    if (!input) {\n      return\n    }\n\n    // deselect and remove focus\n    window?.getSelection()?.empty()\n    window?.getSelection()?.removeAllRanges()\n    input.blur()\n  }\n\n  return (\n    <InputGroup className=\"scenario-title-input-group\">\n      <Input\n        className={classNames('form-control', 'scenario-title-input', !isEditing && 'readonly')}\n        style={{ display: 'inline', width: inputRef?.current?.scrollWidth }}\n        type=\"text\"\n        readOnly={!isEditing}\n        value={currentName}\n        onChange={(event) => setCurrentName(event.target.value)}\n        onDoubleClick={handleStartEditing}\n        onKeyDown={handleKeyDown}\n        // NOTE: This is a bug in @types/reactstrap typings:\n        // it claims that `innerRef` is `React.Ref` while in reality it is `React.RefObject`\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        innerRef={inputRef}\n      />\n      <InputGroupAddon addonType=\"append\">\n        <If condition={!isEditing}>\n          <Then>\n            <Button\n              color=\"transparent\"\n              className=\"scenario-title-btn scenario-title-btn-edit\"\n              onClick={handleStartEditing}\n            >\n              <MdEdit className=\"scenario-title-icon scenario-title-icon-edit\" />\n            </Button>\n          </Then>\n          <Else>\n            <Button color=\"transparent\" className=\"scenario-title-btn scenario-title-btn-cancel\" onClick={handleCancel}>\n              <MdCancel className=\"scenario-title-icon scenario-title-icon-cancel\" />\n            </Button>\n            <Button\n              color=\"transparent\"\n              className=\"scenario-title-btn scenario-title-btn-confirm\"\n              onClick={handleRename}\n            >\n              <MdCheck className=\"scenario-title-icon scenario-title-icon-confirm\" />\n            </Button>\n          </Else>\n        </If>\n      </InputGroupAddon>\n    </InputGroup>\n  )\n}\n\nexport { ScenarioTitle }\n"]},"metadata":{},"sourceType":"module"}