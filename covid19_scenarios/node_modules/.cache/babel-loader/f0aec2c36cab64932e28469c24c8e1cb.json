{"ast":null,"code":"import _pt from \"prop-types\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/ChartTooltip.tsx\";\nimport React from 'react';\nimport { colors } from './ChartCommon';\nimport { ResponsiveTooltipContent } from './ResponsiveTooltipContent';\nimport './ResponsiveTooltipContent.scss';\nexport function dispatch(key, item) {\n  switch (key) {\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return */\n    case 'peakOverflow':\n      return item.payload.errorPeakOverflow;\n\n    case 'peakCritical':\n      return item.payload.errorPeakCritical;\n\n    case 'peakSevere':\n      return item.payload.errorPeakSevere;\n\n    case 'totalFatalities':\n      return item.payload.errorFatalities;\n\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return */\n\n    default:\n      return [undefined, undefined];\n  }\n}\nexport function maybeFormatted(value, valueFormatter) {\n  if (value === undefined) {\n    return value;\n  }\n\n  if (valueFormatter) {\n    return valueFormatter(value);\n  }\n\n  return value;\n}\nexport function ChartTooltip({\n  active,\n  payload,\n  label,\n  valueFormatter,\n  labelFormatter\n}) {\n  if (!active || !label || !payload) {\n    return null;\n  }\n\n  const formattedLabel = labelFormatter ? labelFormatter(label) : label;\n  const tooltipItems = payload.map(payloadItem => {\n    const value = payloadItem.value !== undefined ? payloadItem.value : 0;\n    const [lower, upper] = typeof payloadItem.dataKey === 'string' ? dispatch(payloadItem.dataKey, payloadItem) : [undefined, undefined];\n    return {\n      name: payloadItem.name,\n      color: payloadItem.color || (payloadItem.dataKey in colors ? colors[payloadItem.dataKey] : '#bbbbbb'),\n      key: payloadItem.dataKey || payloadItem.name,\n      value: maybeFormatted(value),\n      lower: maybeFormatted(lower),\n      upper: maybeFormatted(upper)\n    };\n  });\n  return /*#__PURE__*/React.createElement(ResponsiveTooltipContent, {\n    formattedLabel: formattedLabel,\n    tooltipItems: tooltipItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  });\n}\n_c = ChartTooltip;\nChartTooltip.propTypes = {\n  valueFormatter: _pt.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartTooltip\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/ChartTooltip.tsx"],"names":["React","colors","ResponsiveTooltipContent","dispatch","key","item","payload","errorPeakOverflow","errorPeakCritical","errorPeakSevere","errorFatalities","undefined","maybeFormatted","value","valueFormatter","ChartTooltip","active","label","labelFormatter","formattedLabel","tooltipItems","map","payloadItem","lower","upper","dataKey","name","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,wBAAT,QAAsD,4BAAtD;AAEA,OAAO,iCAAP;AAIA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAA+BC,IAA/B,EAA+F;AACpG,UAAQD,GAAR;AACE;AACA,SAAK,cAAL;AACE,aAAOC,IAAI,CAACC,OAAL,CAAaC,iBAApB;;AACF,SAAK,cAAL;AACE,aAAOF,IAAI,CAACC,OAAL,CAAaE,iBAApB;;AACF,SAAK,YAAL;AACE,aAAOH,IAAI,CAACC,OAAL,CAAaG,eAApB;;AACF,SAAK,iBAAL;AACE,aAAOJ,IAAI,CAACC,OAAL,CAAaI,eAApB;;AACF;;AACA;AACE,aAAO,CAACC,SAAD,EAAYA,SAAZ,CAAP;AAZJ;AAcD;AAED,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAAiDC,cAAjD,EAAkF;AACvF,MAAID,KAAK,KAAKF,SAAd,EAAyB;AACvB,WAAOE,KAAP;AACD;;AAED,MAAIC,cAAJ,EAAoB;AAClB,WAAOA,cAAc,CAACD,KAAD,CAArB;AACD;;AAED,SAAOA,KAAP;AACD;AAMD,OAAO,SAASE,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUV,EAAAA,OAAV;AAAmBW,EAAAA,KAAnB;AAA0BH,EAAAA,cAA1B;AAA0CI,EAAAA;AAA1C,CAAtB,EAAqG;AAC1G,MAAI,CAACF,MAAD,IAAW,CAACC,KAAZ,IAAqB,CAACX,OAA1B,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,QAAMa,cAAc,GAAGD,cAAc,GAAGA,cAAc,CAACD,KAAD,CAAjB,GAA2BA,KAAhE;AAEA,QAAMG,YAAY,GAAGd,OAAO,CAACe,GAAR,CAClBC,WAAD,IAA8B;AAC5B,UAAMT,KAAK,GAAGS,WAAW,CAACT,KAAZ,KAAsBF,SAAtB,GAAmCW,WAAW,CAACT,KAA/C,GAA2E,CAAzF;AACA,UAAM,CAACU,KAAD,EAAQC,KAAR,IACJ,OAAOF,WAAW,CAACG,OAAnB,KAA+B,QAA/B,GAA0CtB,QAAQ,CAACmB,WAAW,CAACG,OAAb,EAAsBH,WAAtB,CAAlD,GAAuF,CAACX,SAAD,EAAYA,SAAZ,CADzF;AAGA,WAAO;AACLe,MAAAA,IAAI,EAAEJ,WAAW,CAACI,IADb;AAELC,MAAAA,KAAK,EACHL,WAAW,CAACK,KAAZ,KACEL,WAAW,CAACG,OAAb,IAAmCxB,MAAnC,GAA4CA,MAAM,CAACqB,WAAW,CAACG,OAAb,CAAlD,GAAoF,SADrF,CAHG;AAKLrB,MAAAA,GAAG,EAAGkB,WAAW,CAACG,OAAb,IAAmCH,WAAW,CAACI,IAL/C;AAMLb,MAAAA,KAAK,EAAED,cAAc,CAACC,KAAD,CANhB;AAOLU,MAAAA,KAAK,EAAEX,cAAc,CAACW,KAAD,CAPhB;AAQLC,MAAAA,KAAK,EAAEZ,cAAc,CAACY,KAAD;AARhB,KAAP;AAUD,GAhBkB,CAArB;AAmBA,sBAAO,oBAAC,wBAAD;AAA0B,IAAA,cAAc,EAAEL,cAA1C;AAA0D,IAAA,YAAY,EAAEC,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;KA3BeL,Y;;AAHdD,EAAAA,c","sourcesContent":["import React from 'react'\nimport { TooltipProps, TooltipPayload } from 'recharts'\n\nimport { colors } from './ChartCommon'\nimport { ResponsiveTooltipContent, TooltipItem } from './ResponsiveTooltipContent'\n\nimport './ResponsiveTooltipContent.scss'\n\nexport type ValueFormatter = (value: number | string) => string\n\nexport function dispatch(key: string, item: TooltipPayload): [number | undefined, number | undefined] {\n  switch (key) {\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return */\n    case 'peakOverflow':\n      return item.payload.errorPeakOverflow\n    case 'peakCritical':\n      return item.payload.errorPeakCritical\n    case 'peakSevere':\n      return item.payload.errorPeakSevere\n    case 'totalFatalities':\n      return item.payload.errorFatalities\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return */\n    default:\n      return [undefined, undefined]\n  }\n}\n\nexport function maybeFormatted(value?: string | number, valueFormatter?: ValueFormatter) {\n  if (value === undefined) {\n    return value\n  }\n\n  if (valueFormatter) {\n    return valueFormatter(value)\n  }\n\n  return value\n}\n\nexport interface ChartTooltipProps extends TooltipProps {\n  valueFormatter: (value: number | string) => string\n}\n\nexport function ChartTooltip({ active, payload, label, valueFormatter, labelFormatter }: ChartTooltipProps) {\n  if (!active || !label || !payload) {\n    return null\n  }\n\n  const formattedLabel = labelFormatter ? labelFormatter(label) : label\n\n  const tooltipItems = payload.map(\n    (payloadItem): TooltipItem => {\n      const value = payloadItem.value !== undefined ? (payloadItem.value as string | number) : 0\n      const [lower, upper] =\n        typeof payloadItem.dataKey === 'string' ? dispatch(payloadItem.dataKey, payloadItem) : [undefined, undefined]\n\n      return {\n        name: payloadItem.name,\n        color:\n          payloadItem.color ||\n          ((payloadItem.dataKey as string) in colors ? colors[payloadItem.dataKey as string] : '#bbbbbb'),\n        key: (payloadItem.dataKey as string) || payloadItem.name,\n        value: maybeFormatted(value),\n        lower: maybeFormatted(lower),\n        upper: maybeFormatted(upper),\n      }\n    },\n  )\n\n  return <ResponsiveTooltipContent formattedLabel={formattedLabel} tooltipItems={tooltipItems} />\n}\n"]},"metadata":{},"sourceType":"module"}