{"ast":null,"code":"var _window;\n\nimport { detectLocale } from '../../i18n/detectLocale';\nimport { DEFAULT_LOCALE_KEY, localeKeys } from '../../i18n/i18n';\nexport const settingsDefaultState = {\n  isAutorunEnabled: true,\n  shouldFormatNumbers: true,\n  selectShouldShowPlotLabels: false,\n  isLogScale: true,\n  areResultsMaximized: typeof window !== 'undefined' && ((_window = window) === null || _window === void 0 ? void 0 : _window.innerWidth) > 2000,\n  disclaimerVersionAccepted: undefined,\n  disclaimerShouldSuppress: false,\n  localeKey: detectLocale({\n    defaultLanguage: DEFAULT_LOCALE_KEY,\n    availableLocales: localeKeys\n  })\n};","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/state/settings/settings.state.ts"],"names":["detectLocale","DEFAULT_LOCALE_KEY","localeKeys","settingsDefaultState","isAutorunEnabled","shouldFormatNumbers","selectShouldShowPlotLabels","isLogScale","areResultsMaximized","window","innerWidth","disclaimerVersionAccepted","undefined","disclaimerShouldSuppress","localeKey","defaultLanguage","availableLocales"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,yBAA7B;AACA,SAASC,kBAAT,EAAwCC,UAAxC,QAA0D,iBAA1D;AAaA,OAAO,MAAMC,oBAAmC,GAAG;AACjDC,EAAAA,gBAAgB,EAAE,IAD+B;AAEjDC,EAAAA,mBAAmB,EAAE,IAF4B;AAGjDC,EAAAA,0BAA0B,EAAE,KAHqB;AAIjDC,EAAAA,UAAU,EAAE,IAJqC;AAKjDC,EAAAA,mBAAmB,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,YAAAA,MAAM,UAAN,0CAAQC,UAAR,IAAqB,IAL1B;AAMjDC,EAAAA,yBAAyB,EAAEC,SANsB;AAOjDC,EAAAA,wBAAwB,EAAE,KAPuB;AAQjDC,EAAAA,SAAS,EAAEd,YAAY,CAAC;AAAEe,IAAAA,eAAe,EAAEd,kBAAnB;AAAuCe,IAAAA,gBAAgB,EAAEd;AAAzD,GAAD;AAR0B,CAA5C","sourcesContent":["import { detectLocale } from '../../i18n/detectLocale'\nimport { DEFAULT_LOCALE_KEY, LocaleKey, localeKeys } from '../../i18n/i18n'\n\nexport interface SettingsState {\n  isAutorunEnabled: boolean\n  shouldFormatNumbers: boolean\n  selectShouldShowPlotLabels: boolean\n  isLogScale: boolean\n  areResultsMaximized: boolean\n  disclaimerVersionAccepted?: number\n  disclaimerShouldSuppress: boolean\n  localeKey: LocaleKey\n}\n\nexport const settingsDefaultState: SettingsState = {\n  isAutorunEnabled: true,\n  shouldFormatNumbers: true,\n  selectShouldShowPlotLabels: false,\n  isLogScale: true,\n  areResultsMaximized: typeof window !== 'undefined' && window?.innerWidth > 2000,\n  disclaimerVersionAccepted: undefined,\n  disclaimerShouldSuppress: false,\n  localeKey: detectLocale({ defaultLanguage: DEFAULT_LOCALE_KEY, availableLocales: localeKeys }),\n}\n"]},"metadata":{},"sourceType":"module"}