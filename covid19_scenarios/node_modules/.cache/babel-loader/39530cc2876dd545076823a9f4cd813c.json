{"ast":null,"code":"import { Convert } from '../../algorithms/types/Param.types';\nimport validateAgeDistributionArray, { errors } from '../../.generated/latest/validateAgeDistributionArray';\nimport ageDistributionRaw from '../../assets/data/ageDistribution.json';\n\nfunction validate() {\n  const valid = validateAgeDistributionArray(ageDistributionRaw);\n\n  if (!valid) {\n    throw errors;\n  }\n\n  return ageDistributionRaw.all;\n}\n\nconst ageDistributions = validate();\nexport const ageDistributionNames = ageDistributions.map(cad => cad.name);\nexport function getAgeDistributionData(name) {\n  const ageDistributionFound = ageDistributions.find(cad => cad.name === name);\n\n  if (!ageDistributionFound) {\n    throw new Error(`Error: country age distribution \"${name}\" not found in JSON`);\n  }\n\n  const ageDistribution = Convert.toAgeDistributionData(JSON.stringify(ageDistributionFound));\n  ageDistribution.data.sort((a, b) => {\n    if (a.ageGroup > b.ageGroup) {\n      return +1;\n    }\n\n    if (a.ageGroup < b.ageGroup) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return ageDistribution;\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/io/defaults/getAgeDistributionData.ts"],"names":["Convert","validateAgeDistributionArray","errors","ageDistributionRaw","validate","valid","all","ageDistributions","ageDistributionNames","map","cad","name","getAgeDistributionData","ageDistributionFound","find","Error","ageDistribution","toAgeDistributionData","JSON","stringify","data","sort","a","b","ageGroup"],"mappings":"AAAA,SAAoDA,OAApD,QAAmE,oCAAnE;AACA,OAAOC,4BAAP,IAAuCC,MAAvC,QAAqD,sDAArD;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;;AAEA,SAASC,QAAT,GAA2C;AACzC,QAAMC,KAAK,GAAGJ,4BAA4B,CAACE,kBAAD,CAA1C;;AACA,MAAI,CAACE,KAAL,EAAY;AACV,UAAMH,MAAN;AACD;;AAED,SAASC,kBAAF,CAA0DG,GAAjE;AACD;;AAED,MAAMC,gBAAgB,GAAGH,QAAQ,EAAjC;AACA,OAAO,MAAMI,oBAAoB,GAAGD,gBAAgB,CAACE,GAAjB,CAAsBC,GAAD,IAASA,GAAG,CAACC,IAAlC,CAA7B;AAEP,OAAO,SAASC,sBAAT,CAAgCD,IAAhC,EAA8C;AACnD,QAAME,oBAAoB,GAAGN,gBAAgB,CAACO,IAAjB,CAAuBJ,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaA,IAA5C,CAA7B;;AACA,MAAI,CAACE,oBAAL,EAA2B;AACzB,UAAM,IAAIE,KAAJ,CAAW,oCAAmCJ,IAAK,qBAAnD,CAAN;AACD;;AAED,QAAMK,eAAe,GAAGhB,OAAO,CAACiB,qBAAR,CAA8BC,IAAI,CAACC,SAAL,CAAeN,oBAAf,CAA9B,CAAxB;AAEAG,EAAAA,eAAe,CAACI,IAAhB,CAAqBC,IAArB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClC,QAAID,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAC3B,aAAO,CAAC,CAAR;AACD;;AAED,QAAIF,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAC3B,aAAO,CAAC,CAAR;AACD;;AAED,WAAO,CAAP;AACD,GAVD;AAYA,SAAOR,eAAP;AACD","sourcesContent":["import { AgeDistributionArray, AgeDistributionData, Convert } from '../../algorithms/types/Param.types'\nimport validateAgeDistributionArray, { errors } from '../../.generated/latest/validateAgeDistributionArray'\nimport ageDistributionRaw from '../../assets/data/ageDistribution.json'\n\nfunction validate(): AgeDistributionData[] {\n  const valid = validateAgeDistributionArray(ageDistributionRaw)\n  if (!valid) {\n    throw errors\n  }\n\n  return ((ageDistributionRaw as unknown) as AgeDistributionArray).all\n}\n\nconst ageDistributions = validate()\nexport const ageDistributionNames = ageDistributions.map((cad) => cad.name)\n\nexport function getAgeDistributionData(name: string) {\n  const ageDistributionFound = ageDistributions.find((cad) => cad.name === name)\n  if (!ageDistributionFound) {\n    throw new Error(`Error: country age distribution \"${name}\" not found in JSON`)\n  }\n\n  const ageDistribution = Convert.toAgeDistributionData(JSON.stringify(ageDistributionFound))\n\n  ageDistribution.data.sort((a, b) => {\n    if (a.ageGroup > b.ageGroup) {\n      return +1\n    }\n\n    if (a.ageGroup < b.ageGroup) {\n      return -1\n    }\n\n    return 0\n  })\n\n  return ageDistribution\n}\n"]},"metadata":{},"sourceType":"module"}