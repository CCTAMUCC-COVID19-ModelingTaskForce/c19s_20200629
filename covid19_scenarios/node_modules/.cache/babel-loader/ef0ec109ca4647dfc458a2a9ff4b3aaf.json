{"ast":null,"code":"/* tslint:disable:no-this-assignment */\n\n/* eslint-disable no-inner-declarations,cflint/no-this-assignment,@typescript-eslint/ban-ts-comment,no-extend-native */\n// @ts-ignore\nimport { appendDash } from './appendDash'; // @ts-ignore\n\nif (!Error.prototype.toJSON) {\n  function toJSON() {\n    const {\n      message,\n      name,\n      stack\n    } = this;\n    const stackPretty = stack === null || stack === void 0 ? void 0 : stack.split('\\n').map(appendDash);\n    return {\n      message,\n      name,\n      stack: stackPretty\n    };\n  }\n\n  if (Object.defineProperty) {\n    Object.defineProperty(Error.prototype, 'toJSON', {\n      value: toJSON,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    // @ts-ignore\n    Error.prototype.toJSON = toJSON;\n  }\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/helpers/errorPrototypeTojson.ts"],"names":["appendDash","Error","prototype","toJSON","message","name","stack","stackPretty","split","map","Object","defineProperty","value","configurable","writable"],"mappings":"AAAA;;AACA;AACA;AACA,SAASA,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,IAAI,CAACC,KAAK,CAACC,SAAN,CAAgBC,MAArB,EAA6B;AAC3B,WAASA,MAAT,GAA6B;AAC3B,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA;AAAjB,QAA2B,IAAjC;AACA,UAAMC,WAAW,GAAGD,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,KAAP,CAAa,IAAb,EAAmBC,GAAnB,CAAuBT,UAAvB,CAApB;AACA,WAAO;AAAEI,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA,KAAK,EAAEC;AAAxB,KAAP;AACD;;AACD,MAAIG,MAAM,CAACC,cAAX,EAA2B;AACzBD,IAAAA,MAAM,CAACC,cAAP,CAAsBV,KAAK,CAACC,SAA5B,EAAuC,QAAvC,EAAiD;AAC/CU,MAAAA,KAAK,EAAET,MADwC;AAE/CU,MAAAA,YAAY,EAAE,IAFiC;AAG/CC,MAAAA,QAAQ,EAAE;AAHqC,KAAjD;AAKD,GAND,MAMO;AACL;AACAb,IAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyBA,MAAzB;AACD;AACF","sourcesContent":["/* tslint:disable:no-this-assignment */\n/* eslint-disable no-inner-declarations,cflint/no-this-assignment,@typescript-eslint/ban-ts-comment,no-extend-native */\n// @ts-ignore\nimport { appendDash } from './appendDash'\n\n// @ts-ignore\nif (!Error.prototype.toJSON) {\n  function toJSON(this: Error) {\n    const { message, name, stack } = this\n    const stackPretty = stack?.split('\\n').map(appendDash)\n    return { message, name, stack: stackPretty }\n  }\n  if (Object.defineProperty) {\n    Object.defineProperty(Error.prototype, 'toJSON', {\n      value: toJSON,\n      configurable: true,\n      writable: true,\n    })\n  } else {\n    // @ts-ignore\n    Error.prototype.toJSON = toJSON\n  }\n}\n"]},"metadata":{},"sourceType":"module"}