{"ast":null,"code":"import _pt from \"prop-types\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/PageSwitcher/PageSwitcher.tsx\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router';\nimport NotFound from '../../pages/NotFound';\nimport pageRender from './PageRender';\n\n// Switches between routes that render dynamically loaded pages from the list.\nconst PageSwitcher = ({\n  location,\n  routes,\n  loadingComponent,\n  forceLoadingMs = 0,\n  timeoutMs = 20000\n}) => /*#__PURE__*/React.createElement(Switch, {\n  location: location,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, [...routes.map(({\n  path,\n  page\n}) => {\n  const render = pageRender({\n    page,\n    timeoutMs,\n    loadingComponent,\n    forceLoadingMs\n  });\n  return /*#__PURE__*/React.createElement(Route, {\n    exact: !path.includes(':'),\n    path: path,\n    key: path,\n    render: render,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }\n  });\n}),\n/*#__PURE__*/\n// The last \"catch-all\" entry defaults to \"NotFound\" page\nReact.createElement(Route, {\n  exact: true,\n  key: \"notfound\",\n  component: NotFound,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n})]);\n\n_c = PageSwitcher;\nPageSwitcher.propTypes = {\n  routes: _pt.arrayOf(_pt.shape({\n    path: _pt.string.isRequired,\n    page: _pt.string.isRequired\n  })).isRequired,\n  loadingComponent: _pt.element.isRequired,\n  forceLoadingMs: _pt.number,\n  timeoutMs: _pt.number\n};\nexport default PageSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSwitcher\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/PageSwitcher/PageSwitcher.tsx"],"names":["React","Route","Switch","NotFound","pageRender","PageSwitcher","location","routes","loadingComponent","forceLoadingMs","timeoutMs","map","path","page","render","includes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAeA;AACA,MAAMC,YAAyC,GAAG,CAAC;AACjDC,EAAAA,QADiD;AAEjDC,EAAAA,MAFiD;AAGjDC,EAAAA,gBAHiD;AAIjDC,EAAAA,cAAc,GAAG,CAJgC;AAKjDC,EAAAA,SAAS,GAAG;AALqC,CAAD,kBAOhD,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEJ,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CACC,GAAGC,MAAM,CAACI,GAAP,CAAW,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAmC;AAC/C,QAAMC,MAAM,GAAGV,UAAU,CAAC;AACxBS,IAAAA,IADwB;AAExBH,IAAAA,SAFwB;AAGxBF,IAAAA,gBAHwB;AAIxBC,IAAAA;AAJwB,GAAD,CAAzB;AAOA,sBAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAACG,IAAI,CAACG,QAAL,CAAc,GAAd,CAAf;AAAmC,IAAA,IAAI,EAAEH,IAAzC;AAA+C,IAAA,GAAG,EAAEA,IAApD;AAA0D,IAAA,MAAM,EAAEE,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CATE,CADJ;AAAA;AAYC;AACA,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,GAAG,EAAC,UAAjB;AAA4B,EAAA,SAAS,EAAEX,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbD,CADH,CAPF;;KAAME,Y;;AAPJE,EAAAA,M;AANAK,IAAAA,I;AACAC,IAAAA,I;;AAMAL,EAAAA,gB;AACAC,EAAAA,c;AACAC,EAAAA,S;;AA8BF,eAAeL,YAAf","sourcesContent":["import React from 'react'\n\nimport { Location } from 'history'\nimport { Route, Switch } from 'react-router'\n\nimport NotFound from '../../pages/NotFound'\nimport pageRender from './PageRender'\n\nexport interface PageRouteDesc {\n  path: string\n  page: string\n}\n\nexport interface PageSwitcherProps {\n  location: Location\n  routes: PageRouteDesc[]\n  loadingComponent: JSX.Element\n  forceLoadingMs?: number\n  timeoutMs?: number\n}\n\n// Switches between routes that render dynamically loaded pages from the list.\nconst PageSwitcher: React.FC<PageSwitcherProps> = ({\n  location,\n  routes,\n  loadingComponent,\n  forceLoadingMs = 0,\n  timeoutMs = 20000,\n}) => (\n  <Switch location={location}>\n    {[\n      ...routes.map(({ path, page }: PageRouteDesc) => {\n        const render = pageRender({\n          page,\n          timeoutMs,\n          loadingComponent,\n          forceLoadingMs,\n        })\n\n        return <Route exact={!path.includes(':')} path={path} key={path} render={render} />\n      }),\n\n      // The last \"catch-all\" entry defaults to \"NotFound\" page\n      <Route exact key=\"notfound\" component={NotFound} />,\n    ]}\n  </Switch>\n)\n\nexport default PageSwitcher\n"]},"metadata":{},"sourceType":"module"}