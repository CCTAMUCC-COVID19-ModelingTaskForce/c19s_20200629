{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/DateRangePicker.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { DateRangePicker as AirbnbDateRangePicker } from 'react-dates';\nexport function DateRangePicker({\n  identifier,\n  value,\n  allowPast,\n  setValue,\n  ...otherProps\n}) {\n  _s();\n\n  const [focusedInput, setFocusedInput] = useState(null);\n  const {\n    begin,\n    end\n  } = value;\n  return /*#__PURE__*/React.createElement(AirbnbDateRangePicker, Object.assign({\n    startDate: moment(begin),\n    startDateId: `${identifier}_start_date_id`,\n    endDate: moment(end),\n    endDateId: `${identifier}_end_date_id`,\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => {\n      if (startDate && endDate) {\n        setValue({\n          begin: startDate.toDate(),\n          end: endDate.toDate()\n        });\n      } else if (startDate) {\n        setValue({ ...value,\n          begin: startDate.toDate()\n        });\n      } else if (endDate) {\n        setValue({ ...value,\n          end: endDate.toDate()\n        });\n      }\n    },\n    focusedInput: focusedInput,\n    onFocusChange: focusedInput => setFocusedInput(focusedInput),\n    isOutsideRange: () => !allowPast,\n    displayFormat: \"DD MMM YYYY\",\n    small: true\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }));\n}\n\n_s(DateRangePicker, \"VN7PHVphT8LlPEZxUEYs2+mh0Z4=\");\n\n_c = DateRangePicker;\nDateRangePicker.propTypes = {\n  identifier: _pt.string.isRequired,\n  allowPast: _pt.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DateRangePicker\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/DateRangePicker.tsx"],"names":["React","useState","moment","DateRangePicker","AirbnbDateRangePicker","identifier","value","allowPast","setValue","otherProps","focusedInput","setFocusedInput","begin","end","startDate","endDate","toDate"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAe,IAAIC,qBAA5B,QAAkG,aAAlG;AAYA,OAAO,SAASD,eAAT,CAAyB;AAAEE,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA,QAAhC;AAA0C,KAAGC;AAA7C,CAAzB,EAA0G;AAAA;;AAC/G,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAA2B,IAA3B,CAAhD;AAEA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAiBP,KAAvB;AAEA,sBACE,oBAAC,qBAAD;AACE,IAAA,SAAS,EAAEJ,MAAM,CAACU,KAAD,CADnB;AAEE,IAAA,WAAW,EAAG,GAAEP,UAAW,gBAF7B;AAGE,IAAA,OAAO,EAAEH,MAAM,CAACW,GAAD,CAHjB;AAIE,IAAA,SAAS,EAAG,GAAER,UAAW,cAJ3B;AAKE,IAAA,aAAa,EAAE,CAAC;AAAES,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAD,KAA4B;AACzC,UAAID,SAAS,IAAIC,OAAjB,EAA0B;AACxBP,QAAAA,QAAQ,CAAC;AAAEI,UAAAA,KAAK,EAAEE,SAAS,CAACE,MAAV,EAAT;AAA6BH,UAAAA,GAAG,EAAEE,OAAO,CAACC,MAAR;AAAlC,SAAD,CAAR;AACD,OAFD,MAEO,IAAIF,SAAJ,EAAe;AACpBN,QAAAA,QAAQ,CAAC,EAAE,GAAGF,KAAL;AAAYM,UAAAA,KAAK,EAAEE,SAAS,CAACE,MAAV;AAAnB,SAAD,CAAR;AACD,OAFM,MAEA,IAAID,OAAJ,EAAa;AAClBP,QAAAA,QAAQ,CAAC,EAAE,GAAGF,KAAL;AAAYO,UAAAA,GAAG,EAAEE,OAAO,CAACC,MAAR;AAAjB,SAAD,CAAR;AACD;AACF,KAbH;AAcE,IAAA,YAAY,EAAEN,YAdhB;AAeE,IAAA,aAAa,EAAGA,YAAD,IAAkBC,eAAe,CAACD,YAAD,CAflD;AAgBE,IAAA,cAAc,EAAE,MAAM,CAACH,SAhBzB;AAiBE,IAAA,aAAa,EAAC,aAjBhB;AAkBE,IAAA,KAAK;AAlBP,KAmBME,UAnBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAuBD;;GA5BeN,e;;KAAAA,e;;AAPdE,EAAAA,U;AAEAE,EAAAA,S","sourcesContent":["import React, { useState } from 'react'\n\nimport moment from 'moment'\nimport { DateRangePicker as AirbnbDateRangePicker, DateRangePickerShape, FocusedInputShape } from 'react-dates'\n\nimport { DateRange } from '../../algorithms/types/Param.types'\n\nexport interface DateRangePickerProps extends Partial<DateRangePickerShape> {\n  identifier: string\n  value: DateRange\n  allowPast: boolean\n\n  setValue(value: DateRange): void\n}\n\nexport function DateRangePicker({ identifier, value, allowPast, setValue, ...otherProps }: DateRangePickerProps) {\n  const [focusedInput, setFocusedInput] = useState<FocusedInputShape | null>(null)\n\n  const { begin, end } = value\n\n  return (\n    <AirbnbDateRangePicker\n      startDate={moment(begin)}\n      startDateId={`${identifier}_start_date_id`}\n      endDate={moment(end)}\n      endDateId={`${identifier}_end_date_id`}\n      onDatesChange={({ startDate, endDate }) => {\n        if (startDate && endDate) {\n          setValue({ begin: startDate.toDate(), end: endDate.toDate() })\n        } else if (startDate) {\n          setValue({ ...value, begin: startDate.toDate() })\n        } else if (endDate) {\n          setValue({ ...value, end: endDate.toDate() })\n        }\n      }}\n      focusedInput={focusedInput}\n      onFocusChange={(focusedInput) => setFocusedInput(focusedInput)}\n      isOutsideRange={() => !allowPast}\n      displayFormat=\"DD MMM YYYY\"\n      small\n      {...otherProps}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}