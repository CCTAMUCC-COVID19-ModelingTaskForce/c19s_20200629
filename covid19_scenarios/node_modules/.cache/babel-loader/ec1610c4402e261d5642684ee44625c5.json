{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Controls/ModalButtonExport.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Card, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row, ListGroup, ListGroupItem } from 'reactstrap';\nimport { MdFileDownload } from 'react-icons/md';\nimport FileIcon, { defaultStyles } from 'react-file-icon';\nimport { selectHasResult, selectResult } from '../../../state/algorithm/algorithm.selectors';\nimport { selectScenarioParameters } from '../../../state/scenario/scenario.selectors';\nimport { exportAll, exportResult, exportScenario } from '../../../algorithms/utils/exportResult';\nimport { FILENAME_PARAMS, FILENAME_RESULTS_DETAILED, FILENAME_RESULTS_SUMMARY, FILENAME_ZIP } from './filenames';\nimport './ModalButtonExport.scss';\nexport const FileIconJson = () => /*#__PURE__*/React.createElement(FileIcon, Object.assign({}, defaultStyles.json, {\n  className: \"mr-2 export-file-icon\",\n  size: 45,\n  extension: \"json\",\n  type: \"code\",\n  labelColor: '#66b51d',\n  glyphColor: '#66b51d',\n  labelUppercase: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}));\n_c = FileIconJson;\nexport const FileIconTsv = ({\n  color = '#2e7ec9'\n}) => /*#__PURE__*/React.createElement(FileIcon, Object.assign({}, defaultStyles.csv, {\n  className: \"mr-2 export-file-icon\",\n  size: 45,\n  extension: \"tsv\",\n  type: \"spreadsheet\",\n  labelColor: color,\n  glyphColor: color,\n  labelUppercase: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n}));\n_c2 = FileIconTsv;\nexport const FileIconTsvDetailed = () => /*#__PURE__*/React.createElement(FileIconTsv, {\n  color: \"#801f1d\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 42\n  }\n});\n_c3 = FileIconTsvDetailed;\nexport const FileIconZip = () => /*#__PURE__*/React.createElement(FileIcon, Object.assign({}, defaultStyles.zip, {\n  className: \"mr-2 export-file-icon\",\n  size: 45,\n  extension: \"zip\",\n  labelColor: \"#91640f\",\n  glyphColor: \"#91640f\",\n  labelUppercase: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}));\n_c4 = FileIconZip;\nexport function ExportFileElement({\n  Icon,\n  filename,\n  HelpMain,\n  HelpDetails,\n  HelpDownload,\n  onDownload\n}) {\n  return /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"export-file-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-3 d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    className: \"mb-0 export-file-filename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, filename), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-0 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, HelpMain), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-0 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, HelpDetails)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-block ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"transparent\",\n    className: \"btn-download\",\n    title: HelpDownload,\n    onClick: onDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MdFileDownload, {\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }))));\n}\n_c5 = ExportFileElement;\nExportFileElement.propTypes = {\n  filename: _pt.string.isRequired,\n  HelpDownload: _pt.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scenarioParameters: selectScenarioParameters(state),\n  hasResult: selectHasResult(state),\n  result: selectResult(state)\n});\n\nconst mapDispatchToProps = {};\nexport function ModalButtonExportDisconnected({\n  buttonSize,\n  scenarioParameters,\n  hasResult,\n  result\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleOpen() {\n    setIsOpen(!isOpen);\n  }\n\n  function open() {\n    setIsOpen(true);\n  }\n\n  function close() {\n    setIsOpen(false);\n  }\n\n  function exportScenarioParameters() {\n    exportScenario({\n      scenarioParameters,\n      filename: FILENAME_PARAMS\n    });\n  }\n\n  function maybeExportResultSummary() {\n    if (!hasResult) {\n      return;\n    }\n\n    exportResult({\n      scenarioParameters,\n      result,\n      filename: FILENAME_RESULTS_SUMMARY,\n      detailed: false\n    });\n  }\n\n  function maybeExportResultDetailed() {\n    if (!hasResult) {\n      return;\n    }\n\n    exportResult({\n      scenarioParameters,\n      result,\n      filename: FILENAME_RESULTS_DETAILED,\n      detailed: true\n    });\n  }\n\n  function maybeExportAll() {\n    if (!hasResult) {\n      return;\n    } // FIXME: this async operation should probably be moved to a saga or at least useEffect()\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    exportAll({\n      scenarioParameters,\n      result,\n      filenameParams: FILENAME_PARAMS,\n      filenameResultsDetailed: FILENAME_RESULTS_DETAILED,\n      filenameResultsSummary: FILENAME_RESULTS_SUMMARY,\n      filenameZip: FILENAME_ZIP\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-simulation-controls\",\n    type: \"button\",\n    color: \"secondary\",\n    onClick: open,\n    title: t(`Download parameters and results`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MdFileDownload, {\n    size: buttonSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    className: \"export-modal\",\n    centered: true,\n    isOpen: isOpen,\n    toggle: toggleOpen,\n    fade: false,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MdFileDownload, {\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"ml-2 d-inline align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, t(`Export`))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    flush: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExportFileElement, {\n    Icon: FileIconJson,\n    filename: FILENAME_PARAMS,\n    HelpMain: t('Parameters of the current scenario in JSON format.'),\n    HelpDetails: t('Can be loaded later into the simulator using \"Load\" button. A good starting point for creating custom scenarios.'),\n    HelpDownload: t('Download scenario parameters'),\n    onDownload: exportScenarioParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExportFileElement, {\n    Icon: FileIconTsv,\n    filename: FILENAME_RESULTS_SUMMARY,\n    HelpMain: t('Results (summarized) as tab-separated values.'),\n    HelpDetails: t('Short version of results for further analysis, for example with spreadsheets or data-science tools.'),\n    HelpDownload: t('Download summarized results'),\n    onDownload: maybeExportResultSummary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExportFileElement, {\n    Icon: FileIconTsvDetailed,\n    filename: FILENAME_RESULTS_DETAILED,\n    HelpMain: t('Results (detailed) as tab-separated values.'),\n    HelpDetails: t('Detailed version of results for further analysis. Same as above, but includes additional columns with results for age strata.'),\n    HelpDownload: t('Download detailed results'),\n    onDownload: maybeExportResultDetailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExportFileElement, {\n    Icon: FileIconZip,\n    filename: FILENAME_ZIP,\n    HelpMain: t('Results and parameters in a zip archive.'),\n    HelpDetails: t('Contains all of the above files in a single zip file.'),\n    HelpDownload: t('Download all in zip archive'),\n    onDownload: maybeExportAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"close-button\",\n    type: \"button\",\n    onClick: close,\n    title: t(`Close`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, t(`Close`))))));\n}\n\n_s(ModalButtonExportDisconnected, \"YqFlwYj942rGdCJKDxgztmchFPI=\", false, function () {\n  return [useTranslation];\n});\n\n_c6 = ModalButtonExportDisconnected;\nModalButtonExportDisconnected.propTypes = {\n  buttonSize: _pt.number.isRequired,\n  hasResult: _pt.bool.isRequired\n};\nconst ModalButtonExport = connect(mapStateToProps, mapDispatchToProps)(ModalButtonExportDisconnected);\nexport { ModalButtonExport };\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"FileIconJson\");\n$RefreshReg$(_c2, \"FileIconTsv\");\n$RefreshReg$(_c3, \"FileIconTsvDetailed\");\n$RefreshReg$(_c4, \"FileIconZip\");\n$RefreshReg$(_c5, \"ExportFileElement\");\n$RefreshReg$(_c6, \"ModalButtonExportDisconnected\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Controls/ModalButtonExport.tsx"],"names":["React","useState","connect","useTranslation","Button","Card","Col","Modal","ModalBody","ModalFooter","ModalHeader","Row","ListGroup","ListGroupItem","MdFileDownload","FileIcon","defaultStyles","selectHasResult","selectResult","selectScenarioParameters","exportAll","exportResult","exportScenario","FILENAME_PARAMS","FILENAME_RESULTS_DETAILED","FILENAME_RESULTS_SUMMARY","FILENAME_ZIP","FileIconJson","json","FileIconTsv","color","csv","FileIconTsvDetailed","FileIconZip","zip","ExportFileElement","Icon","filename","HelpMain","HelpDetails","HelpDownload","onDownload","mapStateToProps","state","scenarioParameters","hasResult","result","mapDispatchToProps","ModalButtonExportDisconnected","buttonSize","t","isOpen","setIsOpen","toggleOpen","open","close","exportScenarioParameters","maybeExportResultSummary","detailed","maybeExportResultDetailed","maybeExportAll","filenameParams","filenameResultsDetailed","filenameResultsSummary","filenameZip","ModalButtonExport"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,GARF,EASEC,SATF,EAUEC,aAVF,QAWO,YAXP;AAYA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,iBAAxC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,8CAA9C;AAKA,SAASC,wBAAT,QAAyC,4CAAzC;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,cAAlC,QAAwD,wCAAxD;AAEA,SAASC,eAAT,EAA0BC,yBAA1B,EAAqDC,wBAArD,EAA+EC,YAA/E,QAAmG,aAAnG;AAEA,OAAO,0BAAP;AAEA,OAAO,MAAMC,YAAY,GAAG,mBAC1B,oBAAC,QAAD,oBACMX,aAAa,CAACY,IADpB;AAEE,EAAA,SAAS,EAAC,uBAFZ;AAGE,EAAA,IAAI,EAAE,EAHR;AAIE,EAAA,SAAS,EAAC,MAJZ;AAKE,EAAA,IAAI,EAAC,MALP;AAME,EAAA,UAAU,EAAE,SANd;AAOE,EAAA,UAAU,EAAE,SAPd;AAQE,EAAA,cAAc,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;KAAMD,Y;AAab,OAAO,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,kBACzB,oBAAC,QAAD,oBACMd,aAAa,CAACe,GADpB;AAEE,EAAA,SAAS,EAAC,uBAFZ;AAGE,EAAA,IAAI,EAAE,EAHR;AAIE,EAAA,SAAS,EAAC,KAJZ;AAKE,EAAA,IAAI,EAAC,aALP;AAME,EAAA,UAAU,EAAED,KANd;AAOE,EAAA,UAAU,EAAEA,KAPd;AAQE,EAAA,cAAc,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;MAAMD,W;AAab,OAAO,MAAMG,mBAAmB,GAAG,mBAAM,oBAAC,WAAD;AAAa,EAAA,KAAK,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlC;MAAMA,mB;AAEb,OAAO,MAAMC,WAAW,GAAG,mBACzB,oBAAC,QAAD,oBACMjB,aAAa,CAACkB,GADpB;AAEE,EAAA,SAAS,EAAC,uBAFZ;AAGE,EAAA,IAAI,EAAE,EAHR;AAIE,EAAA,SAAS,EAAC,KAJZ;AAKE,EAAA,UAAU,EAAC,SALb;AAME,EAAA,UAAU,EAAC,SANb;AAOE,EAAA,cAAc,MAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;MAAMD,W;AAqBb,OAAO,SAASE,iBAAT,CAA2B;AAChCC,EAAAA,IADgC;AAEhCC,EAAAA,QAFgC;AAGhCC,EAAAA,QAHgC;AAIhCC,EAAAA,WAJgC;AAKhCC,EAAAA,YALgC;AAMhCC,EAAAA;AANgC,CAA3B,EAOgB;AACrB,sBACE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CJ,QAA5C,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,QAA3B,CAFF,eAGE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,WAA3B,CAHF,CAJF,eAUE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAqD,IAAA,KAAK,EAAEC,YAA5D;AAA0E,IAAA,OAAO,EAAEC,UAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CADF;AAkBD;MA1BeN,iB;;AAPdE,EAAAA,Q;AAGAG,EAAAA,Y;;;AAuCF,MAAME,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,kBAAkB,EAAEzB,wBAAwB,CAACwB,KAAD,CADH;AAEzCE,EAAAA,SAAS,EAAE5B,eAAe,CAAC0B,KAAD,CAFe;AAGzCG,EAAAA,MAAM,EAAE5B,YAAY,CAACyB,KAAD;AAHqB,CAAnB,CAAxB;;AAMA,MAAMI,kBAAkB,GAAG,EAA3B;AAEA,OAAO,SAASC,6BAAT,CAAuC;AAC5CC,EAAAA,UAD4C;AAE5CL,EAAAA,kBAF4C;AAG5CC,EAAAA,SAH4C;AAI5CC,EAAAA;AAJ4C,CAAvC,EAKoB;AAAA;;AACzB,QAAM;AAAEI,IAAAA;AAAF,MAAQ/C,cAAc,EAA5B;AACA,QAAM,CAACgD,MAAD,EAASC,SAAT,IAAsBnD,QAAQ,CAAU,KAAV,CAApC;;AAEA,WAASoD,UAAT,GAAsB;AACpBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAED,WAASG,IAAT,GAAgB;AACdF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASG,KAAT,GAAiB;AACfH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,WAASI,wBAAT,GAAoC;AAClClC,IAAAA,cAAc,CAAC;AAAEsB,MAAAA,kBAAF;AAAsBP,MAAAA,QAAQ,EAAEd;AAAhC,KAAD,CAAd;AACD;;AAED,WAASkC,wBAAT,GAAoC;AAClC,QAAI,CAACZ,SAAL,EAAgB;AACd;AACD;;AACDxB,IAAAA,YAAY,CAAC;AACXuB,MAAAA,kBADW;AAEXE,MAAAA,MAFW;AAGXT,MAAAA,QAAQ,EAAEZ,wBAHC;AAIXiC,MAAAA,QAAQ,EAAE;AAJC,KAAD,CAAZ;AAMD;;AAED,WAASC,yBAAT,GAAqC;AACnC,QAAI,CAACd,SAAL,EAAgB;AACd;AACD;;AAEDxB,IAAAA,YAAY,CAAC;AACXuB,MAAAA,kBADW;AAEXE,MAAAA,MAFW;AAGXT,MAAAA,QAAQ,EAAEb,yBAHC;AAIXkC,MAAAA,QAAQ,EAAE;AAJC,KAAD,CAAZ;AAMD;;AAED,WAASE,cAAT,GAA0B;AACxB,QAAI,CAACf,SAAL,EAAgB;AACd;AACD,KAHuB,CAKxB;AACA;;;AACAzB,IAAAA,SAAS,CAAC;AACRwB,MAAAA,kBADQ;AAERE,MAAAA,MAFQ;AAGRe,MAAAA,cAAc,EAAEtC,eAHR;AAIRuC,MAAAA,uBAAuB,EAAEtC,yBAJjB;AAKRuC,MAAAA,sBAAsB,EAAEtC,wBALhB;AAMRuC,MAAAA,WAAW,EAAEtC;AANL,KAAD,CAAT;AAQD;;AAED,sBACE,uDACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,OAAO,EAAE4B,IAJX;AAKE,IAAA,KAAK,EAAEJ,CAAC,CAAE,iCAAF,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAED,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAUE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,QAAQ,MAAxC;AAAyC,IAAA,MAAM,EAAEE,MAAjD;AAAyD,IAAA,MAAM,EAAEE,UAAjE;AAA6E,IAAA,IAAI,EAAE,KAAnF;AAA0F,IAAA,IAAI,EAAC,IAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CL,CAAC,CAAE,QAAF,CAA7C,CAFF,CADF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAEvB,YADR;AAEE,IAAA,QAAQ,EAAEJ,eAFZ;AAGE,IAAA,QAAQ,EAAE2B,CAAC,CAAC,oDAAD,CAHb;AAIE,IAAA,WAAW,EAAEA,CAAC,CACZ,kHADY,CAJhB;AAOE,IAAA,YAAY,EAAEA,CAAC,CAAC,8BAAD,CAPjB;AAQE,IAAA,UAAU,EAAEM,wBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAYE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAE3B,WADR;AAEE,IAAA,QAAQ,EAAEJ,wBAFZ;AAGE,IAAA,QAAQ,EAAEyB,CAAC,CAAC,+CAAD,CAHb;AAIE,IAAA,WAAW,EAAEA,CAAC,CACZ,qGADY,CAJhB;AAOE,IAAA,YAAY,EAAEA,CAAC,CAAC,6BAAD,CAPjB;AAQE,IAAA,UAAU,EAAEO,wBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAuBE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAEzB,mBADR;AAEE,IAAA,QAAQ,EAAER,yBAFZ;AAGE,IAAA,QAAQ,EAAE0B,CAAC,CAAC,6CAAD,CAHb;AAIE,IAAA,WAAW,EAAEA,CAAC,CACZ,+HADY,CAJhB;AAOE,IAAA,YAAY,EAAEA,CAAC,CAAC,2BAAD,CAPjB;AAQE,IAAA,UAAU,EAAES,yBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eAkCE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAE1B,WADR;AAEE,IAAA,QAAQ,EAAEP,YAFZ;AAGE,IAAA,QAAQ,EAAEwB,CAAC,CAAC,0CAAD,CAHb;AAIE,IAAA,WAAW,EAAEA,CAAC,CAAC,uDAAD,CAJhB;AAKE,IAAA,YAAY,EAAEA,CAAC,CAAC,6BAAD,CALjB;AAME,IAAA,UAAU,EAAEU,cANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF,CADF,CADF,CADF,CALF,eAwDE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAA+C,IAAA,OAAO,EAAEL,KAAxD;AAA+D,IAAA,KAAK,EAAEL,CAAC,CAAE,OAAF,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,CAAC,CAAE,OAAF,CAAP,CADF,CADF,CAxDF,CAVF,CADF;AA2ED;;GA9IeF,6B;UAMA7C,c;;;MANA6C,6B;;AAddC,EAAAA,U;AAEAJ,EAAAA,S;;AA4JF,MAAMoB,iBAAiB,GAAG/D,OAAO,CAACwC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CC,6BAA7C,CAA1B;AAEA,SAASiB,iBAAT","sourcesContent":["import React, { useState } from 'react'\n\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport {\n  Button,\n  Card,\n  Col,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap'\nimport { MdFileDownload } from 'react-icons/md'\nimport FileIcon, { defaultStyles } from 'react-file-icon'\nimport { selectHasResult, selectResult } from '../../../state/algorithm/algorithm.selectors'\n\nimport type { State } from '../../../state/reducer'\nimport type { ScenarioParameters } from '../../../algorithms/types/Param.types'\nimport type { AlgorithmResult } from '../../../algorithms/types/Result.types'\nimport { selectScenarioParameters } from '../../../state/scenario/scenario.selectors'\n\nimport { exportAll, exportResult, exportScenario } from '../../../algorithms/utils/exportResult'\n\nimport { FILENAME_PARAMS, FILENAME_RESULTS_DETAILED, FILENAME_RESULTS_SUMMARY, FILENAME_ZIP } from './filenames'\n\nimport './ModalButtonExport.scss'\n\nexport const FileIconJson = () => (\n  <FileIcon\n    {...defaultStyles.json}\n    className=\"mr-2 export-file-icon\"\n    size={45}\n    extension=\"json\"\n    type=\"code\"\n    labelColor={'#66b51d'}\n    glyphColor={'#66b51d'}\n    labelUppercase\n  />\n)\n\nexport const FileIconTsv = ({ color = '#2e7ec9' }: { color: string }) => (\n  <FileIcon\n    {...defaultStyles.csv}\n    className=\"mr-2 export-file-icon\"\n    size={45}\n    extension=\"tsv\"\n    type=\"spreadsheet\"\n    labelColor={color}\n    glyphColor={color}\n    labelUppercase\n  />\n)\n\nexport const FileIconTsvDetailed = () => <FileIconTsv color=\"#801f1d\" />\n\nexport const FileIconZip = () => (\n  <FileIcon\n    {...defaultStyles.zip}\n    className=\"mr-2 export-file-icon\"\n    size={45}\n    extension=\"zip\"\n    labelColor=\"#91640f\"\n    glyphColor=\"#91640f\"\n    labelUppercase\n  />\n)\n\nexport interface ExportElementProps {\n  Icon: React.ElementType\n  filename: string\n  HelpMain: React.ElementType\n  HelpDetails: React.ElementType\n  HelpDownload: string\n  onDownload(): void\n}\n\nexport function ExportFileElement({\n  Icon,\n  filename,\n  HelpMain,\n  HelpDetails,\n  HelpDownload,\n  onDownload,\n}: ExportElementProps) {\n  return (\n    <ListGroupItem className=\"d-flex\">\n      <span className=\"export-file-icon-container\">\n        <Icon />\n      </span>\n      <div className=\"mx-3 d-inline-block\">\n        <pre className=\"mb-0 export-file-filename\">{filename}</pre>\n        <p className=\"my-0 small\">{HelpMain}</p>\n        <p className=\"my-0 small\">{HelpDetails}</p>\n      </div>\n\n      <div className=\"d-inline-block ml-auto\">\n        <Button color=\"transparent\" className=\"btn-download\" title={HelpDownload} onClick={onDownload}>\n          <MdFileDownload size={30} />\n        </Button>\n      </div>\n    </ListGroupItem>\n  )\n}\n\nexport interface ModalButtonExportProps {\n  buttonSize: number\n  scenarioParameters: ScenarioParameters\n  hasResult: boolean\n  result?: AlgorithmResult\n}\n\nconst mapStateToProps = (state: State) => ({\n  scenarioParameters: selectScenarioParameters(state),\n  hasResult: selectHasResult(state),\n  result: selectResult(state),\n})\n\nconst mapDispatchToProps = {}\n\nexport function ModalButtonExportDisconnected({\n  buttonSize,\n  scenarioParameters,\n  hasResult,\n  result,\n}: ModalButtonExportProps) {\n  const { t } = useTranslation()\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n\n  function toggleOpen() {\n    setIsOpen(!isOpen)\n  }\n\n  function open() {\n    setIsOpen(true)\n  }\n\n  function close() {\n    setIsOpen(false)\n  }\n\n  function exportScenarioParameters() {\n    exportScenario({ scenarioParameters, filename: FILENAME_PARAMS })\n  }\n\n  function maybeExportResultSummary() {\n    if (!hasResult) {\n      return\n    }\n    exportResult({\n      scenarioParameters,\n      result,\n      filename: FILENAME_RESULTS_SUMMARY,\n      detailed: false,\n    })\n  }\n\n  function maybeExportResultDetailed() {\n    if (!hasResult) {\n      return\n    }\n\n    exportResult({\n      scenarioParameters,\n      result,\n      filename: FILENAME_RESULTS_DETAILED,\n      detailed: true,\n    })\n  }\n\n  function maybeExportAll() {\n    if (!hasResult) {\n      return\n    }\n\n    // FIXME: this async operation should probably be moved to a saga or at least useEffect()\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    exportAll({\n      scenarioParameters,\n      result,\n      filenameParams: FILENAME_PARAMS,\n      filenameResultsDetailed: FILENAME_RESULTS_DETAILED,\n      filenameResultsSummary: FILENAME_RESULTS_SUMMARY,\n      filenameZip: FILENAME_ZIP,\n    })\n  }\n\n  return (\n    <>\n      <Button\n        className=\"btn-simulation-controls\"\n        type=\"button\"\n        color=\"secondary\"\n        onClick={open}\n        title={t(`Download parameters and results`)}\n      >\n        <MdFileDownload size={buttonSize} />\n      </Button>\n      <Modal className=\"export-modal\" centered isOpen={isOpen} toggle={toggleOpen} fade={false} size=\"lg\">\n        <ModalHeader toggle={close}>\n          <MdFileDownload size={30} />\n          <h3 className=\"ml-2 d-inline align-middle\">{t(`Export`)}</h3>\n        </ModalHeader>\n        <ModalBody>\n          <Row>\n            <Col>\n              <Card>\n                <ListGroup flush>\n                  <ExportFileElement\n                    Icon={FileIconJson}\n                    filename={FILENAME_PARAMS}\n                    HelpMain={t('Parameters of the current scenario in JSON format.')}\n                    HelpDetails={t(\n                      'Can be loaded later into the simulator using \"Load\" button. A good starting point for creating custom scenarios.',\n                    )}\n                    HelpDownload={t('Download scenario parameters')}\n                    onDownload={exportScenarioParameters}\n                  />\n\n                  <ExportFileElement\n                    Icon={FileIconTsv}\n                    filename={FILENAME_RESULTS_SUMMARY}\n                    HelpMain={t('Results (summarized) as tab-separated values.')}\n                    HelpDetails={t(\n                      'Short version of results for further analysis, for example with spreadsheets or data-science tools.',\n                    )}\n                    HelpDownload={t('Download summarized results')}\n                    onDownload={maybeExportResultSummary}\n                  />\n\n                  <ExportFileElement\n                    Icon={FileIconTsvDetailed}\n                    filename={FILENAME_RESULTS_DETAILED}\n                    HelpMain={t('Results (detailed) as tab-separated values.')}\n                    HelpDetails={t(\n                      'Detailed version of results for further analysis. Same as above, but includes additional columns with results for age strata.',\n                    )}\n                    HelpDownload={t('Download detailed results')}\n                    onDownload={maybeExportResultDetailed}\n                  />\n\n                  <ExportFileElement\n                    Icon={FileIconZip}\n                    filename={FILENAME_ZIP}\n                    HelpMain={t('Results and parameters in a zip archive.')}\n                    HelpDetails={t('Contains all of the above files in a single zip file.')}\n                    HelpDownload={t('Download all in zip archive')}\n                    onDownload={maybeExportAll}\n                  />\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </ModalBody>\n        <ModalFooter>\n          <Button className=\"close-button\" type=\"button\" onClick={close} title={t(`Close`)}>\n            <div>{t(`Close`)}</div>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nconst ModalButtonExport = connect(mapStateToProps, mapDispatchToProps)(ModalButtonExportDisconnected)\n\nexport { ModalButtonExport }\n"]},"metadata":{},"sourceType":"module"}