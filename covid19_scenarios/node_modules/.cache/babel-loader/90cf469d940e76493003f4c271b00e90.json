{"ast":null,"code":"import { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport { suggestNextMitigationInterval } from '../../algorithms/utils/suggestNextMitigationInterval';\nimport { getCaseCountsData } from '../../io/defaults/getCaseCountsData';\nimport immerCase from '../util/fsaImmerReducer';\nimport { CUSTOM_COUNTRY_NAME } from '../../constants';\nimport { addMitigationInterval, removeMitigationInterval, renameCurrentScenario, resetCaseCounts, setAgeDistributionData, setCanRun, setCaseCountsDataCustom, setScenario, setScenarioData, setScenarioState, setSeverityDistributionData } from './scenario.actions';\nimport { getAgeDistributionData } from '../../io/defaults/getAgeDistributionData';\nimport { getScenarioData } from '../../io/defaults/getScenarioData';\nimport { defaultScenarioState } from './scenario.state';\nexport function maybeChangeTitle(state) {\n  let {\n    name\n  } = state.scenarioData;\n\n  if (state.shouldRenameOnEdits) {\n    name = `${name} (edited)`;\n  }\n\n  return name;\n}\nexport const scenarioReducer = reducerWithInitialState(defaultScenarioState).withHandling(immerCase(renameCurrentScenario, (draft, {\n  name\n}) => {\n  draft.scenarioData.name = name;\n  draft.shouldRenameOnEdits = false;\n})).withHandling(immerCase(setScenario, (draft, {\n  name\n}) => {\n  draft.scenarioData.name = name;\n  draft.shouldRenameOnEdits = true;\n  draft.scenarioData = getScenarioData(name);\n  draft.ageDistributionData = getAgeDistributionData(draft.scenarioData.data.population.ageDistributionName);\n  draft.caseCountsNameCustom = undefined;\n  draft.caseCountsData = getCaseCountsData(draft.scenarioData.data.population.caseCountsName);\n})).withHandling(immerCase(setScenarioData, (draft, data) => {\n  draft.scenarioData.name = maybeChangeTitle(draft);\n  draft.shouldRenameOnEdits = false;\n  draft.scenarioData.data = data;\n\n  if (draft.scenarioData.data.population.ageDistributionName !== CUSTOM_COUNTRY_NAME) {\n    draft.ageDistributionData = getAgeDistributionData(draft.scenarioData.data.population.ageDistributionName);\n  }\n\n  if (!draft.caseCountsNameCustom) {\n    draft.caseCountsData = getCaseCountsData(draft.scenarioData.data.population.caseCountsName);\n  }\n})).withHandling(immerCase(setAgeDistributionData, (draft, data) => {\n  draft.scenarioData.name = maybeChangeTitle(draft);\n  draft.shouldRenameOnEdits = false;\n  draft.ageDistributionData.data = data; // FIXME: these are duplicated\n\n  draft.ageDistributionData.name = CUSTOM_COUNTRY_NAME;\n  draft.scenarioData.data.population.ageDistributionName = CUSTOM_COUNTRY_NAME;\n})).withHandling(immerCase(setSeverityDistributionData, (draft, data) => {\n  draft.scenarioData.name = maybeChangeTitle(draft);\n  draft.shouldRenameOnEdits = false;\n  draft.severityDistributionData.data = data;\n  draft.severityDistributionData.name = CUSTOM_COUNTRY_NAME;\n})).withHandling(immerCase(setCaseCountsDataCustom, (draft, data) => {\n  draft.caseCountsData = data;\n  draft.caseCountsNameCustom = data.name;\n})).withHandling(immerCase(resetCaseCounts, draft => {\n  draft.caseCountsData = getCaseCountsData(draft.scenarioData.data.population.caseCountsName);\n  draft.caseCountsNameCustom = undefined;\n})).withHandling(immerCase(setScenarioState, (draft, {\n  scenarioData,\n  ageDistributionData,\n  severityDistributionData\n}) => {\n  draft.scenarioData = scenarioData;\n  draft.shouldRenameOnEdits = false;\n  draft.ageDistributionData = ageDistributionData;\n  draft.severityDistributionData = severityDistributionData;\n  draft.caseCountsData = getCaseCountsData(scenarioData.data.population.caseCountsName);\n  draft.caseCountsNameCustom = undefined;\n})).withHandling(immerCase(addMitigationInterval, draft => {\n  draft.scenarioData.data.mitigation.mitigationIntervals.push(suggestNextMitigationInterval());\n})).withHandling(immerCase(removeMitigationInterval, (draft, id) => {\n  // prettier-ignore\n  draft.scenarioData.data.mitigation.mitigationIntervals = draft.scenarioData.data.mitigation.mitigationIntervals.filter(interval => interval.id !== id);\n})).withHandling(immerCase(setCanRun, (draft, canRun) => {\n  draft.canRun = canRun;\n}));","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/state/scenario/scenario.reducer.ts"],"names":["reducerWithInitialState","suggestNextMitigationInterval","getCaseCountsData","immerCase","CUSTOM_COUNTRY_NAME","addMitigationInterval","removeMitigationInterval","renameCurrentScenario","resetCaseCounts","setAgeDistributionData","setCanRun","setCaseCountsDataCustom","setScenario","setScenarioData","setScenarioState","setSeverityDistributionData","getAgeDistributionData","getScenarioData","defaultScenarioState","maybeChangeTitle","state","name","scenarioData","shouldRenameOnEdits","scenarioReducer","withHandling","draft","ageDistributionData","data","population","ageDistributionName","caseCountsNameCustom","undefined","caseCountsData","caseCountsName","severityDistributionData","mitigation","mitigationIntervals","push","id","filter","interval","canRun"],"mappings":"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","sourcesContent":["import { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { suggestNextMitigationInterval } from '../../algorithms/utils/suggestNextMitigationInterval'\nimport { getCaseCountsData } from '../../io/defaults/getCaseCountsData'\n\nimport immerCase from '../util/fsaImmerReducer'\n\nimport { CUSTOM_COUNTRY_NAME } from '../../constants'\n\nimport {\n  addMitigationInterval,\n  removeMitigationInterval,\n  renameCurrentScenario,\n  resetCaseCounts,\n  setAgeDistributionData,\n  setCanRun,\n  setCaseCountsDataCustom,\n  setScenario,\n  setScenarioData,\n  setScenarioState,\n  setSeverityDistributionData,\n} from './scenario.actions'\n\nimport { getAgeDistributionData } from '../../io/defaults/getAgeDistributionData'\nimport { getScenarioData } from '../../io/defaults/getScenarioData'\n\nimport { ScenarioState, defaultScenarioState } from './scenario.state'\n\nexport function maybeChangeTitle(state: ScenarioState) {\n  let { name } = state.scenarioData\n  if (state.shouldRenameOnEdits) {\n    name = `${name} (edited)`\n  }\n  return name\n}\n\nexport const scenarioReducer = reducerWithInitialState(defaultScenarioState)\n  .withHandling(\n    immerCase(renameCurrentScenario, (draft, { name }) => {\n      draft.scenarioData.name = name\n      draft.shouldRenameOnEdits = false\n    }),\n  )\n\n  .withHandling(\n    immerCase(setScenario, (draft, { name }) => {\n      draft.scenarioData.name = name\n      draft.shouldRenameOnEdits = true\n      draft.scenarioData = getScenarioData(name)\n      draft.ageDistributionData = getAgeDistributionData(draft.scenarioData.data.population.ageDistributionName)\n      draft.caseCountsNameCustom = undefined\n      draft.caseCountsData = getCaseCountsData(draft.scenarioData.data.population.caseCountsName)\n    }),\n  )\n\n  .withHandling(\n    immerCase(setScenarioData, (draft, data) => {\n      draft.scenarioData.name = maybeChangeTitle(draft)\n      draft.shouldRenameOnEdits = false\n      draft.scenarioData.data = data\n      if (draft.scenarioData.data.population.ageDistributionName !== CUSTOM_COUNTRY_NAME) {\n        draft.ageDistributionData = getAgeDistributionData(draft.scenarioData.data.population.ageDistributionName)\n      }\n\n      if (!draft.caseCountsNameCustom) {\n        draft.caseCountsData = getCaseCountsData(draft.scenarioData.data.population.caseCountsName)\n      }\n    }),\n  )\n\n  .withHandling(\n    immerCase(setAgeDistributionData, (draft, data) => {\n      draft.scenarioData.name = maybeChangeTitle(draft)\n      draft.shouldRenameOnEdits = false\n      draft.ageDistributionData.data = data\n\n      // FIXME: these are duplicated\n      draft.ageDistributionData.name = CUSTOM_COUNTRY_NAME\n      draft.scenarioData.data.population.ageDistributionName = CUSTOM_COUNTRY_NAME\n    }),\n  )\n\n  .withHandling(\n    immerCase(setSeverityDistributionData, (draft, data) => {\n      draft.scenarioData.name = maybeChangeTitle(draft)\n      draft.shouldRenameOnEdits = false\n      draft.severityDistributionData.data = data\n      draft.severityDistributionData.name = CUSTOM_COUNTRY_NAME\n    }),\n  )\n\n  .withHandling(\n    immerCase(setCaseCountsDataCustom, (draft, data) => {\n      draft.caseCountsData = data\n      draft.caseCountsNameCustom = data.name\n    }),\n  )\n\n  .withHandling(\n    immerCase(resetCaseCounts, (draft) => {\n      draft.caseCountsData = getCaseCountsData(draft.scenarioData.data.population.caseCountsName)\n      draft.caseCountsNameCustom = undefined\n    }),\n  )\n\n  .withHandling(\n    immerCase(setScenarioState, (draft, { scenarioData, ageDistributionData, severityDistributionData }) => {\n      draft.scenarioData = scenarioData\n      draft.shouldRenameOnEdits = false\n      draft.ageDistributionData = ageDistributionData\n      draft.severityDistributionData = severityDistributionData\n      draft.caseCountsData = getCaseCountsData(scenarioData.data.population.caseCountsName)\n      draft.caseCountsNameCustom = undefined\n    }),\n  )\n\n  .withHandling(\n    immerCase(addMitigationInterval, (draft) => {\n      draft.scenarioData.data.mitigation.mitigationIntervals.push(suggestNextMitigationInterval())\n    }),\n  )\n\n  .withHandling(\n    immerCase(removeMitigationInterval, (draft, id) => {\n      // prettier-ignore\n      draft.scenarioData.data.mitigation.mitigationIntervals =\n        draft.scenarioData.data.mitigation.mitigationIntervals.filter((interval) => interval.id !== id)\n    }),\n  )\n\n  .withHandling(\n    immerCase(setCanRun, (draft, canRun) => {\n      draft.canRun = canRun\n    }),\n  )\n"]},"metadata":{},"sourceType":"module"}