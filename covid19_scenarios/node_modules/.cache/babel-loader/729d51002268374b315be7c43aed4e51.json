{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Scenario/ScenarioCardEpidemiological.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { CardWithControls } from '../../Form/CardWithControls';\nimport { FormDropdown } from '../../Form/FormDropdown';\nimport { FormRangeSpinBox } from '../../Form/FormRangeSpinBox';\nimport { FormSpinBox } from '../../Form/FormSpinBox';\nconst months = moment.months();\nconst monthOptions = months.map((month, i) => ({\n  value: i,\n  label: month\n}));\n\nfunction ScenarioCardEpidemiological({\n  errors,\n  touched\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(CardWithControls, {\n    className: \"card-epidemiology h-100\",\n    identifier: \"epidemiologicalScenario\",\n    labelComponent: /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"p-0 d-inline text-truncate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    }, t('Epidemiology')),\n    help: t('Epidemiological parameters specifing growth rate, seasonal variation, and duration of hospital stay.'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormRangeSpinBox, {\n    identifier: \"epidemiological.r0\",\n    label: `${t('Annual average')} R\\u2080`,\n    help: t('Average number of secondary infections per case. When R0 varies throughout the year (seasonal forcing), this value is the mean R0. You can specify a lower and upper plausible bound to explore the effect of uncertainty in this parameter. '),\n    step: 0.01,\n    min: 0.5,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormSpinBox, {\n    identifier: \"epidemiological.latencyDays\",\n    label: `${t('Latency')} [${t('days')}]`,\n    help: t('Time from infection to onset of symptoms (here onset of infectiousness)'),\n    step: 0.1,\n    min: 1,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormSpinBox, {\n    identifier: \"epidemiological.infectiousPeriodDays\",\n    label: `${t('Infectious period')} [${t('days')}]`,\n    help: t('Average number of days a person is infectious. Over this time, R0 infections happen on average. Together with the latency time, this defines the serial interval. The longer the serial interval, the slower the outbreak.'),\n    step: 0.1,\n    min: 1,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormSpinBox, {\n    identifier: \"epidemiological.seasonalForcing\",\n    label: t('Seasonal forcing'),\n    help: t('Amplitude of seasonal variation in transmission'),\n    step: 0.1,\n    min: 0,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormDropdown, {\n    identifier: \"epidemiological.peakMonth\",\n    label: t('Seasonal peak'),\n    help: t('Time of the year with peak transmission'),\n    options: monthOptions,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormSpinBox, {\n    identifier: \"epidemiological.hospitalStayDays\",\n    label: `${t('Hospital stay')} [${t('days')}]`,\n    help: t('Average number of days a severe case stays in regular hospital beds'),\n    step: 0.1,\n    min: 1,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormSpinBox, {\n    identifier: \"epidemiological.icuStayDays\",\n    label: `${t('ICU stay')} [${t('days')}]`,\n    help: t('Average number of days a critical case stays in the Intensive Care Unit (ICU)'),\n    step: 0.1,\n    min: 1,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormSpinBox, {\n    identifier: \"epidemiological.overflowSeverity\",\n    label: t('Severity of ICU overflow'),\n    help: t('A multiplicative factor to death rate to patients that require but do not have access to an Intensive Care Unit (ICU) bed relative to those who do.'),\n    step: 0.1,\n    min: 0,\n    errors: errors,\n    touched: touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ScenarioCardEpidemiological, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ScenarioCardEpidemiological;\nexport { ScenarioCardEpidemiological };\n\nvar _c;\n\n$RefreshReg$(_c, \"ScenarioCardEpidemiological\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Scenario/ScenarioCardEpidemiological.tsx"],"names":["React","useTranslation","moment","CardWithControls","FormDropdown","FormRangeSpinBox","FormSpinBox","months","monthOptions","map","month","i","value","label","ScenarioCardEpidemiological","errors","touched","t"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport moment from 'moment'\n\nimport { FormikErrors, FormikTouched, FormikValues } from 'formik'\n\nimport { CardWithControls } from '../../Form/CardWithControls'\nimport { FormDropdown } from '../../Form/FormDropdown'\nimport { FormRangeSpinBox } from '../../Form/FormRangeSpinBox'\nimport { FormSpinBox } from '../../Form/FormSpinBox'\n\nconst months = moment.months()\nconst monthOptions = months.map((month, i) => ({ value: i, label: month }))\n\nexport interface ScenarioCardEpidemiologicalProps {\n  errors?: FormikErrors<FormikValues>\n  touched?: FormikTouched<FormikValues>\n}\n\nfunction ScenarioCardEpidemiological({ errors, touched }: ScenarioCardEpidemiologicalProps) {\n  const { t } = useTranslation()\n\n  return (\n    <CardWithControls\n      className=\"card-epidemiology h-100\"\n      identifier=\"epidemiologicalScenario\"\n      labelComponent={<h3 className=\"p-0 d-inline text-truncate\">{t('Epidemiology')}</h3>}\n      help={t('Epidemiological parameters specifing growth rate, seasonal variation, and duration of hospital stay.')}\n    >\n      <FormRangeSpinBox\n        identifier=\"epidemiological.r0\"\n        label={`${t('Annual average')} R\\u2080`}\n        help={t(\n          'Average number of secondary infections per case. When R0 varies throughout the year (seasonal forcing), this value is the mean R0. You can specify a lower and upper plausible bound to explore the effect of uncertainty in this parameter. ',\n        )}\n        step={0.01}\n        min={0.5}\n        errors={errors}\n        touched={touched}\n      />\n      <FormSpinBox\n        identifier=\"epidemiological.latencyDays\"\n        label={`${t('Latency')} [${t('days')}]`}\n        help={t('Time from infection to onset of symptoms (here onset of infectiousness)')}\n        step={0.1}\n        min={1}\n        errors={errors}\n        touched={touched}\n      />\n      <FormSpinBox\n        identifier=\"epidemiological.infectiousPeriodDays\"\n        label={`${t('Infectious period')} [${t('days')}]`}\n        help={t(\n          'Average number of days a person is infectious. Over this time, R0 infections happen on average. Together with the latency time, this defines the serial interval. The longer the serial interval, the slower the outbreak.',\n        )}\n        step={0.1}\n        min={1}\n        errors={errors}\n        touched={touched}\n      />\n      <FormSpinBox\n        identifier=\"epidemiological.seasonalForcing\"\n        label={t('Seasonal forcing')}\n        help={t('Amplitude of seasonal variation in transmission')}\n        step={0.1}\n        min={0}\n        errors={errors}\n        touched={touched}\n      />\n      <FormDropdown<number>\n        identifier=\"epidemiological.peakMonth\"\n        label={t('Seasonal peak')}\n        help={t('Time of the year with peak transmission')}\n        options={monthOptions}\n        errors={errors}\n        touched={touched}\n      />\n      <FormSpinBox\n        identifier=\"epidemiological.hospitalStayDays\"\n        label={`${t('Hospital stay')} [${t('days')}]`}\n        help={t('Average number of days a severe case stays in regular hospital beds')}\n        step={0.1}\n        min={1}\n        errors={errors}\n        touched={touched}\n      />\n      <FormSpinBox\n        identifier=\"epidemiological.icuStayDays\"\n        label={`${t('ICU stay')} [${t('days')}]`}\n        help={t('Average number of days a critical case stays in the Intensive Care Unit (ICU)')}\n        step={0.1}\n        min={1}\n        errors={errors}\n        touched={touched}\n      />\n      <FormSpinBox\n        identifier=\"epidemiological.overflowSeverity\"\n        label={t('Severity of ICU overflow')}\n        help={t(\n          'A multiplicative factor to death rate to patients that require but do not have access to an Intensive Care Unit (ICU) bed relative to those who do.',\n        )}\n        step={0.1}\n        min={0}\n        errors={errors}\n        touched={touched}\n      />\n    </CardWithControls>\n  )\n}\n\nexport { ScenarioCardEpidemiological }\n"]},"metadata":{},"sourceType":"module"}