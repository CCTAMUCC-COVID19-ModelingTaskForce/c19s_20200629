{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/pages/ErrorPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Col, Row } from 'reactstrap';\nimport { Else, If, Then, When } from 'react-if';\nimport './ErrorPage.scss';\nimport { useTranslation } from 'react-i18next';\nconst development = process.env.NODE_ENV === 'development';\nexport default function ErrorPage({\n  error,\n  componentStack,\n  isDev = development\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const hasDevMessage = !!(isDev && error && error.message);\n  const hasDevStack = !!(isDev && componentStack);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h1-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, t('Error')), /*#__PURE__*/React.createElement(If, {\n    condition: isDev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Then, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-container-dev error-dev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(When, {\n    condition: hasDevMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"error-dev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, error && error.message)), /*#__PURE__*/React.createElement(When, {\n    condition: hasDevStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, componentStack && /*#__PURE__*/React.createElement(\"pre\", {\n    className: \"error-dev small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }\n  }, componentStack)))), /*#__PURE__*/React.createElement(Else, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"h3-error text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, t('Oops! Something went wrong')))))));\n}\n\n_s(ErrorPage, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ErrorPage;\nErrorPage.propTypes = {\n  error: _pt.instanceOf(Error),\n  componentStack: _pt.string,\n  isDev: _pt.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/pages/ErrorPage.tsx"],"names":["React","Container","Col","Row","Else","If","Then","When","useTranslation","development","process","env","NODE_ENV","ErrorPage","error","componentStack","isDev","t","hasDevMessage","message","hasDevStack"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AAEA,SAASC,IAAT,EAAeC,EAAf,EAAmBC,IAAnB,EAAyBC,IAAzB,QAAqC,UAArC;AAEA,OAAO,kBAAP;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAQA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7C;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,cAAT;AAAyBC,EAAAA,KAAK,GAAGP;AAAjC,CAAnB,EAA+E;AAAA;;AAC5F,QAAM;AAAEQ,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,aAAa,GAAG,CAAC,EAAEF,KAAK,IAAIF,KAAT,IAAkBA,KAAK,CAACK,OAA1B,CAAvB;AACA,QAAMC,WAAW,GAAG,CAAC,EAAEJ,KAAK,IAAID,cAAX,CAArB;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BE,CAAC,CAAC,OAAD,CAA3B,CADF,eAGE,oBAAC,EAAD;AAAI,IAAA,SAAS,EAAED,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,KAAK,IAAIA,KAAK,CAACK,OAA1C,CADF,CADF,eAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,cAAc,iBAAI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,cAAlC,CADrB,CALF,CADF,CADF,eAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCE,CAAC,CAAC,4BAAD,CAAvC,CADF,CAZF,CAHF,CADF,CADF,CADF;AA0BD;;GA/BuBJ,S;UACRL,c;;;KADQK,S;;AAPtBC,EAAAA,K;AACAC,EAAAA,c;AACAC,EAAAA,K","sourcesContent":["import React from 'react'\nimport { Container, Col, Row } from 'reactstrap'\n\nimport { Else, If, Then, When } from 'react-if'\n\nimport './ErrorPage.scss'\n\nimport { useTranslation } from 'react-i18next'\n\ninterface ErrorProps {\n  error?: Error\n  componentStack?: string\n  isDev?: boolean\n}\n\nconst development = process.env.NODE_ENV === 'development'\n\nexport default function ErrorPage({ error, componentStack, isDev = development }: ErrorProps) {\n  const { t } = useTranslation()\n  const hasDevMessage = !!(isDev && error && error.message)\n  const hasDevStack = !!(isDev && componentStack)\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"h1-error\">{t('Error')}</h1>\n\n          <If condition={isDev}>\n            <Then>\n              <div className=\"error-container-dev error-dev\">\n                <When condition={hasDevMessage}>\n                  <h3 className=\"error-dev\">{error && error.message}</h3>\n                </When>\n\n                <When condition={hasDevStack}>\n                  {componentStack && <pre className=\"error-dev small\">{componentStack}</pre>}\n                </When>\n              </div>\n            </Then>\n            <Else>\n              <h3 className=\"h3-error text-center\">{t('Oops! Something went wrong')}</h3>\n            </Else>\n          </If>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}