{"ast":null,"code":"import _pt from \"prop-types\";\nimport _isNil from \"lodash/isNil\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/ResponsiveTooltipContent.tsx\";\nimport React from 'react';\nimport './ResponsiveTooltipContent.scss';\n\nfunction TooltipContentItem({\n  name,\n  value,\n  lower,\n  upper,\n  color\n}) {\n  if (!_isNil(lower) && !_isNil(upper)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color\n      },\n      className: \"responsive-tooltip-content-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, name, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"responsive-tooltip-content-placeholder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"(\", lower, \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, value), \", \", upper, \")\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color\n    },\n    className: \"responsive-tooltip-content-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, name, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"responsive-tooltip-content-placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), value);\n}\n\n_c = TooltipContentItem;\nTooltipContentItem.propTypes = {\n  name: _pt.string.isRequired,\n  value: _pt.oneOfType([_pt.string, _pt.number, _pt.node]).isRequired,\n  color: _pt.string.isRequired,\n  lower: _pt.node,\n  upper: _pt.node\n};\nexport function ResponsiveTooltipContent({\n  formattedLabel,\n  tooltipItems\n}) {\n  const left = tooltipItems.slice(0, Math.ceil(tooltipItems.length / 2));\n  const right = tooltipItems.slice(Math.ceil(tooltipItems.length / 2));\n\n  const tooltip = item => /*#__PURE__*/React.createElement(TooltipContentItem, {\n    key: item.key,\n    name: item.name,\n    value: item.value,\n    lower: item.lower,\n    upper: item.upper,\n    color: item.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"responsive-tooltip-content-base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, formattedLabel), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, '(20%', \", \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, '50%'), \", \", '80%)', ' ')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"responsive-tooltip-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, left.map(item => tooltip(item))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, right.map(item => tooltip(item)))));\n}\n_c2 = ResponsiveTooltipContent;\nResponsiveTooltipContent.propTypes = {\n  formattedLabel: _pt.node.isRequired,\n  tooltipItems: _pt.arrayOf(_pt.shape({\n    value: _pt.node.isRequired,\n    lower: _pt.node,\n    upper: _pt.node\n  })).isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TooltipContentItem\");\n$RefreshReg$(_c2, \"ResponsiveTooltipContent\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/ResponsiveTooltipContent.tsx"],"names":["React","TooltipContentItem","name","value","lower","upper","color","ResponsiveTooltipContent","formattedLabel","tooltipItems","left","slice","Math","ceil","length","right","tooltip","item","key","display","justifyContent","map"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react'\n\nimport { isNil } from 'lodash'\nimport { TooltipProps } from 'recharts'\n\nimport { LineProps } from './ChartCommon'\n\nimport './ResponsiveTooltipContent.scss'\n\nexport interface TooltipItem extends LineProps {\n  value: React.ReactNode\n  lower?: ReactNode\n  upper?: ReactNode\n}\n\ninterface TooltipContentItemProps {\n  name: string\n  value: string | number | ReactNode\n  color: string\n  lower?: ReactNode\n  upper?: ReactNode\n}\n\nfunction TooltipContentItem({ name, value, lower, upper, color }: TooltipContentItemProps) {\n  if (!isNil(lower) && !isNil(upper)) {\n    return (\n      <div style={{ color }} className=\"responsive-tooltip-content-item\">\n        {name}\n        <div className=\"responsive-tooltip-content-placeholder\" />\n        <div>\n          ({lower}, <b>{value}</b>, {upper})\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div style={{ color }} className=\"responsive-tooltip-content-item\">\n      {name}\n      <div className=\"responsive-tooltip-content-placeholder\" />\n      {value}\n    </div>\n  )\n}\nexport interface ResponsiveTooltipContentProps extends TooltipProps {\n  formattedLabel: React.ReactNode\n  tooltipItems: TooltipItem[]\n}\n\nexport function ResponsiveTooltipContent({ formattedLabel, tooltipItems }: ResponsiveTooltipContentProps) {\n  const left = tooltipItems.slice(0, Math.ceil(tooltipItems.length / 2))\n  const right = tooltipItems.slice(Math.ceil(tooltipItems.length / 2))\n  const tooltip = (item: TooltipItem) => (\n    <TooltipContentItem\n      key={item.key}\n      name={item.name}\n      value={item.value}\n      lower={item.lower}\n      upper={item.upper}\n      color={item.color}\n    />\n  )\n  return (\n    <div className=\"responsive-tooltip-content-base\">\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        <strong>{formattedLabel}</strong>\n        <div>\n          {'(20%'}, <b>{'50%'}</b>, {'80%)'}{' '}\n        </div>\n      </div>\n      <div className=\"responsive-tooltip-content\">\n        <div>{left.map((item) => tooltip(item))}</div>\n        <div>{right.map((item) => tooltip(item))}</div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}