{"ast":null,"code":"import _pt from \"prop-types\";\n\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Layout/LanguageSwitcher.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { localesArray } from '../../i18n/i18n';\nimport { selectLocale } from '../../state/settings/settings.selectors';\nimport { setLocale } from '../../state/settings/settings.actions';\nimport './LanguageSwitcher.scss';\n\nconst mapStateToProps = state => ({\n  currentLocale: selectLocale(state)\n});\n\nconst mapDispatchToProps = {\n  setLocale\n};\nexport const LanguageSwitcher = connect(mapStateToProps, mapDispatchToProps)(LanguageSwitcherDisconnected);\nexport function LanguageSwitcherDisconnected({\n  currentLocale,\n  setLocale,\n  ...restProps\n}) {\n  _s();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const setLocaleLocal = key => () => setLocale(key);\n\n  return /*#__PURE__*/React.createElement(Dropdown, Object.assign({\n    className: \"language-switcher\",\n    isOpen: dropdownOpen,\n    toggle: toggle\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DropdownToggle, {\n    nav: true,\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LanguageSwitcherItem, {\n    locale: currentLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"language-switcher-menu\",\n    positionFixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, localesArray.map(locale => {\n    const isCurrent = locale.key === currentLocale.key;\n    return /*#__PURE__*/React.createElement(DropdownItem, {\n      active: isCurrent,\n      key: locale.key,\n      onClick: setLocaleLocal(locale.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LanguageSwitcherItem, {\n      locale: locale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }));\n  })));\n}\n\n_s(LanguageSwitcherDisconnected, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n_c = LanguageSwitcherDisconnected;\nexport function LanguageSwitcherItem({\n  locale\n}) {\n  const {\n    Flag,\n    name\n  } = locale;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flag, {\n    className: \"language-switcher-flag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, name));\n}\n_c2 = LanguageSwitcherItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LanguageSwitcherDisconnected\");\n$RefreshReg$(_c2, \"LanguageSwitcherItem\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Layout/LanguageSwitcher.tsx"],"names":["React","useState","connect","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","localesArray","selectLocale","setLocale","mapStateToProps","state","currentLocale","mapDispatchToProps","LanguageSwitcher","LanguageSwitcherDisconnected","restProps","dropdownOpen","setDropdownOpen","toggle","prevState","setLocaleLocal","key","map","locale","isCurrent","LanguageSwitcherItem","Flag","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAoF,YAApF;AAGA,SAAwBC,YAAxB,QAAuD,iBAAvD;AAGA,SAASC,YAAT,QAA6B,yCAA7B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AAEA,OAAO,yBAAP;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,aAAa,EAAEJ,YAAY,CAACG,KAAD;AADc,CAAnB,CAAxB;;AAIA,MAAME,kBAAkB,GAAG;AACzBJ,EAAAA;AADyB,CAA3B;AAIA,OAAO,MAAMK,gBAAgB,GAAGZ,OAAO,CAACQ,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CE,4BAA7C,CAAzB;AAEP,OAAO,SAASA,4BAAT,CAAsC;AAAEH,EAAAA,aAAF;AAAiBH,EAAAA,SAAjB;AAA4B,KAAGO;AAA/B,CAAtC,EAAyG;AAAA;;AAC9G,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMkB,MAAM,GAAG,MAAMD,eAAe,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAApC;;AACA,QAAMC,cAAc,GAAIC,GAAD,IAAoB,MAAMb,SAAS,CAACa,GAAD,CAA1D;;AAEA,sBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,mBAApB;AAAwC,IAAA,MAAM,EAAEL,YAAhD;AAA8D,IAAA,MAAM,EAAEE;AAAtE,KAAkFH,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,cAAD;AAAgB,IAAA,GAAG,MAAnB;AAAoB,IAAA,KAAK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAsB,IAAA,MAAM,EAAEJ,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,wBAAxB;AAAiD,IAAA,aAAa,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,YAAY,CAACgB,GAAb,CAAkBC,MAAD,IAAY;AAC5B,UAAMC,SAAS,GAAGD,MAAM,CAACF,GAAP,KAAeV,aAAa,CAACU,GAA/C;AACA,wBACE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEG,SAAtB;AAAiC,MAAA,GAAG,EAAED,MAAM,CAACF,GAA7C;AAAkD,MAAA,OAAO,EAAED,cAAc,CAACG,MAAM,CAACF,GAAR,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,oBAAD;AAAsB,MAAA,MAAM,EAAEE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAPA,CADH,CAJF,CADF;AAiBD;;GAtBeT,4B;;KAAAA,4B;AAwBhB,OAAO,SAASW,oBAAT,CAA8B;AAAEF,EAAAA;AAAF,CAA9B,EAAqE;AAC1E,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBJ,MAAvB;AACA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBI,IAAxB,CAFF,CADF;AAMD;MAReF,oB","sourcesContent":["import React, { useState } from 'react'\n\nimport { connect } from 'react-redux'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, DropdownProps } from 'reactstrap'\nimport { ActionCreator } from 'typescript-fsa'\n\nimport { LocaleWithKey, localesArray, LocaleKey } from '../../i18n/i18n'\n\nimport type { State } from '../../state/reducer'\nimport { selectLocale } from '../../state/settings/settings.selectors'\nimport { setLocale } from '../../state/settings/settings.actions'\n\nimport './LanguageSwitcher.scss'\n\nexport interface LanguageSwitcherProps extends DropdownProps {\n  currentLocale: LocaleWithKey\n  setLocale: ActionCreator<LocaleKey>\n}\n\nconst mapStateToProps = (state: State) => ({\n  currentLocale: selectLocale(state),\n})\n\nconst mapDispatchToProps = {\n  setLocale,\n}\n\nexport const LanguageSwitcher = connect(mapStateToProps, mapDispatchToProps)(LanguageSwitcherDisconnected)\n\nexport function LanguageSwitcherDisconnected({ currentLocale, setLocale, ...restProps }: LanguageSwitcherProps) {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const toggle = () => setDropdownOpen((prevState) => !prevState)\n  const setLocaleLocal = (key: LocaleKey) => () => setLocale(key)\n\n  return (\n    <Dropdown className=\"language-switcher\" isOpen={dropdownOpen} toggle={toggle} {...restProps}>\n      <DropdownToggle nav caret>\n        <LanguageSwitcherItem locale={currentLocale} />\n      </DropdownToggle>\n      <DropdownMenu className=\"language-switcher-menu\" positionFixed>\n        {localesArray.map((locale) => {\n          const isCurrent = locale.key === currentLocale.key\n          return (\n            <DropdownItem active={isCurrent} key={locale.key} onClick={setLocaleLocal(locale.key)}>\n              <LanguageSwitcherItem locale={locale} />\n            </DropdownItem>\n          )\n        })}\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport function LanguageSwitcherItem({ locale }: { locale: LocaleWithKey }) {\n  const { Flag, name } = locale\n  return (\n    <>\n      <Flag className=\"language-switcher-flag\" />\n      <span className=\"pl-2\">{name}</span>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}