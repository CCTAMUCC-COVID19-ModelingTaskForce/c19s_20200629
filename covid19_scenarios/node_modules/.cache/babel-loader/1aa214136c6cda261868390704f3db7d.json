{"ast":null,"code":"import { all, call, put } from 'redux-saga/effects';\nimport { errorAdd } from './error/error.actions';\nimport algorithmSagas from './algorithm/algorithm.sagas';\nimport scenarioSagas from './scenario/scenario.sagas';\nimport settingsSagas from './settings/settings.sagas';\nimport uiSagas from './ui/ui.sagas';\n\nfunction autoRestart(generator, handleError) {\n  return Object.defineProperty(function* autoRestarting() {\n    while (true) {\n      try {\n        yield Object.defineProperty(call(generator), \"@@redux-saga/LOCATION\", {\n          value: {\n            fileName: \"src/state/sagas.ts\",\n            lineNumber: 15,\n            code: \"call(generator)\"\n          }\n        });\n        break;\n      } catch (error) {\n        yield Object.defineProperty(handleError(error), \"@@redux-saga/LOCATION\", {\n          value: {\n            fileName: \"src/state/sagas.ts\",\n            lineNumber: 18,\n            code: \"handleError(error)\"\n          }\n        });\n      }\n    }\n  }, \"@@redux-saga/LOCATION\", {\n    value: {\n      fileName: \"src/state/sagas.ts\",\n      lineNumber: 12,\n      code: \"function* autoRestarting() {\\n    while (true) {\\n      try {\\n        yield call(generator)\\n        break\\n      } catch (error) {\\n        yield handleError(error)\\n      }\\n    }\\n  }\"\n    }\n  });\n}\n\nfunction* rootSaga() {\n  yield Object.defineProperty(all([...algorithmSagas, ...scenarioSagas, ...settingsSagas, ...uiSagas]), \"@@redux-saga/LOCATION\", {\n    value: {\n      fileName: \"src/state/sagas.ts\",\n      lineNumber: 25,\n      code: \"all([...algorithmSagas, ...scenarioSagas, ...settingsSagas, ...uiSagas])\"\n    }\n  });\n}\n\nObject.defineProperty(rootSaga, \"@@redux-saga/LOCATION\", {\n  value: {\n    fileName: \"src/state/sagas.ts\",\n    lineNumber: 24,\n    code: null\n  }\n})\n\nfunction* rootErrorHandler(error) {\n  console.error(error.message);\n  yield Object.defineProperty(put(errorAdd({\n    error\n  })), \"@@redux-saga/LOCATION\", {\n    value: {\n      fileName: \"src/state/sagas.ts\",\n      lineNumber: 30,\n      code: \"put(errorAdd({ error }))\"\n    }\n  });\n}\n\nObject.defineProperty(rootErrorHandler, \"@@redux-saga/LOCATION\", {\n  value: {\n    fileName: \"src/state/sagas.ts\",\n    lineNumber: 28,\n    code: null\n  }\n})\nexport default function createRootSaga() {\n  return autoRestart(rootSaga, rootErrorHandler);\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/state/sagas.ts"],"names":["all","call","put","errorAdd","algorithmSagas","scenarioSagas","settingsSagas","uiSagas","autoRestart","generator","handleError","autoRestarting","error","rootSaga","rootErrorHandler","console","message","createRootSaga"],"mappings":"AACA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,oBAA/B;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,SAASC,WAAT,CAAqBC,SAArB,EAAsCC,WAAtC,EAAkE;AAChE,+BAAO,UAAUC,cAAV,GAA2B;AAChC,WAAO,IAAP,EAAa;AACX,UAAI;AACF,oCAAMV,IAAI,CAACQ,SAAD,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACd,oCAAMF,WAAW,CAACE,KAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;AACF;AACF,GATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUD;;AAED,UAAUC,QAAV,GAAqB;AACnB,8BAAMb,GAAG,CAAC,CAAC,GAAGI,cAAJ,EAAoB,GAAGC,aAAvB,EAAsC,GAAGC,aAAzC,EAAwD,GAAGC,OAA3D,CAAD,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;;;;;;;;;AAED,UAAUO,gBAAV,CAA2BF,KAA3B,EAAyC;AACvCG,EAAAA,OAAO,CAACH,KAAR,CAAcA,KAAK,CAACI,OAApB;AACA,8BAAMd,GAAG,CAACC,QAAQ,CAAC;AAAES,IAAAA;AAAF,GAAD,CAAT,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;;;;;;;;AAED,eAAe,SAASK,cAAT,GAA0B;AACvC,SAAOT,WAAW,CAACK,QAAD,EAAWC,gBAAX,CAAlB;AACD","sourcesContent":["import { Saga } from 'redux-saga'\nimport { all, call, put } from 'redux-saga/effects'\n\nimport { errorAdd } from './error/error.actions'\n\nimport algorithmSagas from './algorithm/algorithm.sagas'\nimport scenarioSagas from './scenario/scenario.sagas'\nimport settingsSagas from './settings/settings.sagas'\nimport uiSagas from './ui/ui.sagas'\n\nfunction autoRestart(generator: Saga, handleError: Saga<[Error]>) {\n  return function* autoRestarting() {\n    while (true) {\n      try {\n        yield call(generator)\n        break\n      } catch (error) {\n        yield handleError(error)\n      }\n    }\n  }\n}\n\nfunction* rootSaga() {\n  yield all([...algorithmSagas, ...scenarioSagas, ...settingsSagas, ...uiSagas])\n}\n\nfunction* rootErrorHandler(error: Error) {\n  console.error(error.message)\n  yield put(errorAdd({ error }))\n}\n\nexport default function createRootSaga() {\n  return autoRestart(rootSaga, rootErrorHandler)\n}\n"]},"metadata":{},"sourceType":"module"}