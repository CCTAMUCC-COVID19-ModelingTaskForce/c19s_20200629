{"ast":null,"code":"import _pt from \"prop-types\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/R0LinePlot.tsx\";\nimport React from 'react';\nimport { CartesianGrid, XAxis, YAxis, Line, Area, Tooltip, ComposedChart } from 'recharts';\nimport { R0PlotTooltip } from './LinePlotTooltip';\nexport function R0Plot({\n  R0Trajectory,\n  width,\n  height,\n  tMin,\n  tMax,\n  labelFormatter,\n  tooltipPosition,\n  tooltipValueFormatter\n}) {\n  const plotData = R0Trajectory.mean.map((d, i) => {\n    return {\n      time: d.t,\n      one: 1.0,\n      median: d.y,\n      range: [R0Trajectory.lower[i].y, R0Trajectory.upper[i].y]\n    };\n  });\n  const R0Color = '#883322';\n  const dataMax = Math.ceil(Math.max(...plotData.map(d => d.range[1])));\n  let tooltipItems = {};\n  plotData.forEach(d => {\n    tooltipItems = { ...tooltipItems,\n      ...d\n    };\n  });\n  const tooltipItemToDisplay = ['median'];\n  return /*#__PURE__*/React.createElement(ComposedChart, {\n    width: width,\n    height: height,\n    data: plotData,\n    margin: {\n      left: 5,\n      right: 5,\n      top: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    allowDataOverflow: true,\n    dataKey: \"time\",\n    type: \"number\",\n    domain: [tMin, tMax],\n    tickFormatter: () => '',\n    tickCount: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    yAxisId: \"R0Axis\",\n    allowDataOverflow: true,\n    orientation: 'left',\n    type: \"number\",\n    label: {\n      value: 'Rt',\n      angle: -90,\n      dx: -12,\n      fill: '#495057'\n    },\n    domain: [0, dataMax],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    labelFormatter: labelFormatter,\n    position: tooltipPosition,\n    content: props => /*#__PURE__*/React.createElement(R0PlotTooltip, Object.assign({\n      valueFormatter: tooltipValueFormatter,\n      itemsToDisplay: tooltipItemToDisplay\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    key: 'median',\n    dot: false,\n    isAnimationActive: false,\n    type: \"monotone\",\n    strokeWidth: 3,\n    dataKey: 'median',\n    stroke: R0Color,\n    name: 'Average R0',\n    yAxisId: \"R0Axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    key: 'one',\n    dot: false,\n    isAnimationActive: false,\n    type: \"monotone\",\n    strokeWidth: 3,\n    dataKey: 'one',\n    stroke: '#ccc',\n    yAxisId: \"R0Axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    key: 'range',\n    type: \"monotone\",\n    fillOpacity: 0.075,\n    dataKey: 'range',\n    isAnimationActive: false,\n    name: 'R0 range',\n    stroke: R0Color,\n    strokeWidth: 0,\n    fill: R0Color,\n    yAxisId: \"R0Axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n}\n_c = R0Plot;\nR0Plot.propTypes = {\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  tMin: _pt.number.isRequired,\n  tMax: _pt.number.isRequired,\n  tooltipValueFormatter: _pt.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"R0Plot\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/R0LinePlot.tsx"],"names":["React","CartesianGrid","XAxis","YAxis","Line","Area","Tooltip","ComposedChart","R0PlotTooltip","R0Plot","R0Trajectory","width","height","tMin","tMax","labelFormatter","tooltipPosition","tooltipValueFormatter","plotData","mean","map","d","i","time","t","one","median","y","range","lower","upper","R0Color","dataMax","Math","ceil","max","tooltipItems","forEach","tooltipItemToDisplay","left","right","top","value","angle","dx","fill","props"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Line,\n  Area,\n  Tooltip,\n  TooltipProps,\n  LabelFormatter,\n  Coordinate,\n  ComposedChart,\n} from 'recharts'\nimport { TimeSeriesWithRange } from '../../../algorithms/types/Result.types'\n\nimport { R0PlotTooltip } from './LinePlotTooltip'\n\nexport interface R0PlotProps {\n  R0Trajectory: TimeSeriesWithRange\n  width: number\n  height: number\n  tMin: number\n  tMax: number\n  labelFormatter: LabelFormatter\n  tooltipPosition?: Coordinate\n  tooltipValueFormatter: (value: number | string) => string\n}\n\nexport function R0Plot({\n  R0Trajectory,\n  width,\n  height,\n  tMin,\n  tMax,\n  labelFormatter,\n  tooltipPosition,\n  tooltipValueFormatter,\n}: R0PlotProps) {\n  const plotData = R0Trajectory.mean.map((d, i) => {\n    return {\n      time: d.t,\n      one: 1.0,\n      median: d.y,\n      range: [R0Trajectory.lower[i].y, R0Trajectory.upper[i].y],\n    }\n  })\n  const R0Color = '#883322'\n  const dataMax = Math.ceil(Math.max(...plotData.map((d) => d.range[1])))\n\n  let tooltipItems: { [key: string]: number | number[] | undefined } = {}\n  plotData.forEach((d) => {\n    tooltipItems = { ...tooltipItems, ...d }\n  })\n\n  const tooltipItemToDisplay = ['median']\n\n  return (\n    <ComposedChart\n      width={width}\n      height={height}\n      data={plotData}\n      margin={{\n        left: 5,\n        right: 5,\n        top: 0,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis\n        allowDataOverflow\n        dataKey=\"time\"\n        type=\"number\"\n        domain={[tMin, tMax]}\n        tickFormatter={() => ''}\n        tickCount={7}\n      />\n      <YAxis\n        yAxisId=\"R0Axis\"\n        allowDataOverflow\n        orientation={'left'}\n        type=\"number\"\n        label={{ value: 'Rt', angle: -90, dx: -12, fill: '#495057' }}\n        domain={[0, dataMax]}\n      />\n      <Tooltip\n        labelFormatter={labelFormatter}\n        position={tooltipPosition}\n        content={(props: TooltipProps) => (\n          <R0PlotTooltip valueFormatter={tooltipValueFormatter} itemsToDisplay={tooltipItemToDisplay} {...props} />\n        )}\n      />\n      <Line\n        key={'median'}\n        dot={false}\n        isAnimationActive={false}\n        type=\"monotone\"\n        strokeWidth={3}\n        dataKey={'median'}\n        stroke={R0Color}\n        name={'Average R0'}\n        yAxisId=\"R0Axis\"\n      />\n      <Line\n        key={'one'}\n        dot={false}\n        isAnimationActive={false}\n        type=\"monotone\"\n        strokeWidth={3}\n        dataKey={'one'}\n        stroke={'#ccc'}\n        yAxisId=\"R0Axis\"\n      />\n      <Area\n        key={'range'}\n        type=\"monotone\"\n        fillOpacity={0.075}\n        dataKey={'range'}\n        isAnimationActive={false}\n        name={'R0 range'}\n        stroke={R0Color}\n        strokeWidth={0}\n        fill={R0Color}\n        yAxisId=\"R0Axis\"\n      />\n    </ComposedChart>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}