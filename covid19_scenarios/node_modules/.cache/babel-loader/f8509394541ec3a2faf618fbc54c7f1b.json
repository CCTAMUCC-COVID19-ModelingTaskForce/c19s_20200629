{"ast":null,"code":"export function getVersionString() {\n  var _process$env$ENV_NAME, _process$env$PACKAGE_, _process$env$REVISION, _process$env$BUILD_NU;\n\n  const ENV_NAME = (_process$env$ENV_NAME = process.env.ENV_NAME) !== null && _process$env$ENV_NAME !== void 0 ? _process$env$ENV_NAME : '';\n  const PACKAGE_VERSION = (_process$env$PACKAGE_ = process.env.PACKAGE_VERSION) !== null && _process$env$PACKAGE_ !== void 0 ? _process$env$PACKAGE_ : '';\n  const REVISION = (_process$env$REVISION = process.env.REVISION) !== null && _process$env$REVISION !== void 0 ? _process$env$REVISION : '';\n  const BUILD_NUMBER = (_process$env$BUILD_NU = process.env.BUILD_NUMBER) !== null && _process$env$BUILD_NU !== void 0 ? _process$env$BUILD_NU : '';\n  let version = PACKAGE_VERSION;\n  let meta = [];\n\n  if (REVISION && REVISION.length >= 7) {\n    meta = [...meta, `rev: ${REVISION.slice(0, 7)}`];\n  }\n\n  if (BUILD_NUMBER) {\n    meta = [...meta, `build: ${BUILD_NUMBER}`];\n  }\n\n  if (ENV_NAME && !ENV_NAME.startsWith('prod')) {\n    meta = [...meta, `env: ${ENV_NAME}`];\n  }\n\n  const metaStr = meta.join(', ');\n\n  if (metaStr.length > 0) {\n    version = `version ${version} (${metaStr})`;\n  }\n\n  return version;\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/helpers/getVersionString.ts"],"names":["getVersionString","ENV_NAME","process","env","PACKAGE_VERSION","REVISION","BUILD_NUMBER","version","meta","length","slice","startsWith","metaStr","join"],"mappings":"AAAA,OAAO,SAASA,gBAAT,GAA4B;AAAA;;AACjC,QAAMC,QAAQ,4BAAGC,OAAO,CAACC,GAAR,CAAYF,QAAf,yEAA2B,EAAzC;AACA,QAAMG,eAAe,4BAAGF,OAAO,CAACC,GAAR,CAAYC,eAAf,yEAAkC,EAAvD;AACA,QAAMC,QAAQ,4BAAGH,OAAO,CAACC,GAAR,CAAYE,QAAf,yEAA2B,EAAzC;AACA,QAAMC,YAAY,4BAAGJ,OAAO,CAACC,GAAR,CAAYG,YAAf,yEAA+B,EAAjD;AAEA,MAAIC,OAAO,GAAGH,eAAd;AACA,MAAII,IAAc,GAAG,EAArB;;AACA,MAAIH,QAAQ,IAAIA,QAAQ,CAACI,MAAT,IAAmB,CAAnC,EAAsC;AACpCD,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAW,QAAOH,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAqB,EAAvC,CAAP;AACD;;AAED,MAAIJ,YAAJ,EAAkB;AAChBE,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAW,UAASF,YAAa,EAAjC,CAAP;AACD;;AAED,MAAIL,QAAQ,IAAI,CAACA,QAAQ,CAACU,UAAT,CAAoB,MAApB,CAAjB,EAA8C;AAC5CH,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAW,QAAOP,QAAS,EAA3B,CAAP;AACD;;AAED,QAAMW,OAAO,GAAGJ,IAAI,CAACK,IAAL,CAAU,IAAV,CAAhB;;AACA,MAAID,OAAO,CAACH,MAAR,GAAiB,CAArB,EAAwB;AACtBF,IAAAA,OAAO,GAAI,WAAUA,OAAQ,KAAIK,OAAQ,GAAzC;AACD;;AAED,SAAOL,OAAP;AACD","sourcesContent":["export function getVersionString() {\n  const ENV_NAME = process.env.ENV_NAME ?? ''\n  const PACKAGE_VERSION = process.env.PACKAGE_VERSION ?? ''\n  const REVISION = process.env.REVISION ?? ''\n  const BUILD_NUMBER = process.env.BUILD_NUMBER ?? ''\n\n  let version = PACKAGE_VERSION\n  let meta: string[] = []\n  if (REVISION && REVISION.length >= 7) {\n    meta = [...meta, `rev: ${REVISION.slice(0, 7)}`]\n  }\n\n  if (BUILD_NUMBER) {\n    meta = [...meta, `build: ${BUILD_NUMBER}`]\n  }\n\n  if (ENV_NAME && !ENV_NAME.startsWith('prod')) {\n    meta = [...meta, `env: ${ENV_NAME}`]\n  }\n\n  const metaStr = meta.join(', ')\n  if (metaStr.length > 0) {\n    version = `version ${version} (${metaStr})`\n  }\n\n  return version\n}\n"]},"metadata":{},"sourceType":"module"}