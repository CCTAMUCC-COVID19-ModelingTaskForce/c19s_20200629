{"ast":null,"code":"\"use strict\";\n\nvar formats = require(\"ajv/lib/compile/formats\")();\n\nvar ucs2length = require(\"ajv/lib/compile/ucs2length\");\n\nvar equal = require(\"ajv/lib/compile/equal\");\n\nvar validate = function () {\n  var refVal = [];\n  var refVal1 = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"_SchemaVer\",\n    title: \"_SchemaVer\",\n    type: \"string\",\n    const: \"2.0.0\"\n  };\n  refVal[1] = refVal1;\n\n  var refVal2 = function () {\n    var refVal = [];\n\n    var refVal1 = function () {\n      var refVal = [];\n\n      var refVal1 = function () {\n        var refVal = [];\n        var refVal1 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"IntegerNonNegative\",\n          title: \"IntegerNonNegative\",\n          type: \"integer\",\n          multipleOf: 1,\n          minimum: 0\n        };\n        refVal[1] = refVal1;\n        return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n          \"use strict\";\n\n          var vErrors = null;\n          var errors = 0;\n\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n\n            for (var key0 in data) {\n              var isAdditional0 = !(false || key0 == \"populationServed\" || key0 == \"ageDistributionName\" || key0 == \"caseCountsName\" || key0 == \"initialNumberOfCases\" || key0 == \"importsPerDay\" || key0 == \"hospitalBeds\" || key0 == \"icuBeds\");\n\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\"\n                  },\n                  message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            }\n\n            var data1 = data.populationServed;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"populationServed\"\n                },\n                message: \"should have required property 'populationServed'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/populationServed\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\"\n                  },\n                  message: \"should be integer\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/populationServed\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var division2;\n\n                if (division2 = data1 / 1, division2 !== parseInt(division2)) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/populationServed\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1\n                    },\n                    message: \"should be multiple of 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.ageDistributionName;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"ageDistributionName\"\n                },\n                message: \"should have required property 'ageDistributionName'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"string\") {\n                if (ucs2length(data1) < 1) {\n                  var err = {\n                    keyword: \"minLength\",\n                    dataPath: (dataPath || \"\") + \"/ageDistributionName\",\n                    schemaPath: \"#/properties/ageDistributionName/minLength\",\n                    params: {\n                      limit: 1\n                    },\n                    message: \"should NOT be shorter than 1 characters\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/ageDistributionName\",\n                  schemaPath: \"#/properties/ageDistributionName/type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"should be string\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.caseCountsName;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"caseCountsName\"\n                },\n                message: \"should have required property 'caseCountsName'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"string\") {\n                if (ucs2length(data1) < 1) {\n                  var err = {\n                    keyword: \"minLength\",\n                    dataPath: (dataPath || \"\") + \"/caseCountsName\",\n                    schemaPath: \"#/properties/caseCountsName/minLength\",\n                    params: {\n                      limit: 1\n                    },\n                    message: \"should NOT be shorter than 1 characters\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/caseCountsName\",\n                  schemaPath: \"#/properties/caseCountsName/type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"should be string\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.initialNumberOfCases;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"initialNumberOfCases\"\n                },\n                message: \"should have required property 'initialNumberOfCases'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/initialNumberOfCases\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\"\n                  },\n                  message: \"should be integer\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/initialNumberOfCases\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var division2;\n\n                if (division2 = data1 / 1, division2 !== parseInt(division2)) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/initialNumberOfCases\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1\n                    },\n                    message: \"should be multiple of 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.importsPerDay;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"importsPerDay\"\n                },\n                message: \"should have required property 'importsPerDay'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/importsPerDay\",\n                    schemaPath: \"#/properties/importsPerDay/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/importsPerDay\",\n                  schemaPath: \"#/properties/importsPerDay/type\",\n                  params: {\n                    type: \"number\"\n                  },\n                  message: \"should be number\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.hospitalBeds;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"hospitalBeds\"\n                },\n                message: \"should have required property 'hospitalBeds'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/hospitalBeds\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\"\n                  },\n                  message: \"should be integer\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/hospitalBeds\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var division2;\n\n                if (division2 = data1 / 1, division2 !== parseInt(division2)) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/hospitalBeds\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1\n                    },\n                    message: \"should be multiple of 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.icuBeds;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"icuBeds\"\n                },\n                message: \"should have required property 'icuBeds'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/icuBeds\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\"\n                  },\n                  message: \"should be integer\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/icuBeds\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var division2;\n\n                if (division2 = data1 / 1, division2 !== parseInt(division2)) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/icuBeds\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1\n                    },\n                    message: \"should be multiple of 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\"\n              },\n              message: \"should be object\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      }();\n\n      refVal1.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumPopulation\",\n        title: \"ScenarioDatumPopulation\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\"populationServed\", \"ageDistributionName\", \"caseCountsName\", \"initialNumberOfCases\", \"importsPerDay\", \"hospitalBeds\", \"icuBeds\"],\n        properties: {\n          populationServed: {\n            $ref: \"IntegerNonNegative#\"\n          },\n          ageDistributionName: {\n            type: \"string\",\n            minLength: 1\n          },\n          caseCountsName: {\n            type: \"string\",\n            minLength: 1\n          },\n          initialNumberOfCases: {\n            $ref: \"IntegerNonNegative#\"\n          },\n          importsPerDay: {\n            type: \"number\",\n            minimum: 0\n          },\n          hospitalBeds: {\n            $ref: \"IntegerNonNegative#\"\n          },\n          icuBeds: {\n            $ref: \"IntegerNonNegative#\"\n          }\n        }\n      };\n      refVal1.errors = null;\n      refVal[1] = refVal1;\n\n      var refVal2 = function () {\n        var refVal = [];\n        var refVal1 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"NumericRangeNonNegative\",\n          title: \"NumericRangeNonNegative\",\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"begin\", \"end\"],\n          properties: {\n            begin: {\n              type: \"number\",\n              minimum: 0,\n              maximum: {\n                $data: \"1/end\"\n              }\n            },\n            end: {\n              type: \"number\"\n            }\n          }\n        };\n        refVal[1] = refVal1;\n        var refVal2 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"IntegerNonNegative\",\n          title: \"IntegerNonNegative\",\n          type: \"integer\",\n          multipleOf: 1,\n          minimum: 0\n        };\n        refVal[2] = refVal2;\n        return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n          \"use strict\";\n\n          var vErrors = null;\n          var errors = 0;\n\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n\n            for (var key0 in data) {\n              var isAdditional0 = !(false || key0 == \"r0\" || key0 == \"latencyDays\" || key0 == \"infectiousPeriodDays\" || key0 == \"hospitalStayDays\" || key0 == \"icuStayDays\" || key0 == \"seasonalForcing\" || key0 == \"peakMonth\" || key0 == \"overflowSeverity\");\n\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\"\n                  },\n                  message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            }\n\n            var data1 = data.r0;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"r0\"\n                },\n                message: \"should have required property 'r0'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n\n              if (data1 && typeof data1 === \"object\" && !Array.isArray(data1)) {\n                var errs__2 = errors;\n                var valid3 = true;\n\n                for (var key2 in data1) {\n                  var isAdditional2 = !(false || key2 == \"begin\" || key2 == \"end\");\n\n                  if (isAdditional2) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"additionalProperties\",\n                      dataPath: (dataPath || \"\") + \"/r0\",\n                      schemaPath: \"NumericRangeNonNegative#/additionalProperties\",\n                      params: {\n                        additionalProperty: \"\" + key2 + \"\"\n                      },\n                      message: \"should NOT have additional properties\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n                }\n\n                var data2 = data1.begin;\n\n                if (data2 === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/r0\",\n                    schemaPath: \"NumericRangeNonNegative#/required\",\n                    params: {\n                      missingProperty: \"begin\"\n                    },\n                    message: \"should have required property 'begin'\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n\n                  if (typeof data2 === \"number\") {\n                    var schema3 = data1 && data1.end;\n\n                    if (schema3 !== undefined && typeof schema3 != \"number\" || data2 > schema3 || data2 !== data2) {\n                      var err = {\n                        keyword: \"maximum\",\n                        dataPath: (dataPath || \"\") + \"/r0/begin\",\n                        schemaPath: \"NumericRangeNonNegative#/properties/begin/maximum\",\n                        params: {\n                          comparison: \"<=\",\n                          limit: schema3,\n                          exclusive: false\n                        },\n                        message: \"should be <= \" + schema3\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n\n                    if (data2 < 0 || data2 !== data2) {\n                      var err = {\n                        keyword: \"minimum\",\n                        dataPath: (dataPath || \"\") + \"/r0/begin\",\n                        schemaPath: \"NumericRangeNonNegative#/properties/begin/minimum\",\n                        params: {\n                          comparison: \">=\",\n                          limit: 0,\n                          exclusive: false\n                        },\n                        message: \"should be >= 0\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/r0/begin\",\n                      schemaPath: \"NumericRangeNonNegative#/properties/begin/type\",\n                      params: {\n                        type: \"number\"\n                      },\n                      message: \"should be number\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n\n                  var valid3 = errors === errs_3;\n                }\n\n                if (data1.end === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/r0\",\n                    schemaPath: \"NumericRangeNonNegative#/required\",\n                    params: {\n                      missingProperty: \"end\"\n                    },\n                    message: \"should have required property 'end'\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n\n                  if (typeof data1.end !== \"number\") {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/r0/end\",\n                      schemaPath: \"NumericRangeNonNegative#/properties/end/type\",\n                      params: {\n                        type: \"number\"\n                      },\n                      message: \"should be number\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n\n                  var valid3 = errors === errs_3;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/r0\",\n                  schemaPath: \"NumericRangeNonNegative#/type\",\n                  params: {\n                    type: \"object\"\n                  },\n                  message: \"should be object\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.latencyDays;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"latencyDays\"\n                },\n                message: \"should have required property 'latencyDays'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/latencyDays\",\n                    schemaPath: \"#/properties/latencyDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false\n                    },\n                    message: \"should be >= 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/latencyDays\",\n                  schemaPath: \"#/properties/latencyDays/type\",\n                  params: {\n                    type: \"number\"\n                  },\n                  message: \"should be number\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.infectiousPeriodDays;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"infectiousPeriodDays\"\n                },\n                message: \"should have required property 'infectiousPeriodDays'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/infectiousPeriodDays\",\n                    schemaPath: \"#/properties/infectiousPeriodDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false\n                    },\n                    message: \"should be >= 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/infectiousPeriodDays\",\n                  schemaPath: \"#/properties/infectiousPeriodDays/type\",\n                  params: {\n                    type: \"number\"\n                  },\n                  message: \"should be number\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.hospitalStayDays;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"hospitalStayDays\"\n                },\n                message: \"should have required property 'hospitalStayDays'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/hospitalStayDays\",\n                    schemaPath: \"#/properties/hospitalStayDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false\n                    },\n                    message: \"should be >= 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/hospitalStayDays\",\n                  schemaPath: \"#/properties/hospitalStayDays/type\",\n                  params: {\n                    type: \"number\"\n                  },\n                  message: \"should be number\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.icuStayDays;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"icuStayDays\"\n                },\n                message: \"should have required property 'icuStayDays'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/icuStayDays\",\n                    schemaPath: \"#/properties/icuStayDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false\n                    },\n                    message: \"should be >= 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/icuStayDays\",\n                  schemaPath: \"#/properties/icuStayDays/type\",\n                  params: {\n                    type: \"number\"\n                  },\n                  message: \"should be number\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.seasonalForcing;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"seasonalForcing\"\n                },\n                message: \"should have required property 'seasonalForcing'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/seasonalForcing\",\n                    schemaPath: \"#/properties/seasonalForcing/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/seasonalForcing\",\n                  schemaPath: \"#/properties/seasonalForcing/type\",\n                  params: {\n                    type: \"number\"\n                  },\n                  message: \"should be number\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.peakMonth;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"peakMonth\"\n                },\n                message: \"should have required property 'peakMonth'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              var errs_3 = errors;\n\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/peakMonth\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\"\n                  },\n                  message: \"should be integer\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/peakMonth\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var division3;\n\n                if (division3 = data1 / 1, division3 !== parseInt(division3)) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/peakMonth\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1\n                    },\n                    message: \"should be multiple of 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid3 = errors === errs_3;\n              var valid2 = errors === errs_2;\n              var errs_2 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 > 11 || data1 !== data1) {\n                  var err = {\n                    keyword: \"maximum\",\n                    dataPath: (dataPath || \"\") + \"/peakMonth\",\n                    schemaPath: \"#/properties/peakMonth/allOf/1/maximum\",\n                    params: {\n                      comparison: \"<=\",\n                      limit: 11,\n                      exclusive: false\n                    },\n                    message: \"should be <= 11\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.overflowSeverity;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"overflowSeverity\"\n                },\n                message: \"should have required property 'overflowSeverity'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/overflowSeverity\",\n                    schemaPath: \"#/properties/overflowSeverity/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false\n                    },\n                    message: \"should be >= 0\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/overflowSeverity\",\n                  schemaPath: \"#/properties/overflowSeverity/type\",\n                  params: {\n                    type: \"number\"\n                  },\n                  message: \"should be number\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\"\n              },\n              message: \"should be object\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      }();\n\n      refVal2.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumEpidemiological\",\n        title: \"ScenarioDatumEpidemiological\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\"r0\", \"latencyDays\", \"infectiousPeriodDays\", \"hospitalStayDays\", \"icuStayDays\", \"seasonalForcing\", \"peakMonth\", \"overflowSeverity\"],\n        properties: {\n          r0: {\n            $ref: \"NumericRangeNonNegative#\"\n          },\n          latencyDays: {\n            type: \"number\",\n            minimum: 1\n          },\n          infectiousPeriodDays: {\n            type: \"number\",\n            minimum: 1\n          },\n          hospitalStayDays: {\n            type: \"number\",\n            minimum: 1\n          },\n          icuStayDays: {\n            type: \"number\",\n            minimum: 1\n          },\n          seasonalForcing: {\n            type: \"number\",\n            minimum: 0\n          },\n          peakMonth: {\n            allOf: [{\n              $ref: \"IntegerNonNegative#\"\n            }, {\n              maximum: 11\n            }]\n          },\n          overflowSeverity: {\n            type: \"number\",\n            minimum: 0\n          }\n        }\n      };\n      refVal2.errors = null;\n      refVal[2] = refVal2;\n\n      var refVal3 = function () {\n        var refVal = [];\n        var refVal1 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"DateRange\",\n          title: \"DateRange\",\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"begin\", \"end\"],\n          properties: {\n            begin: {\n              oneOf: [{\n                type: \"string\",\n                format: \"date\"\n              }, {\n                type: \"string\",\n                format: \"date-time\"\n              }],\n              formatMaximum: {\n                $data: \"1/end\"\n              }\n            },\n            end: {\n              oneOf: [{\n                type: \"string\",\n                format: \"date\"\n              }, {\n                type: \"string\",\n                format: \"date-time\"\n              }]\n            }\n          }\n        };\n        refVal[1] = refVal1;\n        var refVal2 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"Integer\",\n          title: \"Integer\",\n          type: \"integer\",\n          multipleOf: 1\n        };\n        refVal[2] = refVal2;\n        return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n          \"use strict\";\n\n          var vErrors = null;\n          var errors = 0;\n\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n\n            for (var key0 in data) {\n              var isAdditional0 = !(false || key0 == \"simulationTimeRange\" || key0 == \"numberStochasticRuns\");\n\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\"\n                  },\n                  message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            }\n\n            var data1 = data.simulationTimeRange;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"simulationTimeRange\"\n                },\n                message: \"should have required property 'simulationTimeRange'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n\n              if (data1 && typeof data1 === \"object\" && !Array.isArray(data1)) {\n                var errs__2 = errors;\n                var valid3 = true;\n\n                for (var key2 in data1) {\n                  var isAdditional2 = !(false || key2 == \"begin\" || key2 == \"end\");\n\n                  if (isAdditional2) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"additionalProperties\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                      schemaPath: \"DateRange#/additionalProperties\",\n                      params: {\n                        additionalProperty: \"\" + key2 + \"\"\n                      },\n                      message: \"should NOT have additional properties\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n                }\n\n                var data2 = data1.begin;\n\n                if (data2 === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                    schemaPath: \"DateRange#/required\",\n                    params: {\n                      missingProperty: \"begin\"\n                    },\n                    message: \"should have required property 'begin'\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n                  var errs__3 = errors,\n                      prevValid3 = false,\n                      valid3 = false,\n                      passingSchemas3 = null;\n                  var errs_4 = errors;\n\n                  if (typeof data2 === \"string\") {\n                    if (!formats.date.test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf/0/format\",\n                        params: {\n                          format: \"date\"\n                        },\n                        message: 'should match format \"date\"'\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                      schemaPath: \"DateRange#/properties/begin/oneOf/0/type\",\n                      params: {\n                        type: \"string\"\n                      },\n                      message: \"should be string\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n\n                  var valid4 = errors === errs_4;\n\n                  if (valid4) {\n                    valid3 = prevValid3 = true;\n                    passingSchemas3 = 0;\n                  }\n\n                  var errs_4 = errors;\n\n                  if (typeof data2 === \"string\") {\n                    if (!formats[\"date-time\"].test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf/1/format\",\n                        params: {\n                          format: \"date-time\"\n                        },\n                        message: 'should match format \"date-time\"'\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                      schemaPath: \"DateRange#/properties/begin/oneOf/1/type\",\n                      params: {\n                        type: \"string\"\n                      },\n                      message: \"should be string\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n\n                  var valid4 = errors === errs_4;\n\n                  if (valid4 && prevValid3) {\n                    valid3 = false;\n                    passingSchemas3 = [passingSchemas3, 1];\n                  } else {\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 1;\n                    }\n                  }\n\n                  if (!valid3) {\n                    var err = {\n                      keyword: \"oneOf\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                      schemaPath: \"DateRange#/properties/begin/oneOf\",\n                      params: {\n                        passingSchemas: passingSchemas3\n                      },\n                      message: \"should match exactly one schema in oneOf\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  } else {\n                    errors = errs__3;\n\n                    if (vErrors !== null) {\n                      if (errs__3) vErrors.length = errs__3;else vErrors = null;\n                    }\n                  }\n\n                  var valid3 = errors === errs_3;\n                }\n\n                var data2 = data1.end;\n\n                if (data2 === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                    schemaPath: \"DateRange#/required\",\n                    params: {\n                      missingProperty: \"end\"\n                    },\n                    message: \"should have required property 'end'\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n                  var errs__3 = errors,\n                      prevValid3 = false,\n                      valid3 = false,\n                      passingSchemas3 = null;\n                  var errs_4 = errors;\n\n                  if (typeof data2 === \"string\") {\n                    if (!formats.date.test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/0/format\",\n                        params: {\n                          format: \"date\"\n                        },\n                        message: 'should match format \"date\"'\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                      schemaPath: \"DateRange#/properties/end/oneOf/0/type\",\n                      params: {\n                        type: \"string\"\n                      },\n                      message: \"should be string\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n\n                  var valid4 = errors === errs_4;\n\n                  if (valid4) {\n                    valid3 = prevValid3 = true;\n                    passingSchemas3 = 0;\n                  }\n\n                  var errs_4 = errors;\n\n                  if (typeof data2 === \"string\") {\n                    if (!formats[\"date-time\"].test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/1/format\",\n                        params: {\n                          format: \"date-time\"\n                        },\n                        message: 'should match format \"date-time\"'\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                      schemaPath: \"DateRange#/properties/end/oneOf/1/type\",\n                      params: {\n                        type: \"string\"\n                      },\n                      message: \"should be string\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n\n                  var valid4 = errors === errs_4;\n\n                  if (valid4 && prevValid3) {\n                    valid3 = false;\n                    passingSchemas3 = [passingSchemas3, 1];\n                  } else {\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 1;\n                    }\n                  }\n\n                  if (!valid3) {\n                    var err = {\n                      keyword: \"oneOf\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                      schemaPath: \"DateRange#/properties/end/oneOf\",\n                      params: {\n                        passingSchemas: passingSchemas3\n                      },\n                      message: \"should match exactly one schema in oneOf\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  } else {\n                    errors = errs__3;\n\n                    if (vErrors !== null) {\n                      if (errs__3) vErrors.length = errs__3;else vErrors = null;\n                    }\n                  }\n\n                  var valid3 = errors === errs_3;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                  schemaPath: \"DateRange#/type\",\n                  params: {\n                    type: \"object\"\n                  },\n                  message: \"should be object\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n\n            var data1 = data.numberStochasticRuns;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"numberStochasticRuns\"\n                },\n                message: \"should have required property 'numberStochasticRuns'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              var errs_3 = errors;\n\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                  schemaPath: \"Integer#/type\",\n                  params: {\n                    type: \"integer\"\n                  },\n                  message: \"should be integer\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (typeof data1 === \"number\") {\n                var division3;\n\n                if (division3 = data1 / 1, division3 !== parseInt(division3)) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                    schemaPath: \"Integer#/multipleOf\",\n                    params: {\n                      multipleOf: 1\n                    },\n                    message: \"should be multiple of 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid3 = errors === errs_3;\n              var valid2 = errors === errs_2;\n              var errs_2 = errors;\n\n              if (typeof data1 === \"number\") {\n                if (data1 > 100001 || data1 !== data1) {\n                  var err = {\n                    keyword: \"maximum\",\n                    dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                    schemaPath: \"#/properties/numberStochasticRuns/allOf/1/maximum\",\n                    params: {\n                      comparison: \"<=\",\n                      limit: 100001,\n                      exclusive: false\n                    },\n                    message: \"should be <= 100001\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                    schemaPath: \"#/properties/numberStochasticRuns/allOf/1/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false\n                    },\n                    message: \"should be >= 1\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\"\n              },\n              message: \"should be object\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      }();\n\n      refVal3.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumSimulation\",\n        title: \"ScenarioDatumSimulation\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\"simulationTimeRange\", \"numberStochasticRuns\"],\n        properties: {\n          simulationTimeRange: {\n            $ref: \"DateRange#\"\n          },\n          numberStochasticRuns: {\n            allOf: [{\n              $ref: \"Integer#\"\n            }, {\n              minimum: 1,\n              maximum: 100001\n            }]\n          }\n        }\n      };\n      refVal3.errors = null;\n      refVal[3] = refVal3;\n\n      var refVal4 = function () {\n        var refVal = [];\n\n        var refVal1 = function () {\n          var pattern0 = new RegExp(\"^#(?:[0-9a-fA-F]{3}){1,2}$\");\n          var refVal = [];\n          var refVal1 = {\n            $schema: \"http://json-schema.org/draft-07/schema\",\n            $id: \"ColorHex\",\n            title: \"ColorHex\",\n            type: \"string\",\n            pattern: \"^#(?:[0-9a-fA-F]{3}){1,2}$\"\n          };\n          refVal[1] = refVal1;\n          var refVal2 = {\n            $schema: \"http://json-schema.org/draft-07/schema\",\n            $id: \"DateRange\",\n            title: \"DateRange\",\n            type: \"object\",\n            additionalProperties: false,\n            required: [\"begin\", \"end\"],\n            properties: {\n              begin: {\n                oneOf: [{\n                  type: \"string\",\n                  format: \"date\"\n                }, {\n                  type: \"string\",\n                  format: \"date-time\"\n                }],\n                formatMaximum: {\n                  $data: \"1/end\"\n                }\n              },\n              end: {\n                oneOf: [{\n                  type: \"string\",\n                  format: \"date\"\n                }, {\n                  type: \"string\",\n                  format: \"date-time\"\n                }]\n              }\n            }\n          };\n          refVal[2] = refVal2;\n          var refVal3 = {\n            $schema: \"http://json-schema.org/draft-07/schema\",\n            $id: \"PercentageRange\",\n            title: \"PercentageRange\",\n            type: \"object\",\n            additionalProperties: false,\n            required: [\"begin\", \"end\"],\n            properties: {\n              begin: {\n                type: \"number\",\n                minimum: 0,\n                maximum: {\n                  $data: \"1/end\"\n                }\n              },\n              end: {\n                type: \"number\",\n                maximum: 100\n              }\n            }\n          };\n          refVal[3] = refVal3;\n          return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n            \"use strict\";\n\n            var vErrors = null;\n            var errors = 0;\n\n            if (data && typeof data === \"object\" && !Array.isArray(data)) {\n              var errs__0 = errors;\n              var valid1 = true;\n\n              for (var key0 in data) {\n                var isAdditional0 = !(false || key0 == \"name\" || key0 == \"color\" || key0 == \"timeRange\" || key0 == \"transmissionReduction\");\n\n                if (isAdditional0) {\n                  valid1 = false;\n                  var err = {\n                    keyword: \"additionalProperties\",\n                    dataPath: (dataPath || \"\") + \"\",\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                      additionalProperty: \"\" + key0 + \"\"\n                    },\n                    message: \"should NOT have additional properties\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n              }\n\n              var data1 = data.name;\n\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"name\"\n                  },\n                  message: \"should have required property 'name'\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n\n                if (typeof data1 === \"string\") {\n                  if (ucs2length(data1) < 1) {\n                    var err = {\n                      keyword: \"minLength\",\n                      dataPath: (dataPath || \"\") + \"/name\",\n                      schemaPath: \"#/properties/name/minLength\",\n                      params: {\n                        limit: 1\n                      },\n                      message: \"should NOT be shorter than 1 characters\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/name\",\n                    schemaPath: \"#/properties/name/type\",\n                    params: {\n                      type: \"string\"\n                    },\n                    message: \"should be string\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var valid1 = errors === errs_1;\n              }\n\n              var data1 = data.color;\n\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"color\"\n                  },\n                  message: \"should have required property 'color'\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n                var errs_2 = errors;\n\n                if (typeof data1 === \"string\") {\n                  if (!pattern0.test(data1)) {\n                    var err = {\n                      keyword: \"pattern\",\n                      dataPath: (dataPath || \"\") + \"/color\",\n                      schemaPath: \"ColorHex#/pattern\",\n                      params: {\n                        pattern: \"^#(?:[0-9a-fA-F]{3}){1,2}$\"\n                      },\n                      message: 'should match pattern \"^#(?:[0-9a-fA-F]{3}){1,2}$\"'\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/color\",\n                    schemaPath: \"ColorHex#/type\",\n                    params: {\n                      type: \"string\"\n                    },\n                    message: \"should be string\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var valid2 = errors === errs_2;\n                var valid1 = errors === errs_1;\n              }\n\n              var data1 = data.timeRange;\n\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"timeRange\"\n                  },\n                  message: \"should have required property 'timeRange'\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n                var errs_2 = errors;\n\n                if (data1 && typeof data1 === \"object\" && !Array.isArray(data1)) {\n                  var errs__2 = errors;\n                  var valid3 = true;\n\n                  for (var key2 in data1) {\n                    var isAdditional2 = !(false || key2 == \"begin\" || key2 == \"end\");\n\n                    if (isAdditional2) {\n                      valid3 = false;\n                      var err = {\n                        keyword: \"additionalProperties\",\n                        dataPath: (dataPath || \"\") + \"/timeRange\",\n                        schemaPath: \"DateRange#/additionalProperties\",\n                        params: {\n                          additionalProperty: \"\" + key2 + \"\"\n                        },\n                        message: \"should NOT have additional properties\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n                  }\n\n                  var data2 = data1.begin;\n\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/timeRange\",\n                      schemaPath: \"DateRange#/required\",\n                      params: {\n                        missingProperty: \"begin\"\n                      },\n                      message: \"should have required property 'begin'\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n                    var errs__3 = errors,\n                        prevValid3 = false,\n                        valid3 = false,\n                        passingSchemas3 = null;\n                    var errs_4 = errors;\n\n                    if (typeof data2 === \"string\") {\n                      if (!formats.date.test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                          schemaPath: \"DateRange#/properties/begin/oneOf/0/format\",\n                          params: {\n                            format: \"date\"\n                          },\n                          message: 'should match format \"date\"'\n                        };\n                        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf/0/type\",\n                        params: {\n                          type: \"string\"\n                        },\n                        message: \"should be string\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n\n                    var valid4 = errors === errs_4;\n\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 0;\n                    }\n\n                    var errs_4 = errors;\n\n                    if (typeof data2 === \"string\") {\n                      if (!formats[\"date-time\"].test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                          schemaPath: \"DateRange#/properties/begin/oneOf/1/format\",\n                          params: {\n                            format: \"date-time\"\n                          },\n                          message: 'should match format \"date-time\"'\n                        };\n                        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf/1/type\",\n                        params: {\n                          type: \"string\"\n                        },\n                        message: \"should be string\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n\n                    var valid4 = errors === errs_4;\n\n                    if (valid4 && prevValid3) {\n                      valid3 = false;\n                      passingSchemas3 = [passingSchemas3, 1];\n                    } else {\n                      if (valid4) {\n                        valid3 = prevValid3 = true;\n                        passingSchemas3 = 1;\n                      }\n                    }\n\n                    if (!valid3) {\n                      var err = {\n                        keyword: \"oneOf\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf\",\n                        params: {\n                          passingSchemas: passingSchemas3\n                        },\n                        message: \"should match exactly one schema in oneOf\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    } else {\n                      errors = errs__3;\n\n                      if (vErrors !== null) {\n                        if (errs__3) vErrors.length = errs__3;else vErrors = null;\n                      }\n                    }\n\n                    var valid3 = errors === errs_3;\n                  }\n\n                  var data2 = data1.end;\n\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/timeRange\",\n                      schemaPath: \"DateRange#/required\",\n                      params: {\n                        missingProperty: \"end\"\n                      },\n                      message: \"should have required property 'end'\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n                    var errs__3 = errors,\n                        prevValid3 = false,\n                        valid3 = false,\n                        passingSchemas3 = null;\n                    var errs_4 = errors;\n\n                    if (typeof data2 === \"string\") {\n                      if (!formats.date.test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                          schemaPath: \"DateRange#/properties/end/oneOf/0/format\",\n                          params: {\n                            format: \"date\"\n                          },\n                          message: 'should match format \"date\"'\n                        };\n                        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/0/type\",\n                        params: {\n                          type: \"string\"\n                        },\n                        message: \"should be string\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n\n                    var valid4 = errors === errs_4;\n\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 0;\n                    }\n\n                    var errs_4 = errors;\n\n                    if (typeof data2 === \"string\") {\n                      if (!formats[\"date-time\"].test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                          schemaPath: \"DateRange#/properties/end/oneOf/1/format\",\n                          params: {\n                            format: \"date-time\"\n                          },\n                          message: 'should match format \"date-time\"'\n                        };\n                        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/1/type\",\n                        params: {\n                          type: \"string\"\n                        },\n                        message: \"should be string\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n\n                    var valid4 = errors === errs_4;\n\n                    if (valid4 && prevValid3) {\n                      valid3 = false;\n                      passingSchemas3 = [passingSchemas3, 1];\n                    } else {\n                      if (valid4) {\n                        valid3 = prevValid3 = true;\n                        passingSchemas3 = 1;\n                      }\n                    }\n\n                    if (!valid3) {\n                      var err = {\n                        keyword: \"oneOf\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf\",\n                        params: {\n                          passingSchemas: passingSchemas3\n                        },\n                        message: \"should match exactly one schema in oneOf\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    } else {\n                      errors = errs__3;\n\n                      if (vErrors !== null) {\n                        if (errs__3) vErrors.length = errs__3;else vErrors = null;\n                      }\n                    }\n\n                    var valid3 = errors === errs_3;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/timeRange\",\n                    schemaPath: \"DateRange#/type\",\n                    params: {\n                      type: \"object\"\n                    },\n                    message: \"should be object\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var valid2 = errors === errs_2;\n                var valid1 = errors === errs_1;\n              }\n\n              var data1 = data.transmissionReduction;\n\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"transmissionReduction\"\n                  },\n                  message: \"should have required property 'transmissionReduction'\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n                var errs_2 = errors;\n\n                if (data1 && typeof data1 === \"object\" && !Array.isArray(data1)) {\n                  var errs__2 = errors;\n                  var valid3 = true;\n\n                  for (var key2 in data1) {\n                    var isAdditional2 = !(false || key2 == \"begin\" || key2 == \"end\");\n\n                    if (isAdditional2) {\n                      valid3 = false;\n                      var err = {\n                        keyword: \"additionalProperties\",\n                        dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                        schemaPath: \"PercentageRange#/additionalProperties\",\n                        params: {\n                          additionalProperty: \"\" + key2 + \"\"\n                        },\n                        message: \"should NOT have additional properties\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n                  }\n\n                  var data2 = data1.begin;\n\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                      schemaPath: \"PercentageRange#/required\",\n                      params: {\n                        missingProperty: \"begin\"\n                      },\n                      message: \"should have required property 'begin'\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n\n                    if (typeof data2 === \"number\") {\n                      var schema3 = data1 && data1.end;\n\n                      if (schema3 !== undefined && typeof schema3 != \"number\" || data2 > schema3 || data2 !== data2) {\n                        var err = {\n                          keyword: \"maximum\",\n                          dataPath: (dataPath || \"\") + \"/transmissionReduction/begin\",\n                          schemaPath: \"PercentageRange#/properties/begin/maximum\",\n                          params: {\n                            comparison: \"<=\",\n                            limit: schema3,\n                            exclusive: false\n                          },\n                          message: \"should be <= \" + schema3\n                        };\n                        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                        errors++;\n                      }\n\n                      if (data2 < 0 || data2 !== data2) {\n                        var err = {\n                          keyword: \"minimum\",\n                          dataPath: (dataPath || \"\") + \"/transmissionReduction/begin\",\n                          schemaPath: \"PercentageRange#/properties/begin/minimum\",\n                          params: {\n                            comparison: \">=\",\n                            limit: 0,\n                            exclusive: false\n                          },\n                          message: \"should be >= 0\"\n                        };\n                        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/transmissionReduction/begin\",\n                        schemaPath: \"PercentageRange#/properties/begin/type\",\n                        params: {\n                          type: \"number\"\n                        },\n                        message: \"should be number\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n\n                    var valid3 = errors === errs_3;\n                  }\n\n                  var data2 = data1.end;\n\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                      schemaPath: \"PercentageRange#/required\",\n                      params: {\n                        missingProperty: \"end\"\n                      },\n                      message: \"should have required property 'end'\"\n                    };\n                    if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n\n                    if (typeof data2 === \"number\") {\n                      if (data2 > 100 || data2 !== data2) {\n                        var err = {\n                          keyword: \"maximum\",\n                          dataPath: (dataPath || \"\") + \"/transmissionReduction/end\",\n                          schemaPath: \"PercentageRange#/properties/end/maximum\",\n                          params: {\n                            comparison: \"<=\",\n                            limit: 100,\n                            exclusive: false\n                          },\n                          message: \"should be <= 100\"\n                        };\n                        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/transmissionReduction/end\",\n                        schemaPath: \"PercentageRange#/properties/end/type\",\n                        params: {\n                          type: \"number\"\n                        },\n                        message: \"should be number\"\n                      };\n                      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                      errors++;\n                    }\n\n                    var valid3 = errors === errs_3;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                    schemaPath: \"PercentageRange#/type\",\n                    params: {\n                      type: \"object\"\n                    },\n                    message: \"should be object\"\n                  };\n                  if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                  errors++;\n                }\n\n                var valid2 = errors === errs_2;\n                var valid1 = errors === errs_1;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/type\",\n                params: {\n                  type: \"object\"\n                },\n                message: \"should be object\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            validate.errors = vErrors;\n            return errors === 0;\n          };\n        }();\n\n        refVal1.schema = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"MitigationInterval\",\n          title: \"MitigationInterval\",\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"name\", \"color\", \"timeRange\", \"transmissionReduction\"],\n          properties: {\n            name: {\n              type: \"string\",\n              minLength: 1\n            },\n            color: {\n              $ref: \"ColorHex#\"\n            },\n            timeRange: {\n              $ref: \"DateRange#\"\n            },\n            transmissionReduction: {\n              $ref: \"PercentageRange#\"\n            }\n          }\n        };\n        refVal1.errors = null;\n        refVal[1] = refVal1;\n        return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n          \"use strict\";\n\n          var vErrors = null;\n          var errors = 0;\n          if (rootData === undefined) rootData = data;\n\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n\n            for (var key0 in data) {\n              var isAdditional0 = !(false || key0 == \"mitigationIntervals\");\n\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\"\n                  },\n                  message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            }\n\n            var data1 = data.mitigationIntervals;\n\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"mitigationIntervals\"\n                },\n                message: \"should have required property 'mitigationIntervals'\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n\n              if (Array.isArray(data1)) {\n                var errs__1 = errors;\n                var valid1;\n\n                for (var i1 = 0; i1 < data1.length; i1++) {\n                  var errs_2 = errors;\n\n                  if (!refVal1(data1[i1], (dataPath || \"\") + \"/mitigationIntervals/\" + i1, data1, i1, rootData)) {\n                    if (vErrors === null) vErrors = refVal1.errors;else vErrors = vErrors.concat(refVal1.errors);\n                    errors = vErrors.length;\n                  }\n\n                  var valid2 = errors === errs_2;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/mitigationIntervals\",\n                  schemaPath: \"#/properties/mitigationIntervals/type\",\n                  params: {\n                    type: \"array\"\n                  },\n                  message: \"should be array\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\"\n              },\n              message: \"should be object\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      }();\n\n      refVal4.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumMitigation\",\n        title: \"ScenarioDatumMitigation\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\"mitigationIntervals\"],\n        properties: {\n          mitigationIntervals: {\n            type: \"array\",\n            items: {\n              $ref: \"MitigationInterval#\"\n            }\n          }\n        }\n      };\n      refVal4.errors = null;\n      refVal[4] = refVal4;\n      return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n        \"use strict\";\n\n        var vErrors = null;\n        var errors = 0;\n        if (rootData === undefined) rootData = data;\n\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n\n          for (var key0 in data) {\n            var isAdditional0 = !(false || key0 == \"population\" || key0 == \"epidemiological\" || key0 == \"simulation\" || key0 == \"mitigation\");\n\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\"\n                },\n                message: \"should NOT have additional properties\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          }\n\n          if (data.population === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"population\"\n              },\n              message: \"should have required property 'population'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n\n            if (!refVal1(data.population, (dataPath || \"\") + \"/population\", data, \"population\", rootData)) {\n              if (vErrors === null) vErrors = refVal1.errors;else vErrors = vErrors.concat(refVal1.errors);\n              errors = vErrors.length;\n            }\n\n            var valid1 = errors === errs_1;\n          }\n\n          if (data.epidemiological === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"epidemiological\"\n              },\n              message: \"should have required property 'epidemiological'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n\n            if (!refVal2(data.epidemiological, (dataPath || \"\") + \"/epidemiological\", data, \"epidemiological\", rootData)) {\n              if (vErrors === null) vErrors = refVal2.errors;else vErrors = vErrors.concat(refVal2.errors);\n              errors = vErrors.length;\n            }\n\n            var valid1 = errors === errs_1;\n          }\n\n          if (data.simulation === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"simulation\"\n              },\n              message: \"should have required property 'simulation'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n\n            if (!refVal3(data.simulation, (dataPath || \"\") + \"/simulation\", data, \"simulation\", rootData)) {\n              if (vErrors === null) vErrors = refVal3.errors;else vErrors = vErrors.concat(refVal3.errors);\n              errors = vErrors.length;\n            }\n\n            var valid1 = errors === errs_1;\n          }\n\n          if (data.mitigation === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"mitigation\"\n              },\n              message: \"should have required property 'mitigation'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n\n            if (!refVal4(data.mitigation, (dataPath || \"\") + \"/mitigation\", data, \"mitigation\", rootData)) {\n              if (vErrors === null) vErrors = refVal4.errors;else vErrors = vErrors.concat(refVal4.errors);\n              errors = vErrors.length;\n            }\n\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\"\n            },\n            message: \"should be object\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    }();\n\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"ScenarioDatum\",\n      title: \"ScenarioDatum\",\n      type: \"object\",\n      additionalProperties: false,\n      required: [\"population\", \"epidemiological\", \"simulation\", \"mitigation\"],\n      properties: {\n        population: {\n          $ref: \"ScenarioDatumPopulation#\"\n        },\n        epidemiological: {\n          $ref: \"ScenarioDatumEpidemiological#\"\n        },\n        simulation: {\n          $ref: \"ScenarioDatumSimulation#\"\n        },\n        mitigation: {\n          $ref: \"ScenarioDatumMitigation#\"\n        }\n      }\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \"use strict\";\n\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\"\n              },\n              message: \"should NOT have additional properties\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n        }\n\n        var data1 = data.name;\n\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\"\n            },\n            message: \"should have required property 'name'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1\n                },\n                message: \"should NOT be shorter than 1 characters\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\"\n              },\n              message: \"should be string\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n\n        if (data.data === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\"\n            },\n            message: \"should have required property 'data'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (!refVal1(data.data, (dataPath || \"\") + \"/data\", data, \"data\", rootData)) {\n            if (vErrors === null) vErrors = refVal1.errors;else vErrors = vErrors.concat(refVal1.errors);\n            errors = vErrors.length;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"should be object\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      }\n\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  }();\n\n  refVal2.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"ScenarioData\",\n    title: \"ScenarioData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1\n      },\n      data: {\n        $ref: \"ScenarioDatum#\"\n      }\n    }\n  };\n  refVal2.errors = null;\n  refVal[2] = refVal2;\n\n  var refVal3 = function () {\n    var refVal = [];\n\n    var refVal1 = function () {\n      var refVal = [];\n      var refVal1 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"AgeGroup\",\n        title: \"AgeGroup\",\n        type: \"string\",\n        enum: [\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"]\n      };\n      refVal[1] = refVal1;\n      var refVal2 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"IntegerNonNegative\",\n        title: \"IntegerNonNegative\",\n        type: \"integer\",\n        multipleOf: 1,\n        minimum: 0\n      };\n      refVal[2] = refVal2;\n      return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n        \"use strict\";\n\n        var vErrors = null;\n        var errors = 0;\n\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n\n          for (var key0 in data) {\n            var isAdditional0 = !(false || key0 == \"ageGroup\" || key0 == \"population\");\n\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\"\n                },\n                message: \"should NOT have additional properties\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          }\n\n          var data1 = data.ageGroup;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"ageGroup\"\n              },\n              message: \"should have required property 'ageGroup'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 !== \"string\") {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/type\",\n                params: {\n                  type: \"string\"\n                },\n                message: \"should be string\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var schema2 = refVal1.enum;\n            var valid2;\n            valid2 = false;\n\n            for (var i2 = 0; i2 < schema2.length; i2++) if (equal(data1, schema2[i2])) {\n              valid2 = true;\n              break;\n            }\n\n            if (!valid2) {\n              var err = {\n                keyword: \"enum\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/enum\",\n                params: {\n                  allowedValues: schema2\n                },\n                message: \"should be equal to one of the allowed values\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.population;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"population\"\n              },\n              message: \"should have required property 'population'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/population\",\n                schemaPath: \"IntegerNonNegative#/type\",\n                params: {\n                  type: \"integer\"\n                },\n                message: \"should be integer\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            if (typeof data1 === \"number\") {\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/population\",\n                  schemaPath: \"IntegerNonNegative#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              var division2;\n\n              if (division2 = data1 / 1, division2 !== parseInt(division2)) {\n                var err = {\n                  keyword: \"multipleOf\",\n                  dataPath: (dataPath || \"\") + \"/population\",\n                  schemaPath: \"IntegerNonNegative#/multipleOf\",\n                  params: {\n                    multipleOf: 1\n                  },\n                  message: \"should be multiple of 1\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\"\n            },\n            message: \"should be object\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    }();\n\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"AgeDistributionDatum\",\n      title: \"AgeDistributionDatum\",\n      type: \"object\",\n      additionalProperties: false,\n      required: [\"ageGroup\", \"population\"],\n      properties: {\n        ageGroup: {\n          $ref: \"AgeGroup#\"\n        },\n        population: {\n          $ref: \"IntegerNonNegative#\"\n        }\n      }\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \"use strict\";\n\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\"\n              },\n              message: \"should NOT have additional properties\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n        }\n\n        var data1 = data.name;\n\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\"\n            },\n            message: \"should have required property 'name'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1\n                },\n                message: \"should NOT be shorter than 1 characters\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\"\n              },\n              message: \"should be string\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n\n        var data1 = data.data;\n\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\"\n            },\n            message: \"should have required property 'data'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (Array.isArray(data1)) {\n            var errs__1 = errors;\n            var valid1;\n\n            for (var i1 = 0; i1 < data1.length; i1++) {\n              var errs_2 = errors;\n\n              if (!refVal1(data1[i1], (dataPath || \"\") + \"/data/\" + i1, data1, i1, rootData)) {\n                if (vErrors === null) vErrors = refVal1.errors;else vErrors = vErrors.concat(refVal1.errors);\n                errors = vErrors.length;\n              }\n\n              var valid2 = errors === errs_2;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/data\",\n              schemaPath: \"#/properties/data/type\",\n              params: {\n                type: \"array\"\n              },\n              message: \"should be array\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"should be object\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      }\n\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  }();\n\n  refVal3.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"AgeDistributionData\",\n    title: \"AgeDistributionData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1\n      },\n      data: {\n        type: \"array\",\n        items: {\n          $ref: \"AgeDistributionDatum#\"\n        }\n      }\n    }\n  };\n  refVal3.errors = null;\n  refVal[3] = refVal3;\n\n  var refVal4 = function () {\n    var refVal = [];\n\n    var refVal1 = function () {\n      var refVal = [];\n      var refVal1 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"AgeGroup\",\n        title: \"AgeGroup\",\n        type: \"string\",\n        enum: [\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"]\n      };\n      refVal[1] = refVal1;\n      var refVal2 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"Percentage\",\n        title: \"Percentage\",\n        type: \"number\",\n        minimum: 0,\n        maximum: 100\n      };\n      refVal[2] = refVal2;\n      return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n        \"use strict\";\n\n        var vErrors = null;\n        var errors = 0;\n\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n\n          for (var key0 in data) {\n            var isAdditional0 = !(false || key0 == \"ageGroup\" || key0 == \"isolated\" || key0 == \"confirmed\" || key0 == \"severe\" || key0 == \"critical\" || key0 == \"fatal\");\n\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\"\n                },\n                message: \"should NOT have additional properties\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          }\n\n          var data1 = data.ageGroup;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"ageGroup\"\n              },\n              message: \"should have required property 'ageGroup'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 !== \"string\") {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/type\",\n                params: {\n                  type: \"string\"\n                },\n                message: \"should be string\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var schema2 = refVal1.enum;\n            var valid2;\n            valid2 = false;\n\n            for (var i2 = 0; i2 < schema2.length; i2++) if (equal(data1, schema2[i2])) {\n              valid2 = true;\n              break;\n            }\n\n            if (!valid2) {\n              var err = {\n                keyword: \"enum\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/enum\",\n                params: {\n                  allowedValues: schema2\n                },\n                message: \"should be equal to one of the allowed values\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.isolated;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"isolated\"\n              },\n              message: \"should have required property 'isolated'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/isolated\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.confirmed;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"confirmed\"\n              },\n              message: \"should have required property 'confirmed'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/confirmed\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.severe;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"severe\"\n              },\n              message: \"should have required property 'severe'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/severe\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.critical;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"critical\"\n              },\n              message: \"should have required property 'critical'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/critical\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n\n          var data1 = data.fatal;\n\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"fatal\"\n              },\n              message: \"should have required property 'fatal'\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false\n                  },\n                  message: \"should be <= 100\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false\n                  },\n                  message: \"should be >= 0\"\n                };\n                if (vErrors === null) vErrors = [err];else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/fatal\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\"\n                },\n                message: \"should be number\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\"\n            },\n            message: \"should be object\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    }();\n\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"SeverityDistributionDatum\",\n      title: \"SeverityDistributionDatum\",\n      additionalProperties: false,\n      type: \"object\",\n      required: [\"ageGroup\", \"isolated\", \"confirmed\", \"severe\", \"critical\", \"fatal\"],\n      properties: {\n        ageGroup: {\n          $ref: \"AgeGroup#\"\n        },\n        isolated: {\n          $ref: \"Percentage#\"\n        },\n        confirmed: {\n          $ref: \"Percentage#\"\n        },\n        severe: {\n          $ref: \"Percentage#\"\n        },\n        critical: {\n          $ref: \"Percentage#\"\n        },\n        fatal: {\n          $ref: \"Percentage#\"\n        }\n      }\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \"use strict\";\n\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\"\n              },\n              message: \"should NOT have additional properties\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n        }\n\n        var data1 = data.name;\n\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\"\n            },\n            message: \"should have required property 'name'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1\n                },\n                message: \"should NOT be shorter than 1 characters\"\n              };\n              if (vErrors === null) vErrors = [err];else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\"\n              },\n              message: \"should be string\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n\n        var data1 = data.data;\n\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\"\n            },\n            message: \"should have required property 'data'\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n\n          if (Array.isArray(data1)) {\n            var errs__1 = errors;\n            var valid1;\n\n            for (var i1 = 0; i1 < data1.length; i1++) {\n              var errs_2 = errors;\n\n              if (!refVal1(data1[i1], (dataPath || \"\") + \"/data/\" + i1, data1, i1, rootData)) {\n                if (vErrors === null) vErrors = refVal1.errors;else vErrors = vErrors.concat(refVal1.errors);\n                errors = vErrors.length;\n              }\n\n              var valid2 = errors === errs_2;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/data\",\n              schemaPath: \"#/properties/data/type\",\n              params: {\n                type: \"array\"\n              },\n              message: \"should be array\"\n            };\n            if (vErrors === null) vErrors = [err];else vErrors.push(err);\n            errors++;\n          }\n\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"should be object\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      }\n\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  }();\n\n  refVal4.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"SeverityDistributionData\",\n    title: \"SeverityDistributionData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1\n      },\n      data: {\n        type: \"array\",\n        items: {\n          $ref: \"SeverityDistributionDatum#\"\n        }\n      }\n    }\n  };\n  refVal4.errors = null;\n  refVal[4] = refVal4;\n  return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n    \"use strict\";\n\n    var vErrors = null;\n    var errors = 0;\n    if (rootData === undefined) rootData = data;\n\n    if (data && typeof data === \"object\" && !Array.isArray(data)) {\n      var errs__0 = errors;\n      var valid1 = true;\n\n      for (var key0 in data) {\n        var isAdditional0 = !(false || key0 == \"schemaVer\" || key0 == \"scenarioData\" || key0 == \"ageDistributionData\" || key0 == \"severityDistributionData\");\n\n        if (isAdditional0) {\n          valid1 = false;\n          var err = {\n            keyword: \"additionalProperties\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/additionalProperties\",\n            params: {\n              additionalProperty: \"\" + key0 + \"\"\n            },\n            message: \"should NOT have additional properties\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n      }\n\n      var data1 = data.schemaVer;\n\n      if (data1 === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"schemaVer\"\n          },\n          message: \"should have required property 'schemaVer'\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n        var errs_2 = errors;\n\n        if (typeof data1 !== \"string\") {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"/schemaVer\",\n            schemaPath: \"_SchemaVer#/type\",\n            params: {\n              type: \"string\"\n            },\n            message: \"should be string\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n\n        var schema2 = refVal1.const;\n        var valid2 = equal(data1, schema2);\n\n        if (!valid2) {\n          var err = {\n            keyword: \"const\",\n            dataPath: (dataPath || \"\") + \"/schemaVer\",\n            schemaPath: \"_SchemaVer#/const\",\n            params: {\n              allowedValue: schema2\n            },\n            message: \"should be equal to constant\"\n          };\n          if (vErrors === null) vErrors = [err];else vErrors.push(err);\n          errors++;\n        }\n\n        var valid2 = errors === errs_2;\n        var valid1 = errors === errs_1;\n      }\n\n      if (data.scenarioData === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"scenarioData\"\n          },\n          message: \"should have required property 'scenarioData'\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n\n        if (!refVal2(data.scenarioData, (dataPath || \"\") + \"/scenarioData\", data, \"scenarioData\", rootData)) {\n          if (vErrors === null) vErrors = refVal2.errors;else vErrors = vErrors.concat(refVal2.errors);\n          errors = vErrors.length;\n        }\n\n        var valid1 = errors === errs_1;\n      }\n\n      if (data.ageDistributionData === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"ageDistributionData\"\n          },\n          message: \"should have required property 'ageDistributionData'\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n\n        if (!refVal3(data.ageDistributionData, (dataPath || \"\") + \"/ageDistributionData\", data, \"ageDistributionData\", rootData)) {\n          if (vErrors === null) vErrors = refVal3.errors;else vErrors = vErrors.concat(refVal3.errors);\n          errors = vErrors.length;\n        }\n\n        var valid1 = errors === errs_1;\n      }\n\n      if (data.severityDistributionData === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"severityDistributionData\"\n          },\n          message: \"should have required property 'severityDistributionData'\"\n        };\n        if (vErrors === null) vErrors = [err];else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n\n        if (!refVal4(data.severityDistributionData, (dataPath || \"\") + \"/severityDistributionData\", data, \"severityDistributionData\", rootData)) {\n          if (vErrors === null) vErrors = refVal4.errors;else vErrors = vErrors.concat(refVal4.errors);\n          errors = vErrors.length;\n        }\n\n        var valid1 = errors === errs_1;\n      }\n    } else {\n      var err = {\n        keyword: \"type\",\n        dataPath: (dataPath || \"\") + \"\",\n        schemaPath: \"#/type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"should be object\"\n      };\n      if (vErrors === null) vErrors = [err];else vErrors.push(err);\n      errors++;\n    }\n\n    validate.errors = vErrors;\n    return errors === 0;\n  };\n}();\n\nvalidate.schema = {\n  $schema: \"http://json-schema.org/draft-07/schema\",\n  $id: \"Shareable\",\n  title: \"Shareable\",\n  type: \"object\",\n  additionalProperties: false,\n  required: [\"schemaVer\", \"scenarioData\", \"ageDistributionData\", \"severityDistributionData\"],\n  properties: {\n    schemaVer: {\n      $ref: \"_SchemaVer#\"\n    },\n    scenarioData: {\n      $ref: \"ScenarioData#\"\n    },\n    ageDistributionData: {\n      $ref: \"AgeDistributionData#\"\n    },\n    severityDistributionData: {\n      $ref: \"SeverityDistributionData#\"\n    }\n  }\n};\nvalidate.errors = null;\nmodule.exports = validate;","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/.generated/latest/validateShareable.js"],"names":["formats","require","ucs2length","equal","validate","refVal","refVal1","$schema","$id","title","type","const","refVal2","multipleOf","minimum","data","dataPath","parentData","parentDataProperty","rootData","vErrors","errors","Array","isArray","errs__0","valid1","key0","isAdditional0","err","keyword","schemaPath","params","additionalProperty","message","push","data1","populationServed","undefined","missingProperty","errs_1","errs_2","comparison","limit","exclusive","division2","parseInt","valid2","ageDistributionName","caseCountsName","initialNumberOfCases","importsPerDay","hospitalBeds","icuBeds","schema","additionalProperties","required","properties","$ref","minLength","begin","maximum","$data","end","r0","errs__2","valid3","key2","isAdditional2","data2","errs_3","schema3","latencyDays","infectiousPeriodDays","hospitalStayDays","icuStayDays","seasonalForcing","peakMonth","division3","overflowSeverity","allOf","refVal3","oneOf","format","formatMaximum","simulationTimeRange","errs__3","prevValid3","passingSchemas3","errs_4","date","test","valid4","passingSchemas","length","numberStochasticRuns","refVal4","pattern0","RegExp","pattern","name","color","timeRange","transmissionReduction","mitigationIntervals","errs__1","i1","concat","items","population","epidemiological","simulation","mitigation","enum","ageGroup","schema2","i2","allowedValues","isolated","confirmed","severe","critical","fatal","schemaVer","allowedValue","scenarioData","ageDistributionData","severityDistributionData","module","exports"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAAP,EAAd;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,4BAAD,CAAxB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIG,QAAQ,GAAI,YAAY;AAC1B,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE,wCADG;AAEZC,IAAAA,GAAG,EAAE,YAFO;AAGZC,IAAAA,KAAK,EAAE,YAHK;AAIZC,IAAAA,IAAI,EAAE,QAJM;AAKZC,IAAAA,KAAK,EAAE;AALK,GAAd;AAOAN,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;;AACA,MAAIM,OAAO,GAAI,YAAY;AACzB,QAAIP,MAAM,GAAG,EAAb;;AACA,QAAIC,OAAO,GAAI,YAAY;AACzB,UAAID,MAAM,GAAG,EAAb;;AACA,UAAIC,OAAO,GAAI,YAAY;AACzB,YAAID,MAAM,GAAG,EAAb;AACA,YAAIC,OAAO,GAAG;AACZC,UAAAA,OAAO,EAAE,wCADG;AAEZC,UAAAA,GAAG,EAAE,oBAFO;AAGZC,UAAAA,KAAK,EAAE,oBAHK;AAIZC,UAAAA,IAAI,EAAE,SAJM;AAKZG,UAAAA,UAAU,EAAE,CALA;AAMZC,UAAAA,OAAO,EAAE;AANG,SAAd;AAQAT,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,eAAO,SAASF,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,cAAIC,OAAO,GAAG,IAAd;AACA,cAAIC,MAAM,GAAG,CAAb;;AACA,cAAIN,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,gBAAIS,OAAO,GAAGH,MAAd;AACA,gBAAII,MAAM,GAAG,IAAb;;AACA,iBAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,kBAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,kBADR,IAEAA,IAAI,IAAI,qBAFR,IAGAA,IAAI,IAAI,gBAHR,IAIAA,IAAI,IAAI,sBAJR,IAKAA,IAAI,IAAI,eALR,IAMAA,IAAI,IAAI,cANR,IAOAA,IAAI,IAAI,SARU,CAApB;;AAUA,kBAAIC,aAAJ,EAAmB;AACjBF,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,sBADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,wBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,mBAJA;AAORO,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF;;AACD,gBAAIc,KAAK,GAAGpB,IAAI,CAACqB,gBAAjB;;AACA,gBAAID,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0CA,KAAK,KAAKA,KAAxD,EAA+D;AAC7D,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,mBAFrB;AAGRc,kBAAAA,UAAU,EAAE,0BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,mBAFrB;AAGRc,oBAAAA,UAAU,EAAE,6BAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIuB,SAAJ;;AACA,oBACIA,SAAS,GAAGT,KAAK,GAAG,CAArB,EAAyBS,SAAS,KAAKC,QAAQ,CAACD,SAAD,CADlD,EAEE;AACA,sBAAIhB,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,YADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,mBAFrB;AAGRc,oBAAAA,UAAU,EAAE,gCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNlB,sBAAAA,UAAU,EAAE;AADN,qBAJA;AAORoB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACgC,mBAAjB;;AACA,gBAAIZ,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIjC,UAAU,CAACiC,KAAD,CAAV,GAAoB,CAAxB,EAA2B;AACzB,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,WADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,sBAFrB;AAGRc,oBAAAA,UAAU,EAAE,4CAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNW,sBAAAA,KAAK,EAAE;AADD,qBAJA;AAORT,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAfD,MAeO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,sBAFrB;AAGRc,kBAAAA,UAAU,EAAE,uCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACiC,cAAjB;;AACA,gBAAIb,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIjC,UAAU,CAACiC,KAAD,CAAV,GAAoB,CAAxB,EAA2B;AACzB,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,WADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,iBAFrB;AAGRc,oBAAAA,UAAU,EAAE,uCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNW,sBAAAA,KAAK,EAAE;AADD,qBAJA;AAORT,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAfD,MAeO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,iBAFrB;AAGRc,kBAAAA,UAAU,EAAE,kCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACkC,oBAAjB;;AACA,gBAAId,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0CA,KAAK,KAAKA,KAAxD,EAA+D;AAC7D,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,kBAAAA,UAAU,EAAE,0BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,oBAAAA,UAAU,EAAE,6BAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIuB,SAAJ;;AACA,oBACIA,SAAS,GAAGT,KAAK,GAAG,CAArB,EAAyBS,SAAS,KAAKC,QAAQ,CAACD,SAAD,CADlD,EAEE;AACA,sBAAIhB,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,YADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,oBAAAA,UAAU,EAAE,gCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNlB,sBAAAA,UAAU,EAAE;AADN,qBAJA;AAORoB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACmC,aAAjB;;AACA,gBAAIf,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,gBAFrB;AAGRc,oBAAAA,UAAU,EAAE,oCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAjBD,MAiBO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,gBAFrB;AAGRc,kBAAAA,UAAU,EAAE,iCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACoC,YAAjB;;AACA,gBAAIhB,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0CA,KAAK,KAAKA,KAAxD,EAA+D;AAC7D,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,eAFrB;AAGRc,kBAAAA,UAAU,EAAE,0BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,eAFrB;AAGRc,oBAAAA,UAAU,EAAE,6BAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIuB,SAAJ;;AACA,oBACIA,SAAS,GAAGT,KAAK,GAAG,CAArB,EAAyBS,SAAS,KAAKC,QAAQ,CAACD,SAAD,CADlD,EAEE;AACA,sBAAIhB,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,YADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,eAFrB;AAGRc,oBAAAA,UAAU,EAAE,gCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNlB,sBAAAA,UAAU,EAAE;AADN,qBAJA;AAORoB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACqC,OAAjB;;AACA,gBAAIjB,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0CA,KAAK,KAAKA,KAAxD,EAA+D;AAC7D,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,UAFrB;AAGRc,kBAAAA,UAAU,EAAE,0BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,UAFrB;AAGRc,oBAAAA,UAAU,EAAE,6BAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIuB,SAAJ;;AACA,oBACIA,SAAS,GAAGT,KAAK,GAAG,CAArB,EAAyBS,SAAS,KAAKC,QAAQ,CAACD,SAAD,CADlD,EAEE;AACA,sBAAIhB,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,YADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,UAFrB;AAGRc,oBAAAA,UAAU,EAAE,gCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNlB,sBAAAA,UAAU,EAAE;AADN,qBAJA;AAORoB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,WAxcD,MAwcO;AACL,gBAAIX,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,QAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACDjB,UAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,iBAAOC,MAAM,KAAK,CAAlB;AACD,SAleD;AAmeD,OA9ea,EAAd;;AA+eAf,MAAAA,OAAO,CAAC+C,MAAR,GAAiB;AACf9C,QAAAA,OAAO,EAAE,wCADM;AAEfC,QAAAA,GAAG,EAAE,yBAFU;AAGfC,QAAAA,KAAK,EAAE,yBAHQ;AAIfC,QAAAA,IAAI,EAAE,QAJS;AAKf4C,QAAAA,oBAAoB,EAAE,KALP;AAMfC,QAAAA,QAAQ,EAAE,CACR,kBADQ,EAER,qBAFQ,EAGR,gBAHQ,EAIR,sBAJQ,EAKR,eALQ,EAMR,cANQ,EAOR,SAPQ,CANK;AAefC,QAAAA,UAAU,EAAE;AACVpB,UAAAA,gBAAgB,EAAE;AAChBqB,YAAAA,IAAI,EAAE;AADU,WADR;AAIVV,UAAAA,mBAAmB,EAAE;AACnBrC,YAAAA,IAAI,EAAE,QADa;AAEnBgD,YAAAA,SAAS,EAAE;AAFQ,WAJX;AAQVV,UAAAA,cAAc,EAAE;AACdtC,YAAAA,IAAI,EAAE,QADQ;AAEdgD,YAAAA,SAAS,EAAE;AAFG,WARN;AAYVT,UAAAA,oBAAoB,EAAE;AACpBQ,YAAAA,IAAI,EAAE;AADc,WAZZ;AAeVP,UAAAA,aAAa,EAAE;AACbxC,YAAAA,IAAI,EAAE,QADO;AAEbI,YAAAA,OAAO,EAAE;AAFI,WAfL;AAmBVqC,UAAAA,YAAY,EAAE;AACZM,YAAAA,IAAI,EAAE;AADM,WAnBJ;AAsBVL,UAAAA,OAAO,EAAE;AACPK,YAAAA,IAAI,EAAE;AADC;AAtBC;AAfG,OAAjB;AA0CAnD,MAAAA,OAAO,CAACe,MAAR,GAAiB,IAAjB;AACAhB,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;;AACA,UAAIM,OAAO,GAAI,YAAY;AACzB,YAAIP,MAAM,GAAG,EAAb;AACA,YAAIC,OAAO,GAAG;AACZC,UAAAA,OAAO,EAAE,wCADG;AAEZC,UAAAA,GAAG,EAAE,yBAFO;AAGZC,UAAAA,KAAK,EAAE,yBAHK;AAIZC,UAAAA,IAAI,EAAE,QAJM;AAKZ4C,UAAAA,oBAAoB,EAAE,KALV;AAMZC,UAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,KAAV,CANE;AAOZC,UAAAA,UAAU,EAAE;AACVG,YAAAA,KAAK,EAAE;AACLjD,cAAAA,IAAI,EAAE,QADD;AAELI,cAAAA,OAAO,EAAE,CAFJ;AAGL8C,cAAAA,OAAO,EAAE;AACPC,gBAAAA,KAAK,EAAE;AADA;AAHJ,aADG;AAQVC,YAAAA,GAAG,EAAE;AACHpD,cAAAA,IAAI,EAAE;AADH;AARK;AAPA,SAAd;AAoBAL,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,YAAIM,OAAO,GAAG;AACZL,UAAAA,OAAO,EAAE,wCADG;AAEZC,UAAAA,GAAG,EAAE,oBAFO;AAGZC,UAAAA,KAAK,EAAE,oBAHK;AAIZC,UAAAA,IAAI,EAAE,SAJM;AAKZG,UAAAA,UAAU,EAAE,CALA;AAMZC,UAAAA,OAAO,EAAE;AANG,SAAd;AAQAT,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYO,OAAZ;AACA,eAAO,SAASR,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,cAAIC,OAAO,GAAG,IAAd;AACA,cAAIC,MAAM,GAAG,CAAb;;AACA,cAAIN,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,gBAAIS,OAAO,GAAGH,MAAd;AACA,gBAAII,MAAM,GAAG,IAAb;;AACA,iBAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,kBAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,IADR,IAEAA,IAAI,IAAI,aAFR,IAGAA,IAAI,IAAI,sBAHR,IAIAA,IAAI,IAAI,kBAJR,IAKAA,IAAI,IAAI,aALR,IAMAA,IAAI,IAAI,iBANR,IAOAA,IAAI,IAAI,WAPR,IAQAA,IAAI,IAAI,kBATU,CAApB;;AAWA,kBAAIC,aAAJ,EAAmB;AACjBF,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,sBADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,wBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,mBAJA;AAORO,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF;;AACD,gBAAIc,KAAK,GAAGpB,IAAI,CAACgD,EAAjB;;AACA,gBAAI5B,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;;AACA,kBAAIc,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsC,CAACb,KAAK,CAACC,OAAN,CAAcY,KAAd,CAA3C,EAAiE;AAC/D,oBAAI6B,OAAO,GAAG3C,MAAd;AACA,oBAAI4C,MAAM,GAAG,IAAb;;AACA,qBAAK,IAAIC,IAAT,IAAiB/B,KAAjB,EAAwB;AACtB,sBAAIgC,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,OADR,IAEAA,IAAI,IAAI,KAHU,CAApB;;AAKA,sBAAIC,aAAJ,EAAmB;AACjBF,oBAAAA,MAAM,GAAG,KAAT;AACA,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,sBADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,KAFrB;AAGRc,sBAAAA,UAAU,EACR,+CAJM;AAKRC,sBAAAA,MAAM,EAAE;AACNC,wBAAAA,kBAAkB,EAAE,KAAKkC,IAAL,GAAY;AAD1B,uBALA;AAQRjC,sBAAAA,OAAO,EAAE;AARD,qBAAV;AAUA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;AACF;;AACD,oBAAI+C,KAAK,GAAGjC,KAAK,CAACwB,KAAlB;;AACA,oBAAIS,KAAK,KAAK/B,SAAd,EAAyB;AACvB4B,kBAAAA,MAAM,GAAG,KAAT;AACA,sBAAIrC,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,UADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,KAFrB;AAGRc,oBAAAA,UAAU,EAAE,mCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNO,sBAAAA,eAAe,EAAE;AADX,qBAJA;AAORL,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP,iBAdD,MAcO;AACL,sBAAIgD,MAAM,GAAGhD,MAAb;;AACA,sBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBAAIE,OAAO,GAAGnC,KAAK,IAAIA,KAAK,CAAC2B,GAA7B;;AACA,wBACGQ,OAAO,KAAKjC,SAAZ,IAAyB,OAAOiC,OAAP,IAAkB,QAA5C,IACAF,KAAK,GAAGE,OADR,IAEAF,KAAK,KAAKA,KAHZ,EAIE;AACA,0BAAIxC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,SADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,wBAAAA,UAAU,EACR,mDAJM;AAKRC,wBAAAA,MAAM,EAAE;AACNU,0BAAAA,UAAU,EAAE,IADN;AAENC,0BAAAA,KAAK,EAAE4B,OAFD;AAGN3B,0BAAAA,SAAS,EAAE;AAHL,yBALA;AAURV,wBAAAA,OAAO,EAAE,kBAAkBqC;AAVnB,uBAAV;AAYA,0BAAIlD,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;;AACD,wBAAI+C,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,0BAAIxC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,SADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,wBAAAA,UAAU,EACR,mDAJM;AAKRC,wBAAAA,MAAM,EAAE;AACNU,0BAAAA,UAAU,EAAE,IADN;AAENC,0BAAAA,KAAK,EAAE,CAFD;AAGNC,0BAAAA,SAAS,EAAE;AAHL,yBALA;AAURV,wBAAAA,OAAO,EAAE;AAVD,uBAAV;AAYA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;AACF,mBAxCD,MAwCO;AACL,wBAAIO,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,MADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,sBAAAA,UAAU,EACR,gDAJM;AAKRC,sBAAAA,MAAM,EAAE;AACNrB,wBAAAA,IAAI,EAAE;AADA,uBALA;AAQRuB,sBAAAA,OAAO,EAAE;AARD,qBAAV;AAUA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;;AACD,sBAAI4C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;;AACD,oBAAIlC,KAAK,CAAC2B,GAAN,KAAczB,SAAlB,EAA6B;AAC3B4B,kBAAAA,MAAM,GAAG,KAAT;AACA,sBAAIrC,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,UADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,KAFrB;AAGRc,oBAAAA,UAAU,EAAE,mCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNO,sBAAAA,eAAe,EAAE;AADX,qBAJA;AAORL,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP,iBAdD,MAcO;AACL,sBAAIgD,MAAM,GAAGhD,MAAb;;AACA,sBAAI,OAAOc,KAAK,CAAC2B,GAAb,KAAqB,QAAzB,EAAmC;AACjC,wBAAIlC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,MADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,SAFrB;AAGRc,sBAAAA,UAAU,EACR,8CAJM;AAKRC,sBAAAA,MAAM,EAAE;AACNrB,wBAAAA,IAAI,EAAE;AADA,uBALA;AAQRuB,sBAAAA,OAAO,EAAE;AARD,qBAAV;AAUA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;;AACD,sBAAI4C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;AACF,eArID,MAqIO;AACL,oBAAIzC,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,KAFrB;AAGRc,kBAAAA,UAAU,EAAE,+BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACwD,WAAjB;;AACA,gBAAIpC,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,cAFrB;AAGRc,oBAAAA,UAAU,EAAE,kCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAjBD,MAiBO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,cAFrB;AAGRc,kBAAAA,UAAU,EAAE,+BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAACyD,oBAAjB;;AACA,gBAAIrC,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,oBAAAA,UAAU,EAAE,2CAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAjBD,MAiBO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,kBAAAA,UAAU,EAAE,wCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAAC0D,gBAAjB;;AACA,gBAAItC,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,mBAFrB;AAGRc,oBAAAA,UAAU,EAAE,uCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAjBD,MAiBO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,mBAFrB;AAGRc,kBAAAA,UAAU,EAAE,oCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAAC2D,WAAjB;;AACA,gBAAIvC,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,cAFrB;AAGRc,oBAAAA,UAAU,EAAE,kCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAjBD,MAiBO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,cAFrB;AAGRc,kBAAAA,UAAU,EAAE,+BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAAC4D,eAAjB;;AACA,gBAAIxC,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,kBAFrB;AAGRc,oBAAAA,UAAU,EAAE,sCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAjBD,MAiBO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,kBAFrB;AAGRc,kBAAAA,UAAU,EAAE,mCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAAC6D,SAAjB;;AACA,gBAAIzC,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;AACA,kBAAIgD,MAAM,GAAGhD,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0CA,KAAK,KAAKA,KAAxD,EAA+D;AAC7D,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,kBAAAA,UAAU,EAAE,0BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,oBAAAA,UAAU,EAAE,6BAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIwD,SAAJ;;AACA,oBACIA,SAAS,GAAG1C,KAAK,GAAG,CAArB,EAAyB0C,SAAS,KAAKhC,QAAQ,CAACgC,SAAD,CADlD,EAEE;AACA,sBAAIjD,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,YADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,oBAAAA,UAAU,EAAE,gCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNlB,sBAAAA,UAAU,EAAE;AADN,qBAJA;AAORoB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAI4C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACA,kBAAIvB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIA,MAAM,GAAGnB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,EAAR,IAAcA,KAAK,KAAKA,KAA5B,EAAmC;AACjC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,oBAAAA,UAAU,EAAE,wCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,EAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAAC+D,gBAAjB;;AACA,gBAAI3C,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,mBAFrB;AAGRc,oBAAAA,UAAU,EAAE,uCAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBAJA;AASRV,oBAAAA,OAAO,EAAE;AATD,mBAAV;AAWA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF,eAjBD,MAiBO;AACL,oBAAIO,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,mBAFrB;AAGRc,kBAAAA,UAAU,EAAE,oCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,WA/kBD,MA+kBO;AACL,gBAAIX,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,QAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACDjB,UAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,iBAAOC,MAAM,KAAK,CAAlB;AACD,SAzmBD;AA0mBD,OA1oBa,EAAd;;AA2oBAT,MAAAA,OAAO,CAACyC,MAAR,GAAiB;AACf9C,QAAAA,OAAO,EAAE,wCADM;AAEfC,QAAAA,GAAG,EAAE,8BAFU;AAGfC,QAAAA,KAAK,EAAE,8BAHQ;AAIfC,QAAAA,IAAI,EAAE,QAJS;AAKf4C,QAAAA,oBAAoB,EAAE,KALP;AAMfC,QAAAA,QAAQ,EAAE,CACR,IADQ,EAER,aAFQ,EAGR,sBAHQ,EAIR,kBAJQ,EAKR,aALQ,EAMR,iBANQ,EAOR,WAPQ,EAQR,kBARQ,CANK;AAgBfC,QAAAA,UAAU,EAAE;AACVO,UAAAA,EAAE,EAAE;AACFN,YAAAA,IAAI,EAAE;AADJ,WADM;AAIVc,UAAAA,WAAW,EAAE;AACX7D,YAAAA,IAAI,EAAE,QADK;AAEXI,YAAAA,OAAO,EAAE;AAFE,WAJH;AAQV0D,UAAAA,oBAAoB,EAAE;AACpB9D,YAAAA,IAAI,EAAE,QADc;AAEpBI,YAAAA,OAAO,EAAE;AAFW,WARZ;AAYV2D,UAAAA,gBAAgB,EAAE;AAChB/D,YAAAA,IAAI,EAAE,QADU;AAEhBI,YAAAA,OAAO,EAAE;AAFO,WAZR;AAgBV4D,UAAAA,WAAW,EAAE;AACXhE,YAAAA,IAAI,EAAE,QADK;AAEXI,YAAAA,OAAO,EAAE;AAFE,WAhBH;AAoBV6D,UAAAA,eAAe,EAAE;AACfjE,YAAAA,IAAI,EAAE,QADS;AAEfI,YAAAA,OAAO,EAAE;AAFM,WApBP;AAwBV8D,UAAAA,SAAS,EAAE;AACTG,YAAAA,KAAK,EAAE,CACL;AACEtB,cAAAA,IAAI,EAAE;AADR,aADK,EAIL;AACEG,cAAAA,OAAO,EAAE;AADX,aAJK;AADE,WAxBD;AAkCVkB,UAAAA,gBAAgB,EAAE;AAChBpE,YAAAA,IAAI,EAAE,QADU;AAEhBI,YAAAA,OAAO,EAAE;AAFO;AAlCR;AAhBG,OAAjB;AAwDAF,MAAAA,OAAO,CAACS,MAAR,GAAiB,IAAjB;AACAhB,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYO,OAAZ;;AACA,UAAIoE,OAAO,GAAI,YAAY;AACzB,YAAI3E,MAAM,GAAG,EAAb;AACA,YAAIC,OAAO,GAAG;AACZC,UAAAA,OAAO,EAAE,wCADG;AAEZC,UAAAA,GAAG,EAAE,WAFO;AAGZC,UAAAA,KAAK,EAAE,WAHK;AAIZC,UAAAA,IAAI,EAAE,QAJM;AAKZ4C,UAAAA,oBAAoB,EAAE,KALV;AAMZC,UAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,KAAV,CANE;AAOZC,UAAAA,UAAU,EAAE;AACVG,YAAAA,KAAK,EAAE;AACLsB,cAAAA,KAAK,EAAE,CACL;AACEvE,gBAAAA,IAAI,EAAE,QADR;AAEEwE,gBAAAA,MAAM,EAAE;AAFV,eADK,EAKL;AACExE,gBAAAA,IAAI,EAAE,QADR;AAEEwE,gBAAAA,MAAM,EAAE;AAFV,eALK,CADF;AAWLC,cAAAA,aAAa,EAAE;AACbtB,gBAAAA,KAAK,EAAE;AADM;AAXV,aADG;AAgBVC,YAAAA,GAAG,EAAE;AACHmB,cAAAA,KAAK,EAAE,CACL;AACEvE,gBAAAA,IAAI,EAAE,QADR;AAEEwE,gBAAAA,MAAM,EAAE;AAFV,eADK,EAKL;AACExE,gBAAAA,IAAI,EAAE,QADR;AAEEwE,gBAAAA,MAAM,EAAE;AAFV,eALK;AADJ;AAhBK;AAPA,SAAd;AAqCA7E,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,YAAIM,OAAO,GAAG;AACZL,UAAAA,OAAO,EAAE,wCADG;AAEZC,UAAAA,GAAG,EAAE,SAFO;AAGZC,UAAAA,KAAK,EAAE,SAHK;AAIZC,UAAAA,IAAI,EAAE,SAJM;AAKZG,UAAAA,UAAU,EAAE;AALA,SAAd;AAOAR,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYO,OAAZ;AACA,eAAO,SAASR,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,cAAIC,OAAO,GAAG,IAAd;AACA,cAAIC,MAAM,GAAG,CAAb;;AACA,cAAIN,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,gBAAIS,OAAO,GAAGH,MAAd;AACA,gBAAII,MAAM,GAAG,IAAb;;AACA,iBAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,kBAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,qBADR,IAEAA,IAAI,IAAI,sBAHU,CAApB;;AAKA,kBAAIC,aAAJ,EAAmB;AACjBF,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,sBADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,wBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,mBAJA;AAORO,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF;;AACD,gBAAIc,KAAK,GAAGpB,IAAI,CAACqE,mBAAjB;;AACA,gBAAIjD,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;;AACA,kBAAIc,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsC,CAACb,KAAK,CAACC,OAAN,CAAcY,KAAd,CAA3C,EAAiE;AAC/D,oBAAI6B,OAAO,GAAG3C,MAAd;AACA,oBAAI4C,MAAM,GAAG,IAAb;;AACA,qBAAK,IAAIC,IAAT,IAAiB/B,KAAjB,EAAwB;AACtB,sBAAIgC,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,OADR,IAEAA,IAAI,IAAI,KAHU,CAApB;;AAKA,sBAAIC,aAAJ,EAAmB;AACjBF,oBAAAA,MAAM,GAAG,KAAT;AACA,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,sBADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,sBAFrB;AAGRc,sBAAAA,UAAU,EAAE,iCAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNC,wBAAAA,kBAAkB,EAAE,KAAKkC,IAAL,GAAY;AAD1B,uBAJA;AAORjC,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;AACF;;AACD,oBAAI+C,KAAK,GAAGjC,KAAK,CAACwB,KAAlB;;AACA,oBAAIS,KAAK,KAAK/B,SAAd,EAAyB;AACvB4B,kBAAAA,MAAM,GAAG,KAAT;AACA,sBAAIrC,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,UADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,sBAFrB;AAGRc,oBAAAA,UAAU,EAAE,qBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNO,sBAAAA,eAAe,EAAE;AADX,qBAJA;AAORL,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP,iBAdD,MAcO;AACL,sBAAIgD,MAAM,GAAGhD,MAAb;AACA,sBAAIgE,OAAO,GAAGhE,MAAd;AAAA,sBACEiE,UAAU,GAAG,KADf;AAAA,sBAEErB,MAAM,GAAG,KAFX;AAAA,sBAGEsB,eAAe,GAAG,IAHpB;AAIA,sBAAIC,MAAM,GAAGnE,MAAb;;AACA,sBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBAAI,CAACpE,OAAO,CAACyF,IAAR,CAAaC,IAAb,CAAkBtB,KAAlB,CAAL,EAA+B;AAC7B,0BAAIxC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,QADD;AAERb,wBAAAA,QAAQ,EACN,CAACA,QAAQ,IAAI,EAAb,IAAmB,4BAHb;AAIRc,wBAAAA,UAAU,EACR,4CALM;AAMRC,wBAAAA,MAAM,EAAE;AACNmD,0BAAAA,MAAM,EAAE;AADF,yBANA;AASRjD,wBAAAA,OAAO,EAAE;AATD,uBAAV;AAWA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;AACF,mBAjBD,MAiBO;AACL,wBAAIO,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,MADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,4BAFrB;AAGRc,sBAAAA,UAAU,EAAE,0CAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNrB,wBAAAA,IAAI,EAAE;AADA,uBAJA;AAORuB,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;;AACD,sBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,sBAAIG,MAAJ,EAAY;AACV1B,oBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,oBAAAA,eAAe,GAAG,CAAlB;AACD;;AACD,sBAAIC,MAAM,GAAGnE,MAAb;;AACA,sBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBAAI,CAACpE,OAAO,CAAC,WAAD,CAAP,CAAqB0F,IAArB,CAA0BtB,KAA1B,CAAL,EAAuC;AACrC,0BAAIxC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,QADD;AAERb,wBAAAA,QAAQ,EACN,CAACA,QAAQ,IAAI,EAAb,IAAmB,4BAHb;AAIRc,wBAAAA,UAAU,EACR,4CALM;AAMRC,wBAAAA,MAAM,EAAE;AACNmD,0BAAAA,MAAM,EAAE;AADF,yBANA;AASRjD,wBAAAA,OAAO,EAAE;AATD,uBAAV;AAWA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;AACF,mBAjBD,MAiBO;AACL,wBAAIO,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,MADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,4BAFrB;AAGRc,sBAAAA,UAAU,EAAE,0CAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNrB,wBAAAA,IAAI,EAAE;AADA,uBAJA;AAORuB,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;;AACD,sBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,sBAAIG,MAAM,IAAIL,UAAd,EAA0B;AACxBrB,oBAAAA,MAAM,GAAG,KAAT;AACAsB,oBAAAA,eAAe,GAAG,CAACA,eAAD,EAAkB,CAAlB,CAAlB;AACD,mBAHD,MAGO;AACL,wBAAII,MAAJ,EAAY;AACV1B,sBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,sBAAAA,eAAe,GAAG,CAAlB;AACD;AACF;;AACD,sBAAI,CAACtB,MAAL,EAAa;AACX,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,OADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,4BAFrB;AAGRc,sBAAAA,UAAU,EAAE,mCAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACN6D,wBAAAA,cAAc,EAAEL;AADV,uBAJA;AAORtD,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP,mBAbD,MAaO;AACLA,oBAAAA,MAAM,GAAGgE,OAAT;;AACA,wBAAIjE,OAAO,KAAK,IAAhB,EAAsB;AACpB,0BAAIiE,OAAJ,EAAajE,OAAO,CAACyE,MAAR,GAAiBR,OAAjB,CAAb,KACKjE,OAAO,GAAG,IAAV;AACN;AACF;;AACD,sBAAI6C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;;AACD,oBAAID,KAAK,GAAGjC,KAAK,CAAC2B,GAAlB;;AACA,oBAAIM,KAAK,KAAK/B,SAAd,EAAyB;AACvB4B,kBAAAA,MAAM,GAAG,KAAT;AACA,sBAAIrC,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,UADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,sBAFrB;AAGRc,oBAAAA,UAAU,EAAE,qBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNO,sBAAAA,eAAe,EAAE;AADX,qBAJA;AAORL,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP,iBAdD,MAcO;AACL,sBAAIgD,MAAM,GAAGhD,MAAb;AACA,sBAAIgE,OAAO,GAAGhE,MAAd;AAAA,sBACEiE,UAAU,GAAG,KADf;AAAA,sBAEErB,MAAM,GAAG,KAFX;AAAA,sBAGEsB,eAAe,GAAG,IAHpB;AAIA,sBAAIC,MAAM,GAAGnE,MAAb;;AACA,sBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBAAI,CAACpE,OAAO,CAACyF,IAAR,CAAaC,IAAb,CAAkBtB,KAAlB,CAAL,EAA+B;AAC7B,0BAAIxC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,QADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,0BAFrB;AAGRc,wBAAAA,UAAU,EAAE,0CAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNmD,0BAAAA,MAAM,EAAE;AADF,yBAJA;AAORjD,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;AACF,mBAfD,MAeO;AACL,wBAAIO,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,MADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,0BAFrB;AAGRc,sBAAAA,UAAU,EAAE,wCAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNrB,wBAAAA,IAAI,EAAE;AADA,uBAJA;AAORuB,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;;AACD,sBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,sBAAIG,MAAJ,EAAY;AACV1B,oBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,oBAAAA,eAAe,GAAG,CAAlB;AACD;;AACD,sBAAIC,MAAM,GAAGnE,MAAb;;AACA,sBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBAAI,CAACpE,OAAO,CAAC,WAAD,CAAP,CAAqB0F,IAArB,CAA0BtB,KAA1B,CAAL,EAAuC;AACrC,0BAAIxC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,QADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,0BAFrB;AAGRc,wBAAAA,UAAU,EAAE,0CAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNmD,0BAAAA,MAAM,EAAE;AADF,yBAJA;AAORjD,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;AACF,mBAfD,MAeO;AACL,wBAAIO,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,MADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,0BAFrB;AAGRc,sBAAAA,UAAU,EAAE,wCAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNrB,wBAAAA,IAAI,EAAE;AADA,uBAJA;AAORuB,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;;AACD,sBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,sBAAIG,MAAM,IAAIL,UAAd,EAA0B;AACxBrB,oBAAAA,MAAM,GAAG,KAAT;AACAsB,oBAAAA,eAAe,GAAG,CAACA,eAAD,EAAkB,CAAlB,CAAlB;AACD,mBAHD,MAGO;AACL,wBAAII,MAAJ,EAAY;AACV1B,sBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,sBAAAA,eAAe,GAAG,CAAlB;AACD;AACF;;AACD,sBAAI,CAACtB,MAAL,EAAa;AACX,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,OADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,0BAFrB;AAGRc,sBAAAA,UAAU,EAAE,iCAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACN6D,wBAAAA,cAAc,EAAEL;AADV,uBAJA;AAORtD,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP,mBAbD,MAaO;AACLA,oBAAAA,MAAM,GAAGgE,OAAT;;AACA,wBAAIjE,OAAO,KAAK,IAAhB,EAAsB;AACpB,0BAAIiE,OAAJ,EAAajE,OAAO,CAACyE,MAAR,GAAiBR,OAAjB,CAAb,KACKjE,OAAO,GAAG,IAAV;AACN;AACF;;AACD,sBAAI6C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;AACF,eAzQD,MAyQO;AACL,oBAAIzC,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,sBAFrB;AAGRc,kBAAAA,UAAU,EAAE,iBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,gBAAIJ,KAAK,GAAGpB,IAAI,CAAC+E,oBAAjB;;AACA,gBAAI3D,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;AACA,kBAAImB,MAAM,GAAGnB,MAAb;AACA,kBAAIgD,MAAM,GAAGhD,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0CA,KAAK,KAAKA,KAAxD,EAA+D;AAC7D,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,kBAAAA,UAAU,EAAE,eAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAI0C,SAAJ;;AACA,oBACIA,SAAS,GAAG1C,KAAK,GAAG,CAArB,EAAyB0C,SAAS,KAAKhC,QAAQ,CAACgC,SAAD,CADlD,EAEE;AACA,sBAAIjD,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,YADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,oBAAAA,UAAU,EAAE,qBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNlB,sBAAAA,UAAU,EAAE;AADN,qBAJA;AAORoB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAI4C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACA,kBAAIvB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIA,MAAM,GAAGnB,MAAb;;AACA,kBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,oBAAIA,KAAK,GAAG,MAAR,IAAkBA,KAAK,KAAKA,KAAhC,EAAuC;AACrC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,oBAAAA,UAAU,EACR,mDAJM;AAKRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,MAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBALA;AAURV,oBAAAA,OAAO,EAAE;AAVD,mBAAV;AAYA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIc,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,sBAAIP,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,SADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,uBAFrB;AAGRc,oBAAAA,UAAU,EACR,mDAJM;AAKRC,oBAAAA,MAAM,EAAE;AACNU,sBAAAA,UAAU,EAAE,IADN;AAENC,sBAAAA,KAAK,EAAE,CAFD;AAGNC,sBAAAA,SAAS,EAAE;AAHL,qBALA;AAURV,oBAAAA,OAAO,EAAE;AAVD,mBAAV;AAYA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,kBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,WAnaD,MAmaO;AACL,gBAAIX,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,QAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACDjB,UAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,iBAAOC,MAAM,KAAK,CAAlB;AACD,SA7bD;AA8bD,OA9ea,EAAd;;AA+eA2D,MAAAA,OAAO,CAAC3B,MAAR,GAAiB;AACf9C,QAAAA,OAAO,EAAE,wCADM;AAEfC,QAAAA,GAAG,EAAE,yBAFU;AAGfC,QAAAA,KAAK,EAAE,yBAHQ;AAIfC,QAAAA,IAAI,EAAE,QAJS;AAKf4C,QAAAA,oBAAoB,EAAE,KALP;AAMfC,QAAAA,QAAQ,EAAE,CAAC,qBAAD,EAAwB,sBAAxB,CANK;AAOfC,QAAAA,UAAU,EAAE;AACV4B,UAAAA,mBAAmB,EAAE;AACnB3B,YAAAA,IAAI,EAAE;AADa,WADX;AAIVqC,UAAAA,oBAAoB,EAAE;AACpBf,YAAAA,KAAK,EAAE,CACL;AACEtB,cAAAA,IAAI,EAAE;AADR,aADK,EAIL;AACE3C,cAAAA,OAAO,EAAE,CADX;AAEE8C,cAAAA,OAAO,EAAE;AAFX,aAJK;AADa;AAJZ;AAPG,OAAjB;AAwBAoB,MAAAA,OAAO,CAAC3D,MAAR,GAAiB,IAAjB;AACAhB,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAY2E,OAAZ;;AACA,UAAIe,OAAO,GAAI,YAAY;AACzB,YAAI1F,MAAM,GAAG,EAAb;;AACA,YAAIC,OAAO,GAAI,YAAY;AACzB,cAAI0F,QAAQ,GAAG,IAAIC,MAAJ,CAAW,4BAAX,CAAf;AACA,cAAI5F,MAAM,GAAG,EAAb;AACA,cAAIC,OAAO,GAAG;AACZC,YAAAA,OAAO,EAAE,wCADG;AAEZC,YAAAA,GAAG,EAAE,UAFO;AAGZC,YAAAA,KAAK,EAAE,UAHK;AAIZC,YAAAA,IAAI,EAAE,QAJM;AAKZwF,YAAAA,OAAO,EAAE;AALG,WAAd;AAOA7F,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,cAAIM,OAAO,GAAG;AACZL,YAAAA,OAAO,EAAE,wCADG;AAEZC,YAAAA,GAAG,EAAE,WAFO;AAGZC,YAAAA,KAAK,EAAE,WAHK;AAIZC,YAAAA,IAAI,EAAE,QAJM;AAKZ4C,YAAAA,oBAAoB,EAAE,KALV;AAMZC,YAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,KAAV,CANE;AAOZC,YAAAA,UAAU,EAAE;AACVG,cAAAA,KAAK,EAAE;AACLsB,gBAAAA,KAAK,EAAE,CACL;AACEvE,kBAAAA,IAAI,EAAE,QADR;AAEEwE,kBAAAA,MAAM,EAAE;AAFV,iBADK,EAKL;AACExE,kBAAAA,IAAI,EAAE,QADR;AAEEwE,kBAAAA,MAAM,EAAE;AAFV,iBALK,CADF;AAWLC,gBAAAA,aAAa,EAAE;AACbtB,kBAAAA,KAAK,EAAE;AADM;AAXV,eADG;AAgBVC,cAAAA,GAAG,EAAE;AACHmB,gBAAAA,KAAK,EAAE,CACL;AACEvE,kBAAAA,IAAI,EAAE,QADR;AAEEwE,kBAAAA,MAAM,EAAE;AAFV,iBADK,EAKL;AACExE,kBAAAA,IAAI,EAAE,QADR;AAEEwE,kBAAAA,MAAM,EAAE;AAFV,iBALK;AADJ;AAhBK;AAPA,WAAd;AAqCA7E,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAYO,OAAZ;AACA,cAAIoE,OAAO,GAAG;AACZzE,YAAAA,OAAO,EAAE,wCADG;AAEZC,YAAAA,GAAG,EAAE,iBAFO;AAGZC,YAAAA,KAAK,EAAE,iBAHK;AAIZC,YAAAA,IAAI,EAAE,QAJM;AAKZ4C,YAAAA,oBAAoB,EAAE,KALV;AAMZC,YAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,KAAV,CANE;AAOZC,YAAAA,UAAU,EAAE;AACVG,cAAAA,KAAK,EAAE;AACLjD,gBAAAA,IAAI,EAAE,QADD;AAELI,gBAAAA,OAAO,EAAE,CAFJ;AAGL8C,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,KAAK,EAAE;AADA;AAHJ,eADG;AAQVC,cAAAA,GAAG,EAAE;AACHpD,gBAAAA,IAAI,EAAE,QADH;AAEHkD,gBAAAA,OAAO,EAAE;AAFN;AARK;AAPA,WAAd;AAqBAvD,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAY2E,OAAZ;AACA,iBAAO,SAAS5E,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,gBAAIC,OAAO,GAAG,IAAd;AACA,gBAAIC,MAAM,GAAG,CAAb;;AACA,gBAAIN,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,kBAAIS,OAAO,GAAGH,MAAd;AACA,kBAAII,MAAM,GAAG,IAAb;;AACA,mBAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,oBAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,MADR,IAEAA,IAAI,IAAI,OAFR,IAGAA,IAAI,IAAI,WAHR,IAIAA,IAAI,IAAI,uBALU,CAApB;;AAOA,oBAAIC,aAAJ,EAAmB;AACjBF,kBAAAA,MAAM,GAAG,KAAT;AACA,sBAAIG,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,sBADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,oBAAAA,UAAU,EAAE,wBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNC,sBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,qBAJA;AAORO,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;AACF;;AACD,kBAAIc,KAAK,GAAGpB,IAAI,CAACoF,IAAjB;;AACA,kBAAIhE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,UADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,YAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNO,oBAAAA,eAAe,EAAE;AADX,mBAJA;AAORL,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP,eAdD,MAcO;AACL,oBAAIkB,MAAM,GAAGlB,MAAb;;AACA,oBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,sBAAIjC,UAAU,CAACiC,KAAD,CAAV,GAAoB,CAAxB,EAA2B;AACzB,wBAAIP,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,WADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,sBAAAA,UAAU,EAAE,6BAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNW,wBAAAA,KAAK,EAAE;AADD,uBAJA;AAORT,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;AACF,iBAfD,MAeO;AACL,sBAAIO,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,MADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,oBAAAA,UAAU,EAAE,wBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNrB,sBAAAA,IAAI,EAAE;AADA,qBAJA;AAORuB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,kBAAIJ,KAAK,GAAGpB,IAAI,CAACqF,KAAjB;;AACA,kBAAIjE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,UADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,YAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNO,oBAAAA,eAAe,EAAE;AADX,mBAJA;AAORL,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP,eAdD,MAcO;AACL,oBAAIkB,MAAM,GAAGlB,MAAb;AACA,oBAAImB,MAAM,GAAGnB,MAAb;;AACA,oBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,sBAAI,CAAC6D,QAAQ,CAACN,IAAT,CAAcvD,KAAd,CAAL,EAA2B;AACzB,wBAAIP,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,SADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,QAFrB;AAGRc,sBAAAA,UAAU,EAAE,mBAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNmE,wBAAAA,OAAO,EAAE;AADH,uBAJA;AAORjE,sBAAAA,OAAO,EACL;AARM,qBAAV;AAUA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP;AACF,iBAhBD,MAgBO;AACL,sBAAIO,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,MADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,QAFrB;AAGRc,oBAAAA,UAAU,EAAE,gBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNrB,sBAAAA,IAAI,EAAE;AADA,qBAJA;AAORuB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,oBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,kBAAIJ,KAAK,GAAGpB,IAAI,CAACsF,SAAjB;;AACA,kBAAIlE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,UADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,YAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNO,oBAAAA,eAAe,EAAE;AADX,mBAJA;AAORL,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP,eAdD,MAcO;AACL,oBAAIkB,MAAM,GAAGlB,MAAb;AACA,oBAAImB,MAAM,GAAGnB,MAAb;;AACA,oBACEc,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEA,CAACb,KAAK,CAACC,OAAN,CAAcY,KAAd,CAHH,EAIE;AACA,sBAAI6B,OAAO,GAAG3C,MAAd;AACA,sBAAI4C,MAAM,GAAG,IAAb;;AACA,uBAAK,IAAIC,IAAT,IAAiB/B,KAAjB,EAAwB;AACtB,wBAAIgC,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,OADR,IAEAA,IAAI,IAAI,KAHU,CAApB;;AAKA,wBAAIC,aAAJ,EAAmB;AACjBF,sBAAAA,MAAM,GAAG,KAAT;AACA,0BAAIrC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,sBADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,wBAAAA,UAAU,EAAE,iCAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNC,0BAAAA,kBAAkB,EAAE,KAAKkC,IAAL,GAAY;AAD1B,yBAJA;AAORjC,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;AACF;;AACD,sBAAI+C,KAAK,GAAGjC,KAAK,CAACwB,KAAlB;;AACA,sBAAIS,KAAK,KAAK/B,SAAd,EAAyB;AACvB4B,oBAAAA,MAAM,GAAG,KAAT;AACA,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,UADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,sBAAAA,UAAU,EAAE,qBAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNO,wBAAAA,eAAe,EAAE;AADX,uBAJA;AAORL,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP,mBAdD,MAcO;AACL,wBAAIgD,MAAM,GAAGhD,MAAb;AACA,wBAAIgE,OAAO,GAAGhE,MAAd;AAAA,wBACEiE,UAAU,GAAG,KADf;AAAA,wBAEErB,MAAM,GAAG,KAFX;AAAA,wBAGEsB,eAAe,GAAG,IAHpB;AAIA,wBAAIC,MAAM,GAAGnE,MAAb;;AACA,wBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,0BAAI,CAACpE,OAAO,CAACyF,IAAR,CAAaC,IAAb,CAAkBtB,KAAlB,CAAL,EAA+B;AAC7B,4BAAIxC,GAAG,GAAG;AACRC,0BAAAA,OAAO,EAAE,QADD;AAERb,0BAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,kBAFrB;AAGRc,0BAAAA,UAAU,EACR,4CAJM;AAKRC,0BAAAA,MAAM,EAAE;AACNmD,4BAAAA,MAAM,EAAE;AADF,2BALA;AAQRjD,0BAAAA,OAAO,EAAE;AARD,yBAAV;AAUA,4BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,wBAAAA,MAAM;AACP;AACF,qBAhBD,MAgBO;AACL,0BAAIO,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,MADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,kBAFrB;AAGRc,wBAAAA,UAAU,EAAE,0CAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNrB,0BAAAA,IAAI,EAAE;AADA,yBAJA;AAORuB,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;;AACD,wBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,wBAAIG,MAAJ,EAAY;AACV1B,sBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,sBAAAA,eAAe,GAAG,CAAlB;AACD;;AACD,wBAAIC,MAAM,GAAGnE,MAAb;;AACA,wBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,0BAAI,CAACpE,OAAO,CAAC,WAAD,CAAP,CAAqB0F,IAArB,CAA0BtB,KAA1B,CAAL,EAAuC;AACrC,4BAAIxC,GAAG,GAAG;AACRC,0BAAAA,OAAO,EAAE,QADD;AAERb,0BAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,kBAFrB;AAGRc,0BAAAA,UAAU,EACR,4CAJM;AAKRC,0BAAAA,MAAM,EAAE;AACNmD,4BAAAA,MAAM,EAAE;AADF,2BALA;AAQRjD,0BAAAA,OAAO,EAAE;AARD,yBAAV;AAUA,4BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,wBAAAA,MAAM;AACP;AACF,qBAhBD,MAgBO;AACL,0BAAIO,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,MADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,kBAFrB;AAGRc,wBAAAA,UAAU,EAAE,0CAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNrB,0BAAAA,IAAI,EAAE;AADA,yBAJA;AAORuB,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;;AACD,wBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,wBAAIG,MAAM,IAAIL,UAAd,EAA0B;AACxBrB,sBAAAA,MAAM,GAAG,KAAT;AACAsB,sBAAAA,eAAe,GAAG,CAACA,eAAD,EAAkB,CAAlB,CAAlB;AACD,qBAHD,MAGO;AACL,0BAAII,MAAJ,EAAY;AACV1B,wBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,wBAAAA,eAAe,GAAG,CAAlB;AACD;AACF;;AACD,wBAAI,CAACtB,MAAL,EAAa;AACX,0BAAIrC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,OADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,kBAFrB;AAGRc,wBAAAA,UAAU,EAAE,mCAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACN6D,0BAAAA,cAAc,EAAEL;AADV,yBAJA;AAORtD,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP,qBAbD,MAaO;AACLA,sBAAAA,MAAM,GAAGgE,OAAT;;AACA,0BAAIjE,OAAO,KAAK,IAAhB,EAAsB;AACpB,4BAAIiE,OAAJ,EAAajE,OAAO,CAACyE,MAAR,GAAiBR,OAAjB,CAAb,KACKjE,OAAO,GAAG,IAAV;AACN;AACF;;AACD,wBAAI6C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;;AACD,sBAAID,KAAK,GAAGjC,KAAK,CAAC2B,GAAlB;;AACA,sBAAIM,KAAK,KAAK/B,SAAd,EAAyB;AACvB4B,oBAAAA,MAAM,GAAG,KAAT;AACA,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,UADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,sBAAAA,UAAU,EAAE,qBAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNO,wBAAAA,eAAe,EAAE;AADX,uBAJA;AAORL,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP,mBAdD,MAcO;AACL,wBAAIgD,MAAM,GAAGhD,MAAb;AACA,wBAAIgE,OAAO,GAAGhE,MAAd;AAAA,wBACEiE,UAAU,GAAG,KADf;AAAA,wBAEErB,MAAM,GAAG,KAFX;AAAA,wBAGEsB,eAAe,GAAG,IAHpB;AAIA,wBAAIC,MAAM,GAAGnE,MAAb;;AACA,wBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,0BAAI,CAACpE,OAAO,CAACyF,IAAR,CAAaC,IAAb,CAAkBtB,KAAlB,CAAL,EAA+B;AAC7B,4BAAIxC,GAAG,GAAG;AACRC,0BAAAA,OAAO,EAAE,QADD;AAERb,0BAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,gBAFrB;AAGRc,0BAAAA,UAAU,EACR,0CAJM;AAKRC,0BAAAA,MAAM,EAAE;AACNmD,4BAAAA,MAAM,EAAE;AADF,2BALA;AAQRjD,0BAAAA,OAAO,EAAE;AARD,yBAAV;AAUA,4BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,wBAAAA,MAAM;AACP;AACF,qBAhBD,MAgBO;AACL,0BAAIO,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,MADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,gBAFrB;AAGRc,wBAAAA,UAAU,EAAE,wCAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNrB,0BAAAA,IAAI,EAAE;AADA,yBAJA;AAORuB,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;;AACD,wBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,wBAAIG,MAAJ,EAAY;AACV1B,sBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,sBAAAA,eAAe,GAAG,CAAlB;AACD;;AACD,wBAAIC,MAAM,GAAGnE,MAAb;;AACA,wBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,0BAAI,CAACpE,OAAO,CAAC,WAAD,CAAP,CAAqB0F,IAArB,CAA0BtB,KAA1B,CAAL,EAAuC;AACrC,4BAAIxC,GAAG,GAAG;AACRC,0BAAAA,OAAO,EAAE,QADD;AAERb,0BAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,gBAFrB;AAGRc,0BAAAA,UAAU,EACR,0CAJM;AAKRC,0BAAAA,MAAM,EAAE;AACNmD,4BAAAA,MAAM,EAAE;AADF,2BALA;AAQRjD,0BAAAA,OAAO,EAAE;AARD,yBAAV;AAUA,4BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,wBAAAA,MAAM;AACP;AACF,qBAhBD,MAgBO;AACL,0BAAIO,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,MADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,gBAFrB;AAGRc,wBAAAA,UAAU,EAAE,wCAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNrB,0BAAAA,IAAI,EAAE;AADA,yBAJA;AAORuB,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;;AACD,wBAAIsE,MAAM,GAAGtE,MAAM,KAAKmE,MAAxB;;AACA,wBAAIG,MAAM,IAAIL,UAAd,EAA0B;AACxBrB,sBAAAA,MAAM,GAAG,KAAT;AACAsB,sBAAAA,eAAe,GAAG,CAACA,eAAD,EAAkB,CAAlB,CAAlB;AACD,qBAHD,MAGO;AACL,0BAAII,MAAJ,EAAY;AACV1B,wBAAAA,MAAM,GAAGqB,UAAU,GAAG,IAAtB;AACAC,wBAAAA,eAAe,GAAG,CAAlB;AACD;AACF;;AACD,wBAAI,CAACtB,MAAL,EAAa;AACX,0BAAIrC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,OADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,gBAFrB;AAGRc,wBAAAA,UAAU,EAAE,iCAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACN6D,0BAAAA,cAAc,EAAEL;AADV,yBAJA;AAORtD,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP,qBAbD,MAaO;AACLA,sBAAAA,MAAM,GAAGgE,OAAT;;AACA,0BAAIjE,OAAO,KAAK,IAAhB,EAAsB;AACpB,4BAAIiE,OAAJ,EAAajE,OAAO,CAACyE,MAAR,GAAiBR,OAAjB,CAAb,KACKjE,OAAO,GAAG,IAAV;AACN;AACF;;AACD,wBAAI6C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;AACF,iBA7QD,MA6QO;AACL,sBAAIzC,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,MADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,oBAAAA,UAAU,EAAE,iBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNrB,sBAAAA,IAAI,EAAE;AADA,qBAJA;AAORuB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,oBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,kBAAIJ,KAAK,GAAGpB,IAAI,CAACuF,qBAAjB;;AACA,kBAAInE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,UADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,YAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNO,oBAAAA,eAAe,EAAE;AADX,mBAJA;AAORL,kBAAAA,OAAO,EACL;AARM,iBAAV;AAUA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP,eAfD,MAeO;AACL,oBAAIkB,MAAM,GAAGlB,MAAb;AACA,oBAAImB,MAAM,GAAGnB,MAAb;;AACA,oBACEc,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEA,CAACb,KAAK,CAACC,OAAN,CAAcY,KAAd,CAHH,EAIE;AACA,sBAAI6B,OAAO,GAAG3C,MAAd;AACA,sBAAI4C,MAAM,GAAG,IAAb;;AACA,uBAAK,IAAIC,IAAT,IAAiB/B,KAAjB,EAAwB;AACtB,wBAAIgC,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,OADR,IAEAA,IAAI,IAAI,KAHU,CAApB;;AAKA,wBAAIC,aAAJ,EAAmB;AACjBF,sBAAAA,MAAM,GAAG,KAAT;AACA,0BAAIrC,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,sBADD;AAERb,wBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,wBAFrB;AAGRc,wBAAAA,UAAU,EAAE,uCAHJ;AAIRC,wBAAAA,MAAM,EAAE;AACNC,0BAAAA,kBAAkB,EAAE,KAAKkC,IAAL,GAAY;AAD1B,yBAJA;AAORjC,wBAAAA,OAAO,EAAE;AAPD,uBAAV;AASA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;AACF;;AACD,sBAAI+C,KAAK,GAAGjC,KAAK,CAACwB,KAAlB;;AACA,sBAAIS,KAAK,KAAK/B,SAAd,EAAyB;AACvB4B,oBAAAA,MAAM,GAAG,KAAT;AACA,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,UADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,wBAFrB;AAGRc,sBAAAA,UAAU,EAAE,2BAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNO,wBAAAA,eAAe,EAAE;AADX,uBAJA;AAORL,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP,mBAdD,MAcO;AACL,wBAAIgD,MAAM,GAAGhD,MAAb;;AACA,wBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,0BAAIE,OAAO,GAAGnC,KAAK,IAAIA,KAAK,CAAC2B,GAA7B;;AACA,0BACGQ,OAAO,KAAKjC,SAAZ,IAAyB,OAAOiC,OAAP,IAAkB,QAA5C,IACAF,KAAK,GAAGE,OADR,IAEAF,KAAK,KAAKA,KAHZ,EAIE;AACA,4BAAIxC,GAAG,GAAG;AACRC,0BAAAA,OAAO,EAAE,SADD;AAERb,0BAAAA,QAAQ,EACN,CAACA,QAAQ,IAAI,EAAb,IAAmB,8BAHb;AAIRc,0BAAAA,UAAU,EACR,2CALM;AAMRC,0BAAAA,MAAM,EAAE;AACNU,4BAAAA,UAAU,EAAE,IADN;AAENC,4BAAAA,KAAK,EAAE4B,OAFD;AAGN3B,4BAAAA,SAAS,EAAE;AAHL,2BANA;AAWRV,0BAAAA,OAAO,EAAE,kBAAkBqC;AAXnB,yBAAV;AAaA,4BAAIlD,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,wBAAAA,MAAM;AACP;;AACD,0BAAI+C,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,4BAAIxC,GAAG,GAAG;AACRC,0BAAAA,OAAO,EAAE,SADD;AAERb,0BAAAA,QAAQ,EACN,CAACA,QAAQ,IAAI,EAAb,IAAmB,8BAHb;AAIRc,0BAAAA,UAAU,EACR,2CALM;AAMRC,0BAAAA,MAAM,EAAE;AACNU,4BAAAA,UAAU,EAAE,IADN;AAENC,4BAAAA,KAAK,EAAE,CAFD;AAGNC,4BAAAA,SAAS,EAAE;AAHL,2BANA;AAWRV,0BAAAA,OAAO,EAAE;AAXD,yBAAV;AAaA,4BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,wBAAAA,MAAM;AACP;AACF,qBA1CD,MA0CO;AACL,0BAAIO,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,MADD;AAERb,wBAAAA,QAAQ,EACN,CAACA,QAAQ,IAAI,EAAb,IAAmB,8BAHb;AAIRc,wBAAAA,UAAU,EAAE,wCAJJ;AAKRC,wBAAAA,MAAM,EAAE;AACNrB,0BAAAA,IAAI,EAAE;AADA,yBALA;AAQRuB,wBAAAA,OAAO,EAAE;AARD,uBAAV;AAUA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;;AACD,wBAAI4C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;;AACD,sBAAID,KAAK,GAAGjC,KAAK,CAAC2B,GAAlB;;AACA,sBAAIM,KAAK,KAAK/B,SAAd,EAAyB;AACvB4B,oBAAAA,MAAM,GAAG,KAAT;AACA,wBAAIrC,GAAG,GAAG;AACRC,sBAAAA,OAAO,EAAE,UADD;AAERb,sBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,wBAFrB;AAGRc,sBAAAA,UAAU,EAAE,2BAHJ;AAIRC,sBAAAA,MAAM,EAAE;AACNO,wBAAAA,eAAe,EAAE;AADX,uBAJA;AAORL,sBAAAA,OAAO,EAAE;AAPD,qBAAV;AASA,wBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,oBAAAA,MAAM;AACP,mBAdD,MAcO;AACL,wBAAIgD,MAAM,GAAGhD,MAAb;;AACA,wBAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,0BAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,KAAKA,KAA7B,EAAoC;AAClC,4BAAIxC,GAAG,GAAG;AACRC,0BAAAA,OAAO,EAAE,SADD;AAERb,0BAAAA,QAAQ,EACN,CAACA,QAAQ,IAAI,EAAb,IAAmB,4BAHb;AAIRc,0BAAAA,UAAU,EAAE,yCAJJ;AAKRC,0BAAAA,MAAM,EAAE;AACNU,4BAAAA,UAAU,EAAE,IADN;AAENC,4BAAAA,KAAK,EAAE,GAFD;AAGNC,4BAAAA,SAAS,EAAE;AAHL,2BALA;AAURV,0BAAAA,OAAO,EAAE;AAVD,yBAAV;AAYA,4BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,wBAAAA,MAAM;AACP;AACF,qBAlBD,MAkBO;AACL,0BAAIO,GAAG,GAAG;AACRC,wBAAAA,OAAO,EAAE,MADD;AAERb,wBAAAA,QAAQ,EACN,CAACA,QAAQ,IAAI,EAAb,IAAmB,4BAHb;AAIRc,wBAAAA,UAAU,EAAE,sCAJJ;AAKRC,wBAAAA,MAAM,EAAE;AACNrB,0BAAAA,IAAI,EAAE;AADA,yBALA;AAQRuB,wBAAAA,OAAO,EAAE;AARD,uBAAV;AAUA,0BAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,sBAAAA,MAAM;AACP;;AACD,wBAAI4C,MAAM,GAAG5C,MAAM,KAAKgD,MAAxB;AACD;AACF,iBA7JD,MA6JO;AACL,sBAAIzC,GAAG,GAAG;AACRC,oBAAAA,OAAO,EAAE,MADD;AAERb,oBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,wBAFrB;AAGRc,oBAAAA,UAAU,EAAE,uBAHJ;AAIRC,oBAAAA,MAAM,EAAE;AACNrB,sBAAAA,IAAI,EAAE;AADA,qBAJA;AAORuB,oBAAAA,OAAO,EAAE;AAPD,mBAAV;AASA,sBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,kBAAAA,MAAM;AACP;;AACD,oBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,oBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,aA/mBD,MA+mBO;AACL,kBAAIX,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,QAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACDjB,YAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,mBAAOC,MAAM,KAAK,CAAlB;AACD,WAzoBD;AA0oBD,SAjtBa,EAAd;;AAktBAf,QAAAA,OAAO,CAAC+C,MAAR,GAAiB;AACf9C,UAAAA,OAAO,EAAE,wCADM;AAEfC,UAAAA,GAAG,EAAE,oBAFU;AAGfC,UAAAA,KAAK,EAAE,oBAHQ;AAIfC,UAAAA,IAAI,EAAE,QAJS;AAKf4C,UAAAA,oBAAoB,EAAE,KALP;AAMfC,UAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,WAAlB,EAA+B,uBAA/B,CANK;AAOfC,UAAAA,UAAU,EAAE;AACV2C,YAAAA,IAAI,EAAE;AACJzF,cAAAA,IAAI,EAAE,QADF;AAEJgD,cAAAA,SAAS,EAAE;AAFP,aADI;AAKV0C,YAAAA,KAAK,EAAE;AACL3C,cAAAA,IAAI,EAAE;AADD,aALG;AAQV4C,YAAAA,SAAS,EAAE;AACT5C,cAAAA,IAAI,EAAE;AADG,aARD;AAWV6C,YAAAA,qBAAqB,EAAE;AACrB7C,cAAAA,IAAI,EAAE;AADe;AAXb;AAPG,SAAjB;AAuBAnD,QAAAA,OAAO,CAACe,MAAR,GAAiB,IAAjB;AACAhB,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,eAAO,SAASF,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,cAAIC,OAAO,GAAG,IAAd;AACA,cAAIC,MAAM,GAAG,CAAb;AACA,cAAIF,QAAQ,KAAKkB,SAAjB,EAA4BlB,QAAQ,GAAGJ,IAAX;;AAC5B,cAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,gBAAIS,OAAO,GAAGH,MAAd;AACA,gBAAII,MAAM,GAAG,IAAb;;AACA,iBAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,kBAAIY,aAAa,GAAG,EAAE,SAASD,IAAI,IAAI,qBAAnB,CAApB;;AACA,kBAAIC,aAAJ,EAAmB;AACjBF,gBAAAA,MAAM,GAAG,KAAT;AACA,oBAAIG,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,sBADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,kBAAAA,UAAU,EAAE,wBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,mBAJA;AAORO,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF;;AACD,gBAAIc,KAAK,GAAGpB,IAAI,CAACwF,mBAAjB;;AACA,gBAAIpE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,UADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,YAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNO,kBAAAA,eAAe,EAAE;AADX,iBAJA;AAORL,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP,aAdD,MAcO;AACL,kBAAIkB,MAAM,GAAGlB,MAAb;;AACA,kBAAIC,KAAK,CAACC,OAAN,CAAcY,KAAd,CAAJ,EAA0B;AACxB,oBAAIqE,OAAO,GAAGnF,MAAd;AACA,oBAAII,MAAJ;;AACA,qBAAK,IAAIgF,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGtE,KAAK,CAAC0D,MAA5B,EAAoCY,EAAE,EAAtC,EAA0C;AACxC,sBAAIjE,MAAM,GAAGnB,MAAb;;AACA,sBACE,CAACf,OAAO,CACN6B,KAAK,CAACsE,EAAD,CADC,EAEN,CAACzF,QAAQ,IAAI,EAAb,IAAmB,uBAAnB,GAA6CyF,EAFvC,EAGNtE,KAHM,EAINsE,EAJM,EAKNtF,QALM,CADV,EAQE;AACA,wBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAGd,OAAO,CAACe,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAepG,OAAO,CAACe,MAAvB,CAAV;AACLA,oBAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,sBAAI/C,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACD;AACF,eApBD,MAoBO;AACL,oBAAIZ,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,MADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,sBAFrB;AAGRc,kBAAAA,UAAU,EAAE,uCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNrB,oBAAAA,IAAI,EAAE;AADA,mBAJA;AAORuB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,WA1ED,MA0EO;AACL,gBAAIX,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,QAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACDjB,UAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,iBAAOC,MAAM,KAAK,CAAlB;AACD,SArGD;AAsGD,OAn1Ba,EAAd;;AAo1BA0E,MAAAA,OAAO,CAAC1C,MAAR,GAAiB;AACf9C,QAAAA,OAAO,EAAE,wCADM;AAEfC,QAAAA,GAAG,EAAE,yBAFU;AAGfC,QAAAA,KAAK,EAAE,yBAHQ;AAIfC,QAAAA,IAAI,EAAE,QAJS;AAKf4C,QAAAA,oBAAoB,EAAE,KALP;AAMfC,QAAAA,QAAQ,EAAE,CAAC,qBAAD,CANK;AAOfC,QAAAA,UAAU,EAAE;AACV+C,UAAAA,mBAAmB,EAAE;AACnB7F,YAAAA,IAAI,EAAE,OADa;AAEnBiG,YAAAA,KAAK,EAAE;AACLlD,cAAAA,IAAI,EAAE;AADD;AAFY;AADX;AAPG,OAAjB;AAgBAsC,MAAAA,OAAO,CAAC1E,MAAR,GAAiB,IAAjB;AACAhB,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAY0F,OAAZ;AACA,aAAO,SAAS3F,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,YAAIC,OAAO,GAAG,IAAd;AACA,YAAIC,MAAM,GAAG,CAAb;AACA,YAAIF,QAAQ,KAAKkB,SAAjB,EAA4BlB,QAAQ,GAAGJ,IAAX;;AAC5B,YAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,cAAIS,OAAO,GAAGH,MAAd;AACA,cAAII,MAAM,GAAG,IAAb;;AACA,eAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,gBAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,YADR,IAEAA,IAAI,IAAI,iBAFR,IAGAA,IAAI,IAAI,YAHR,IAIAA,IAAI,IAAI,YALU,CAApB;;AAOA,gBAAIC,aAAJ,EAAmB;AACjBF,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,sBADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,wBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,iBAJA;AAORO,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;AACF;;AACD,cAAIN,IAAI,CAAC6F,UAAL,KAAoBvE,SAAxB,EAAmC;AACjCZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;;AACA,gBACE,CAACf,OAAO,CACNS,IAAI,CAAC6F,UADC,EAEN,CAAC5F,QAAQ,IAAI,EAAb,IAAmB,aAFb,EAGND,IAHM,EAIN,YAJM,EAKNI,QALM,CADV,EAQE;AACA,kBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAGd,OAAO,CAACe,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAepG,OAAO,CAACe,MAAvB,CAAV;AACLA,cAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,gBAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIxB,IAAI,CAAC8F,eAAL,KAAyBxE,SAA7B,EAAwC;AACtCZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;;AACA,gBACE,CAACT,OAAO,CACNG,IAAI,CAAC8F,eADC,EAEN,CAAC7F,QAAQ,IAAI,EAAb,IAAmB,kBAFb,EAGND,IAHM,EAIN,iBAJM,EAKNI,QALM,CADV,EAQE;AACA,kBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAGR,OAAO,CAACS,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAe9F,OAAO,CAACS,MAAvB,CAAV;AACLA,cAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,gBAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIxB,IAAI,CAAC+F,UAAL,KAAoBzE,SAAxB,EAAmC;AACjCZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;;AACA,gBACE,CAAC2D,OAAO,CACNjE,IAAI,CAAC+F,UADC,EAEN,CAAC9F,QAAQ,IAAI,EAAb,IAAmB,aAFb,EAGND,IAHM,EAIN,YAJM,EAKNI,QALM,CADV,EAQE;AACA,kBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG4D,OAAO,CAAC3D,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAe1B,OAAO,CAAC3D,MAAvB,CAAV;AACLA,cAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,gBAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIxB,IAAI,CAACgG,UAAL,KAAoB1E,SAAxB,EAAmC;AACjCZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;;AACA,gBACE,CAAC0E,OAAO,CACNhF,IAAI,CAACgG,UADC,EAEN,CAAC/F,QAAQ,IAAI,EAAb,IAAmB,aAFb,EAGND,IAHM,EAIN,YAJM,EAKNI,QALM,CADV,EAQE;AACA,kBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG2E,OAAO,CAAC1E,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAeX,OAAO,CAAC1E,MAAvB,CAAV;AACLA,cAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,gBAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,SAvJD,MAuJO;AACL,cAAIX,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,MADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,QAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNrB,cAAAA,IAAI,EAAE;AADA,aAJA;AAORuB,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP;;AACDjB,QAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,eAAOC,MAAM,KAAK,CAAlB;AACD,OAlLD;AAmLD,KApwFa,EAAd;;AAqwFAf,IAAAA,OAAO,CAAC+C,MAAR,GAAiB;AACf9C,MAAAA,OAAO,EAAE,wCADM;AAEfC,MAAAA,GAAG,EAAE,eAFU;AAGfC,MAAAA,KAAK,EAAE,eAHQ;AAIfC,MAAAA,IAAI,EAAE,QAJS;AAKf4C,MAAAA,oBAAoB,EAAE,KALP;AAMfC,MAAAA,QAAQ,EAAE,CAAC,YAAD,EAAe,iBAAf,EAAkC,YAAlC,EAAgD,YAAhD,CANK;AAOfC,MAAAA,UAAU,EAAE;AACVoD,QAAAA,UAAU,EAAE;AACVnD,UAAAA,IAAI,EAAE;AADI,SADF;AAIVoD,QAAAA,eAAe,EAAE;AACfpD,UAAAA,IAAI,EAAE;AADS,SAJP;AAOVqD,QAAAA,UAAU,EAAE;AACVrD,UAAAA,IAAI,EAAE;AADI,SAPF;AAUVsD,QAAAA,UAAU,EAAE;AACVtD,UAAAA,IAAI,EAAE;AADI;AAVF;AAPG,KAAjB;AAsBAnD,IAAAA,OAAO,CAACe,MAAR,GAAiB,IAAjB;AACAhB,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,WAAO,SAASF,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,UAAIC,OAAO,GAAG,IAAd;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIF,QAAQ,KAAKkB,SAAjB,EAA4BlB,QAAQ,GAAGJ,IAAX;;AAC5B,UAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,YAAIS,OAAO,GAAGH,MAAd;AACA,YAAII,MAAM,GAAG,IAAb;;AACA,aAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,cAAIY,aAAa,GAAG,EAAE,SAASD,IAAI,IAAI,MAAjB,IAA2BA,IAAI,IAAI,MAArC,CAApB;;AACA,cAAIC,aAAJ,EAAmB;AACjBF,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,sBADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,eAJA;AAORO,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;AACF;;AACD,YAAIc,KAAK,GAAGpB,IAAI,CAACoF,IAAjB;;AACA,YAAIhE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,UAAAA,MAAM,GAAG,KAAT;AACA,cAAIG,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,UADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,YAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNO,cAAAA,eAAe,EAAE;AADX,aAJA;AAORL,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP,SAdD,MAcO;AACL,cAAIkB,MAAM,GAAGlB,MAAb;;AACA,cAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,gBAAIjC,UAAU,CAACiC,KAAD,CAAV,GAAoB,CAAxB,EAA2B;AACzB,kBAAIP,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,WADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,gBAAAA,UAAU,EAAE,6BAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNW,kBAAAA,KAAK,EAAE;AADD,iBAJA;AAORT,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;AACF,WAfD,MAeO;AACL,gBAAIO,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACD,cAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,YAAIxB,IAAI,CAACA,IAAL,KAAcsB,SAAlB,EAA6B;AAC3BZ,UAAAA,MAAM,GAAG,KAAT;AACA,cAAIG,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,UADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,YAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNO,cAAAA,eAAe,EAAE;AADX,aAJA;AAORL,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP,SAdD,MAcO;AACL,cAAIkB,MAAM,GAAGlB,MAAb;;AACA,cACE,CAACf,OAAO,CACNS,IAAI,CAACA,IADC,EAEN,CAACC,QAAQ,IAAI,EAAb,IAAmB,OAFb,EAGND,IAHM,EAIN,MAJM,EAKNI,QALM,CADV,EAQE;AACA,gBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAGd,OAAO,CAACe,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAepG,OAAO,CAACe,MAAvB,CAAV;AACLA,YAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,cAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,OApGD,MAoGO;AACL,YAAIX,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,MADD;AAERb,UAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,UAAAA,UAAU,EAAE,QAHJ;AAIRC,UAAAA,MAAM,EAAE;AACNrB,YAAAA,IAAI,EAAE;AADA,WAJA;AAORuB,UAAAA,OAAO,EAAE;AAPD,SAAV;AASA,YAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,QAAAA,MAAM;AACP;;AACDjB,MAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,aAAOC,MAAM,KAAK,CAAlB;AACD,KA/HD;AAgID,GA/5Fa,EAAd;;AAg6FAT,EAAAA,OAAO,CAACyC,MAAR,GAAiB;AACf9C,IAAAA,OAAO,EAAE,wCADM;AAEfC,IAAAA,GAAG,EAAE,cAFU;AAGfC,IAAAA,KAAK,EAAE,cAHQ;AAIfC,IAAAA,IAAI,EAAE,QAJS;AAKf4C,IAAAA,oBAAoB,EAAE,KALP;AAMfC,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CANK;AAOfC,IAAAA,UAAU,EAAE;AACV2C,MAAAA,IAAI,EAAE;AACJzF,QAAAA,IAAI,EAAE,QADF;AAEJgD,QAAAA,SAAS,EAAE;AAFP,OADI;AAKV3C,MAAAA,IAAI,EAAE;AACJ0C,QAAAA,IAAI,EAAE;AADF;AALI;AAPG,GAAjB;AAiBA7C,EAAAA,OAAO,CAACS,MAAR,GAAiB,IAAjB;AACAhB,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYO,OAAZ;;AACA,MAAIoE,OAAO,GAAI,YAAY;AACzB,QAAI3E,MAAM,GAAG,EAAb;;AACA,QAAIC,OAAO,GAAI,YAAY;AACzB,UAAID,MAAM,GAAG,EAAb;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE,wCADG;AAEZC,QAAAA,GAAG,EAAE,UAFO;AAGZC,QAAAA,KAAK,EAAE,UAHK;AAIZC,QAAAA,IAAI,EAAE,QAJM;AAKZsG,QAAAA,IAAI,EAAE,CACJ,KADI,EAEJ,OAFI,EAGJ,OAHI,EAIJ,OAJI,EAKJ,OALI,EAMJ,OANI,EAOJ,OAPI,EAQJ,OARI,EASJ,KATI;AALM,OAAd;AAiBA3G,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,UAAIM,OAAO,GAAG;AACZL,QAAAA,OAAO,EAAE,wCADG;AAEZC,QAAAA,GAAG,EAAE,oBAFO;AAGZC,QAAAA,KAAK,EAAE,oBAHK;AAIZC,QAAAA,IAAI,EAAE,SAJM;AAKZG,QAAAA,UAAU,EAAE,CALA;AAMZC,QAAAA,OAAO,EAAE;AANG,OAAd;AAQAT,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYO,OAAZ;AACA,aAAO,SAASR,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,YAAIC,OAAO,GAAG,IAAd;AACA,YAAIC,MAAM,GAAG,CAAb;;AACA,YAAIN,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,cAAIS,OAAO,GAAGH,MAAd;AACA,cAAII,MAAM,GAAG,IAAb;;AACA,eAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,gBAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,UADR,IAEAA,IAAI,IAAI,YAHU,CAApB;;AAKA,gBAAIC,aAAJ,EAAmB;AACjBF,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,sBADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,wBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,iBAJA;AAORO,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;AACF;;AACD,cAAIc,KAAK,GAAGpB,IAAI,CAACkG,QAAjB;;AACA,cAAI9E,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIP,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,gBAAAA,UAAU,EAAE,gBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAI6F,OAAO,GAAG5G,OAAO,CAAC0G,IAAtB;AACA,gBAAIlE,MAAJ;AACAA,YAAAA,MAAM,GAAG,KAAT;;AACA,iBAAK,IAAIqE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGD,OAAO,CAACrB,MAA9B,EAAsCsB,EAAE,EAAxC,EACE,IAAIhH,KAAK,CAACgC,KAAD,EAAQ+E,OAAO,CAACC,EAAD,CAAf,CAAT,EAA+B;AAC7BrE,cAAAA,MAAM,GAAG,IAAT;AACA;AACD;;AACH,gBAAI,CAACA,MAAL,EAAa;AACX,kBAAIlB,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,gBAAAA,UAAU,EAAE,gBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNqF,kBAAAA,aAAa,EAAEF;AADT,iBAJA;AAORjF,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIJ,KAAK,GAAGpB,IAAI,CAAC6F,UAAjB;;AACA,cAAIzE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0CA,KAAK,KAAKA,KAAxD,EAA+D;AAC7D,kBAAIP,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,aAFrB;AAGRc,gBAAAA,UAAU,EAAE,0BAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,aAFrB;AAGRc,kBAAAA,UAAU,EAAE,6BAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,CAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIuB,SAAJ;;AACA,kBACIA,SAAS,GAAGT,KAAK,GAAG,CAArB,EAAyBS,SAAS,KAAKC,QAAQ,CAACD,SAAD,CADlD,EAEE;AACA,oBAAIhB,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,YADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,aAFrB;AAGRc,kBAAAA,UAAU,EAAE,gCAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNlB,oBAAAA,UAAU,EAAE;AADN,mBAJA;AAORoB,kBAAAA,OAAO,EAAE;AAPD,iBAAV;AASA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,SAxJD,MAwJO;AACL,cAAIX,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,MADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,QAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNrB,cAAAA,IAAI,EAAE;AADA,aAJA;AAORuB,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP;;AACDjB,QAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,eAAOC,MAAM,KAAK,CAAlB;AACD,OAlLD;AAmLD,KAhNa,EAAd;;AAiNAf,IAAAA,OAAO,CAAC+C,MAAR,GAAiB;AACf9C,MAAAA,OAAO,EAAE,wCADM;AAEfC,MAAAA,GAAG,EAAE,sBAFU;AAGfC,MAAAA,KAAK,EAAE,sBAHQ;AAIfC,MAAAA,IAAI,EAAE,QAJS;AAKf4C,MAAAA,oBAAoB,EAAE,KALP;AAMfC,MAAAA,QAAQ,EAAE,CAAC,UAAD,EAAa,YAAb,CANK;AAOfC,MAAAA,UAAU,EAAE;AACVyD,QAAAA,QAAQ,EAAE;AACRxD,UAAAA,IAAI,EAAE;AADE,SADA;AAIVmD,QAAAA,UAAU,EAAE;AACVnD,UAAAA,IAAI,EAAE;AADI;AAJF;AAPG,KAAjB;AAgBAnD,IAAAA,OAAO,CAACe,MAAR,GAAiB,IAAjB;AACAhB,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,WAAO,SAASF,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,UAAIC,OAAO,GAAG,IAAd;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIF,QAAQ,KAAKkB,SAAjB,EAA4BlB,QAAQ,GAAGJ,IAAX;;AAC5B,UAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,YAAIS,OAAO,GAAGH,MAAd;AACA,YAAII,MAAM,GAAG,IAAb;;AACA,aAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,cAAIY,aAAa,GAAG,EAAE,SAASD,IAAI,IAAI,MAAjB,IAA2BA,IAAI,IAAI,MAArC,CAApB;;AACA,cAAIC,aAAJ,EAAmB;AACjBF,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,sBADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,eAJA;AAORO,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;AACF;;AACD,YAAIc,KAAK,GAAGpB,IAAI,CAACoF,IAAjB;;AACA,YAAIhE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,UAAAA,MAAM,GAAG,KAAT;AACA,cAAIG,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,UADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,YAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNO,cAAAA,eAAe,EAAE;AADX,aAJA;AAORL,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP,SAdD,MAcO;AACL,cAAIkB,MAAM,GAAGlB,MAAb;;AACA,cAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,gBAAIjC,UAAU,CAACiC,KAAD,CAAV,GAAoB,CAAxB,EAA2B;AACzB,kBAAIP,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,WADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,gBAAAA,UAAU,EAAE,6BAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNW,kBAAAA,KAAK,EAAE;AADD,iBAJA;AAORT,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;AACF,WAfD,MAeO;AACL,gBAAIO,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACD,cAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,YAAIJ,KAAK,GAAGpB,IAAI,CAACA,IAAjB;;AACA,YAAIoB,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,UAAAA,MAAM,GAAG,KAAT;AACA,cAAIG,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,UADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,YAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNO,cAAAA,eAAe,EAAE;AADX,aAJA;AAORL,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP,SAdD,MAcO;AACL,cAAIkB,MAAM,GAAGlB,MAAb;;AACA,cAAIC,KAAK,CAACC,OAAN,CAAcY,KAAd,CAAJ,EAA0B;AACxB,gBAAIqE,OAAO,GAAGnF,MAAd;AACA,gBAAII,MAAJ;;AACA,iBAAK,IAAIgF,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGtE,KAAK,CAAC0D,MAA5B,EAAoCY,EAAE,EAAtC,EAA0C;AACxC,kBAAIjE,MAAM,GAAGnB,MAAb;;AACA,kBACE,CAACf,OAAO,CACN6B,KAAK,CAACsE,EAAD,CADC,EAEN,CAACzF,QAAQ,IAAI,EAAb,IAAmB,QAAnB,GAA8ByF,EAFxB,EAGNtE,KAHM,EAINsE,EAJM,EAKNtF,QALM,CADV,EAQE;AACA,oBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAGd,OAAO,CAACe,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAepG,OAAO,CAACe,MAAvB,CAAV;AACLA,gBAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,kBAAI/C,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACD;AACF,WApBD,MAoBO;AACL,gBAAIZ,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACD,cAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,OA1HD,MA0HO;AACL,YAAIX,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,MADD;AAERb,UAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,UAAAA,UAAU,EAAE,QAHJ;AAIRC,UAAAA,MAAM,EAAE;AACNrB,YAAAA,IAAI,EAAE;AADA,WAJA;AAORuB,UAAAA,OAAO,EAAE;AAPD,SAAV;AASA,YAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,QAAAA,MAAM;AACP;;AACDjB,MAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,aAAOC,MAAM,KAAK,CAAlB;AACD,KArJD;AAsJD,GA3Xa,EAAd;;AA4XA2D,EAAAA,OAAO,CAAC3B,MAAR,GAAiB;AACf9C,IAAAA,OAAO,EAAE,wCADM;AAEfC,IAAAA,GAAG,EAAE,qBAFU;AAGfC,IAAAA,KAAK,EAAE,qBAHQ;AAIfC,IAAAA,IAAI,EAAE,QAJS;AAKf4C,IAAAA,oBAAoB,EAAE,KALP;AAMfC,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CANK;AAOfC,IAAAA,UAAU,EAAE;AACV2C,MAAAA,IAAI,EAAE;AACJzF,QAAAA,IAAI,EAAE,QADF;AAEJgD,QAAAA,SAAS,EAAE;AAFP,OADI;AAKV3C,MAAAA,IAAI,EAAE;AACJL,QAAAA,IAAI,EAAE,OADF;AAEJiG,QAAAA,KAAK,EAAE;AACLlD,UAAAA,IAAI,EAAE;AADD;AAFH;AALI;AAPG,GAAjB;AAoBAuB,EAAAA,OAAO,CAAC3D,MAAR,GAAiB,IAAjB;AACAhB,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY2E,OAAZ;;AACA,MAAIe,OAAO,GAAI,YAAY;AACzB,QAAI1F,MAAM,GAAG,EAAb;;AACA,QAAIC,OAAO,GAAI,YAAY;AACzB,UAAID,MAAM,GAAG,EAAb;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE,wCADG;AAEZC,QAAAA,GAAG,EAAE,UAFO;AAGZC,QAAAA,KAAK,EAAE,UAHK;AAIZC,QAAAA,IAAI,EAAE,QAJM;AAKZsG,QAAAA,IAAI,EAAE,CACJ,KADI,EAEJ,OAFI,EAGJ,OAHI,EAIJ,OAJI,EAKJ,OALI,EAMJ,OANI,EAOJ,OAPI,EAQJ,OARI,EASJ,KATI;AALM,OAAd;AAiBA3G,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,UAAIM,OAAO,GAAG;AACZL,QAAAA,OAAO,EAAE,wCADG;AAEZC,QAAAA,GAAG,EAAE,YAFO;AAGZC,QAAAA,KAAK,EAAE,YAHK;AAIZC,QAAAA,IAAI,EAAE,QAJM;AAKZI,QAAAA,OAAO,EAAE,CALG;AAMZ8C,QAAAA,OAAO,EAAE;AANG,OAAd;AAQAvD,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYO,OAAZ;AACA,aAAO,SAASR,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,YAAIC,OAAO,GAAG,IAAd;AACA,YAAIC,MAAM,GAAG,CAAb;;AACA,YAAIN,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,cAAIS,OAAO,GAAGH,MAAd;AACA,cAAII,MAAM,GAAG,IAAb;;AACA,eAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,gBAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,UADR,IAEAA,IAAI,IAAI,UAFR,IAGAA,IAAI,IAAI,WAHR,IAIAA,IAAI,IAAI,QAJR,IAKAA,IAAI,IAAI,UALR,IAMAA,IAAI,IAAI,OAPU,CAApB;;AASA,gBAAIC,aAAJ,EAAmB;AACjBF,cAAAA,MAAM,GAAG,KAAT;AACA,kBAAIG,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,sBADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,gBAAAA,UAAU,EAAE,wBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,iBAJA;AAORO,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;AACF;;AACD,cAAIc,KAAK,GAAGpB,IAAI,CAACkG,QAAjB;;AACA,cAAI9E,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIP,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,gBAAAA,UAAU,EAAE,gBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAI6F,OAAO,GAAG5G,OAAO,CAAC0G,IAAtB;AACA,gBAAIlE,MAAJ;AACAA,YAAAA,MAAM,GAAG,KAAT;;AACA,iBAAK,IAAIqE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGD,OAAO,CAACrB,MAA9B,EAAsCsB,EAAE,EAAxC,EACE,IAAIhH,KAAK,CAACgC,KAAD,EAAQ+E,OAAO,CAACC,EAAD,CAAf,CAAT,EAA+B;AAC7BrE,cAAAA,MAAM,GAAG,IAAT;AACA;AACD;;AACH,gBAAI,CAACA,MAAL,EAAa;AACX,kBAAIlB,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,gBAAAA,UAAU,EAAE,gBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNqF,kBAAAA,aAAa,EAAEF;AADT,iBAJA;AAORjF,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIJ,KAAK,GAAGpB,IAAI,CAACsG,QAAjB;;AACA,cAAIlF,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,KAAKA,KAA7B,EAAoC;AAClC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,GAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIc,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,CAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF,aAjCD,MAiCO;AACL,kBAAIO,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,gBAAAA,UAAU,EAAE,kBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIJ,KAAK,GAAGpB,IAAI,CAACuG,SAAjB;;AACA,cAAInF,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,KAAKA,KAA7B,EAAoC;AAClC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,GAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIc,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,CAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF,aAjCD,MAiCO;AACL,kBAAIO,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,gBAAAA,UAAU,EAAE,kBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIJ,KAAK,GAAGpB,IAAI,CAACwG,MAAjB;;AACA,cAAIpF,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,KAAKA,KAA7B,EAAoC;AAClC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,SAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,GAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIc,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,SAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,CAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF,aAjCD,MAiCO;AACL,kBAAIO,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,SAFrB;AAGRc,gBAAAA,UAAU,EAAE,kBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIJ,KAAK,GAAGpB,IAAI,CAACyG,QAAjB;;AACA,cAAIrF,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,KAAKA,KAA7B,EAAoC;AAClC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,GAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIc,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,CAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF,aAjCD,MAiCO;AACL,kBAAIO,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,WAFrB;AAGRc,gBAAAA,UAAU,EAAE,kBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,cAAIJ,KAAK,GAAGpB,IAAI,CAAC0G,KAAjB;;AACA,cAAItF,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,UADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,YAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNO,gBAAAA,eAAe,EAAE;AADX,eAJA;AAORL,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP,WAdD,MAcO;AACL,gBAAIkB,MAAM,GAAGlB,MAAb;AACA,gBAAImB,MAAM,GAAGnB,MAAb;;AACA,gBAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,kBAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,KAAKA,KAA7B,EAAoC;AAClC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,QAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,GAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;;AACD,kBAAIc,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKA,KAA3B,EAAkC;AAChC,oBAAIP,GAAG,GAAG;AACRC,kBAAAA,OAAO,EAAE,SADD;AAERb,kBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,QAFrB;AAGRc,kBAAAA,UAAU,EAAE,qBAHJ;AAIRC,kBAAAA,MAAM,EAAE;AACNU,oBAAAA,UAAU,EAAE,IADN;AAENC,oBAAAA,KAAK,EAAE,CAFD;AAGNC,oBAAAA,SAAS,EAAE;AAHL,mBAJA;AASRV,kBAAAA,OAAO,EAAE;AATD,iBAAV;AAWA,oBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,gBAAAA,MAAM;AACP;AACF,aAjCD,MAiCO;AACL,kBAAIO,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,MADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,QAFrB;AAGRc,gBAAAA,UAAU,EAAE,kBAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNrB,kBAAAA,IAAI,EAAE;AADA,iBAJA;AAORuB,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;;AACD,gBAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,gBAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,SA1aD,MA0aO;AACL,cAAIX,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,MADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,QAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNrB,cAAAA,IAAI,EAAE;AADA,aAJA;AAORuB,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP;;AACDjB,QAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,eAAOC,MAAM,KAAK,CAAlB;AACD,OApcD;AAqcD,KAlea,EAAd;;AAmeAf,IAAAA,OAAO,CAAC+C,MAAR,GAAiB;AACf9C,MAAAA,OAAO,EAAE,wCADM;AAEfC,MAAAA,GAAG,EAAE,2BAFU;AAGfC,MAAAA,KAAK,EAAE,2BAHQ;AAIf6C,MAAAA,oBAAoB,EAAE,KAJP;AAKf5C,MAAAA,IAAI,EAAE,QALS;AAMf6C,MAAAA,QAAQ,EAAE,CACR,UADQ,EAER,UAFQ,EAGR,WAHQ,EAIR,QAJQ,EAKR,UALQ,EAMR,OANQ,CANK;AAcfC,MAAAA,UAAU,EAAE;AACVyD,QAAAA,QAAQ,EAAE;AACRxD,UAAAA,IAAI,EAAE;AADE,SADA;AAIV4D,QAAAA,QAAQ,EAAE;AACR5D,UAAAA,IAAI,EAAE;AADE,SAJA;AAOV6D,QAAAA,SAAS,EAAE;AACT7D,UAAAA,IAAI,EAAE;AADG,SAPD;AAUV8D,QAAAA,MAAM,EAAE;AACN9D,UAAAA,IAAI,EAAE;AADA,SAVE;AAaV+D,QAAAA,QAAQ,EAAE;AACR/D,UAAAA,IAAI,EAAE;AADE,SAbA;AAgBVgE,QAAAA,KAAK,EAAE;AACLhE,UAAAA,IAAI,EAAE;AADD;AAhBG;AAdG,KAAjB;AAmCAnD,IAAAA,OAAO,CAACe,MAAR,GAAiB,IAAjB;AACAhB,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,OAAZ;AACA,WAAO,SAASF,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,UAAIC,OAAO,GAAG,IAAd;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIF,QAAQ,KAAKkB,SAAjB,EAA4BlB,QAAQ,GAAGJ,IAAX;;AAC5B,UAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,YAAIS,OAAO,GAAGH,MAAd;AACA,YAAII,MAAM,GAAG,IAAb;;AACA,aAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,cAAIY,aAAa,GAAG,EAAE,SAASD,IAAI,IAAI,MAAjB,IAA2BA,IAAI,IAAI,MAArC,CAApB;;AACA,cAAIC,aAAJ,EAAmB;AACjBF,YAAAA,MAAM,GAAG,KAAT;AACA,gBAAIG,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,sBADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,eAJA;AAORO,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;AACF;;AACD,YAAIc,KAAK,GAAGpB,IAAI,CAACoF,IAAjB;;AACA,YAAIhE,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,UAAAA,MAAM,GAAG,KAAT;AACA,cAAIG,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,UADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,YAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNO,cAAAA,eAAe,EAAE;AADX,aAJA;AAORL,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP,SAdD,MAcO;AACL,cAAIkB,MAAM,GAAGlB,MAAb;;AACA,cAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,gBAAIjC,UAAU,CAACiC,KAAD,CAAV,GAAoB,CAAxB,EAA2B;AACzB,kBAAIP,GAAG,GAAG;AACRC,gBAAAA,OAAO,EAAE,WADD;AAERb,gBAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,gBAAAA,UAAU,EAAE,6BAHJ;AAIRC,gBAAAA,MAAM,EAAE;AACNW,kBAAAA,KAAK,EAAE;AADD,iBAJA;AAORT,gBAAAA,OAAO,EAAE;AAPD,eAAV;AASA,kBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,cAAAA,MAAM;AACP;AACF,WAfD,MAeO;AACL,gBAAIO,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACD,cAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,YAAIJ,KAAK,GAAGpB,IAAI,CAACA,IAAjB;;AACA,YAAIoB,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,UAAAA,MAAM,GAAG,KAAT;AACA,cAAIG,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,UADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,YAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNO,cAAAA,eAAe,EAAE;AADX,aAJA;AAORL,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP,SAdD,MAcO;AACL,cAAIkB,MAAM,GAAGlB,MAAb;;AACA,cAAIC,KAAK,CAACC,OAAN,CAAcY,KAAd,CAAJ,EAA0B;AACxB,gBAAIqE,OAAO,GAAGnF,MAAd;AACA,gBAAII,MAAJ;;AACA,iBAAK,IAAIgF,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGtE,KAAK,CAAC0D,MAA5B,EAAoCY,EAAE,EAAtC,EAA0C;AACxC,kBAAIjE,MAAM,GAAGnB,MAAb;;AACA,kBACE,CAACf,OAAO,CACN6B,KAAK,CAACsE,EAAD,CADC,EAEN,CAACzF,QAAQ,IAAI,EAAb,IAAmB,QAAnB,GAA8ByF,EAFxB,EAGNtE,KAHM,EAINsE,EAJM,EAKNtF,QALM,CADV,EAQE;AACA,oBAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAGd,OAAO,CAACe,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAepG,OAAO,CAACe,MAAvB,CAAV;AACLA,gBAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,kBAAI/C,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACD;AACF,WApBD,MAoBO;AACL,gBAAIZ,GAAG,GAAG;AACRC,cAAAA,OAAO,EAAE,MADD;AAERb,cAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,OAFrB;AAGRc,cAAAA,UAAU,EAAE,wBAHJ;AAIRC,cAAAA,MAAM,EAAE;AACNrB,gBAAAA,IAAI,EAAE;AADA,eAJA;AAORuB,cAAAA,OAAO,EAAE;AAPD,aAAV;AASA,gBAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,YAAAA,MAAM;AACP;;AACD,cAAII,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,OA1HD,MA0HO;AACL,YAAIX,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,MADD;AAERb,UAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,UAAAA,UAAU,EAAE,QAHJ;AAIRC,UAAAA,MAAM,EAAE;AACNrB,YAAAA,IAAI,EAAE;AADA,WAJA;AAORuB,UAAAA,OAAO,EAAE;AAPD,SAAV;AASA,YAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,QAAAA,MAAM;AACP;;AACDjB,MAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,aAAOC,MAAM,KAAK,CAAlB;AACD,KArJD;AAsJD,GAhqBa,EAAd;;AAiqBA0E,EAAAA,OAAO,CAAC1C,MAAR,GAAiB;AACf9C,IAAAA,OAAO,EAAE,wCADM;AAEfC,IAAAA,GAAG,EAAE,0BAFU;AAGfC,IAAAA,KAAK,EAAE,0BAHQ;AAIfC,IAAAA,IAAI,EAAE,QAJS;AAKf4C,IAAAA,oBAAoB,EAAE,KALP;AAMfC,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CANK;AAOfC,IAAAA,UAAU,EAAE;AACV2C,MAAAA,IAAI,EAAE;AACJzF,QAAAA,IAAI,EAAE,QADF;AAEJgD,QAAAA,SAAS,EAAE;AAFP,OADI;AAKV3C,MAAAA,IAAI,EAAE;AACJL,QAAAA,IAAI,EAAE,OADF;AAEJiG,QAAAA,KAAK,EAAE;AACLlD,UAAAA,IAAI,EAAE;AADD;AAFH;AALI;AAPG,GAAjB;AAoBAsC,EAAAA,OAAO,CAAC1E,MAAR,GAAiB,IAAjB;AACAhB,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY0F,OAAZ;AACA,SAAO,SAAS3F,QAAT,CACLW,IADK,EAELC,QAFK,EAGLC,UAHK,EAILC,kBAJK,EAKLC,QALK,EAML;AACA;;AACA,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIF,QAAQ,KAAKkB,SAAjB,EAA4BlB,QAAQ,GAAGJ,IAAX;;AAC5B,QAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAzC,EAA8D;AAC5D,UAAIS,OAAO,GAAGH,MAAd;AACA,UAAII,MAAM,GAAG,IAAb;;AACA,WAAK,IAAIC,IAAT,IAAiBX,IAAjB,EAAuB;AACrB,YAAIY,aAAa,GAAG,EAClB,SACAD,IAAI,IAAI,WADR,IAEAA,IAAI,IAAI,cAFR,IAGAA,IAAI,IAAI,qBAHR,IAIAA,IAAI,IAAI,0BALU,CAApB;;AAOA,YAAIC,aAAJ,EAAmB;AACjBF,UAAAA,MAAM,GAAG,KAAT;AACA,cAAIG,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,sBADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,YAAAA,UAAU,EAAE,wBAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNC,cAAAA,kBAAkB,EAAE,KAAKN,IAAL,GAAY;AAD1B,aAJA;AAORO,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP;AACF;;AACD,UAAIc,KAAK,GAAGpB,IAAI,CAAC2G,SAAjB;;AACA,UAAIvF,KAAK,KAAKE,SAAd,EAAyB;AACvBZ,QAAAA,MAAM,GAAG,KAAT;AACA,YAAIG,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,UADD;AAERb,UAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,UAAAA,UAAU,EAAE,YAHJ;AAIRC,UAAAA,MAAM,EAAE;AACNO,YAAAA,eAAe,EAAE;AADX,WAJA;AAORL,UAAAA,OAAO,EAAE;AAPD,SAAV;AASA,YAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,QAAAA,MAAM;AACP,OAdD,MAcO;AACL,YAAIkB,MAAM,GAAGlB,MAAb;AACA,YAAImB,MAAM,GAAGnB,MAAb;;AACA,YAAI,OAAOc,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAIP,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,MADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,YAAAA,UAAU,EAAE,kBAHJ;AAIRC,YAAAA,MAAM,EAAE;AACNrB,cAAAA,IAAI,EAAE;AADA,aAJA;AAORuB,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP;;AACD,YAAI6F,OAAO,GAAG5G,OAAO,CAACK,KAAtB;AACA,YAAImC,MAAM,GAAG3C,KAAK,CAACgC,KAAD,EAAQ+E,OAAR,CAAlB;;AACA,YAAI,CAACpE,MAAL,EAAa;AACX,cAAIlB,GAAG,GAAG;AACRC,YAAAA,OAAO,EAAE,OADD;AAERb,YAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,YAFrB;AAGRc,YAAAA,UAAU,EAAE,mBAHJ;AAIRC,YAAAA,MAAM,EAAE;AACN4F,cAAAA,YAAY,EAAET;AADR,aAJA;AAORjF,YAAAA,OAAO,EAAE;AAPD,WAAV;AASA,cAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,UAAAA,MAAM;AACP;;AACD,YAAIyB,MAAM,GAAGzB,MAAM,KAAKmB,MAAxB;AACA,YAAIf,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,UAAIxB,IAAI,CAAC6G,YAAL,KAAsBvF,SAA1B,EAAqC;AACnCZ,QAAAA,MAAM,GAAG,KAAT;AACA,YAAIG,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,UADD;AAERb,UAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,UAAAA,UAAU,EAAE,YAHJ;AAIRC,UAAAA,MAAM,EAAE;AACNO,YAAAA,eAAe,EAAE;AADX,WAJA;AAORL,UAAAA,OAAO,EAAE;AAPD,SAAV;AASA,YAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,QAAAA,MAAM;AACP,OAdD,MAcO;AACL,YAAIkB,MAAM,GAAGlB,MAAb;;AACA,YACE,CAACT,OAAO,CACNG,IAAI,CAAC6G,YADC,EAEN,CAAC5G,QAAQ,IAAI,EAAb,IAAmB,eAFb,EAGND,IAHM,EAIN,cAJM,EAKNI,QALM,CADV,EAQE;AACA,cAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAGR,OAAO,CAACS,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAe9F,OAAO,CAACS,MAAvB,CAAV;AACLA,UAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,YAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,UAAIxB,IAAI,CAAC8G,mBAAL,KAA6BxF,SAAjC,EAA4C;AAC1CZ,QAAAA,MAAM,GAAG,KAAT;AACA,YAAIG,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,UADD;AAERb,UAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,UAAAA,UAAU,EAAE,YAHJ;AAIRC,UAAAA,MAAM,EAAE;AACNO,YAAAA,eAAe,EAAE;AADX,WAJA;AAORL,UAAAA,OAAO,EAAE;AAPD,SAAV;AASA,YAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,QAAAA,MAAM;AACP,OAdD,MAcO;AACL,YAAIkB,MAAM,GAAGlB,MAAb;;AACA,YACE,CAAC2D,OAAO,CACNjE,IAAI,CAAC8G,mBADC,EAEN,CAAC7G,QAAQ,IAAI,EAAb,IAAmB,sBAFb,EAGND,IAHM,EAIN,qBAJM,EAKNI,QALM,CADV,EAQE;AACA,cAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG4D,OAAO,CAAC3D,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAe1B,OAAO,CAAC3D,MAAvB,CAAV;AACLA,UAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,YAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;;AACD,UAAIxB,IAAI,CAAC+G,wBAAL,KAAkCzF,SAAtC,EAAiD;AAC/CZ,QAAAA,MAAM,GAAG,KAAT;AACA,YAAIG,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,UADD;AAERb,UAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,UAAAA,UAAU,EAAE,YAHJ;AAIRC,UAAAA,MAAM,EAAE;AACNO,YAAAA,eAAe,EAAE;AADX,WAJA;AAORL,UAAAA,OAAO,EAAE;AAPD,SAAV;AASA,YAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,QAAAA,MAAM;AACP,OAdD,MAcO;AACL,YAAIkB,MAAM,GAAGlB,MAAb;;AACA,YACE,CAAC0E,OAAO,CACNhF,IAAI,CAAC+G,wBADC,EAEN,CAAC9G,QAAQ,IAAI,EAAb,IAAmB,2BAFb,EAGND,IAHM,EAIN,0BAJM,EAKNI,QALM,CADV,EAQE;AACA,cAAIC,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG2E,OAAO,CAAC1E,MAAlB,CAAtB,KACKD,OAAO,GAAGA,OAAO,CAACsF,MAAR,CAAeX,OAAO,CAAC1E,MAAvB,CAAV;AACLA,UAAAA,MAAM,GAAGD,OAAO,CAACyE,MAAjB;AACD;;AACD,YAAIpE,MAAM,GAAGJ,MAAM,KAAKkB,MAAxB;AACD;AACF,KA3KD,MA2KO;AACL,UAAIX,GAAG,GAAG;AACRC,QAAAA,OAAO,EAAE,MADD;AAERb,QAAAA,QAAQ,EAAE,CAACA,QAAQ,IAAI,EAAb,IAAmB,EAFrB;AAGRc,QAAAA,UAAU,EAAE,QAHJ;AAIRC,QAAAA,MAAM,EAAE;AACNrB,UAAAA,IAAI,EAAE;AADA,SAJA;AAORuB,QAAAA,OAAO,EAAE;AAPD,OAAV;AASA,UAAIb,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,CAACQ,GAAD,CAAV,CAAtB,KACKR,OAAO,CAACc,IAAR,CAAaN,GAAb;AACLP,MAAAA,MAAM;AACP;;AACDjB,IAAAA,QAAQ,CAACiB,MAAT,GAAkBD,OAAlB;AACA,WAAOC,MAAM,KAAK,CAAlB;AACD,GAtMD;AAuMD,CA7sIc,EAAf;;AA8sIAjB,QAAQ,CAACiD,MAAT,GAAkB;AAChB9C,EAAAA,OAAO,EAAE,wCADO;AAEhBC,EAAAA,GAAG,EAAE,WAFW;AAGhBC,EAAAA,KAAK,EAAE,WAHS;AAIhBC,EAAAA,IAAI,EAAE,QAJU;AAKhB4C,EAAAA,oBAAoB,EAAE,KALN;AAMhBC,EAAAA,QAAQ,EAAE,CACR,WADQ,EAER,cAFQ,EAGR,qBAHQ,EAIR,0BAJQ,CANM;AAYhBC,EAAAA,UAAU,EAAE;AACVkE,IAAAA,SAAS,EAAE;AACTjE,MAAAA,IAAI,EAAE;AADG,KADD;AAIVmE,IAAAA,YAAY,EAAE;AACZnE,MAAAA,IAAI,EAAE;AADM,KAJJ;AAOVoE,IAAAA,mBAAmB,EAAE;AACnBpE,MAAAA,IAAI,EAAE;AADa,KAPX;AAUVqE,IAAAA,wBAAwB,EAAE;AACxBrE,MAAAA,IAAI,EAAE;AADkB;AAVhB;AAZI,CAAlB;AA2BArD,QAAQ,CAACiB,MAAT,GAAkB,IAAlB;AACA0G,MAAM,CAACC,OAAP,GAAiB5H,QAAjB","sourcesContent":["\"use strict\";\nvar formats = require(\"ajv/lib/compile/formats\")();\nvar ucs2length = require(\"ajv/lib/compile/ucs2length\");\nvar equal = require(\"ajv/lib/compile/equal\");\nvar validate = (function () {\n  var refVal = [];\n  var refVal1 = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"_SchemaVer\",\n    title: \"_SchemaVer\",\n    type: \"string\",\n    const: \"2.0.0\",\n  };\n  refVal[1] = refVal1;\n  var refVal2 = (function () {\n    var refVal = [];\n    var refVal1 = (function () {\n      var refVal = [];\n      var refVal1 = (function () {\n        var refVal = [];\n        var refVal1 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"IntegerNonNegative\",\n          title: \"IntegerNonNegative\",\n          type: \"integer\",\n          multipleOf: 1,\n          minimum: 0,\n        };\n        refVal[1] = refVal1;\n        return function validate(\n          data,\n          dataPath,\n          parentData,\n          parentDataProperty,\n          rootData\n        ) {\n          \"use strict\" /*# sourceURL=ScenarioDatumPopulation */;\n          var vErrors = null;\n          var errors = 0;\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n            for (var key0 in data) {\n              var isAdditional0 = !(\n                false ||\n                key0 == \"populationServed\" ||\n                key0 == \"ageDistributionName\" ||\n                key0 == \"caseCountsName\" ||\n                key0 == \"initialNumberOfCases\" ||\n                key0 == \"importsPerDay\" ||\n                key0 == \"hospitalBeds\" ||\n                key0 == \"icuBeds\"\n              );\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\",\n                  },\n                  message: \"should NOT have additional properties\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            }\n            var data1 = data.populationServed;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"populationServed\",\n                },\n                message: \"should have required property 'populationServed'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/populationServed\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\",\n                  },\n                  message: \"should be integer\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/populationServed\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var division2;\n                if (\n                  ((division2 = data1 / 1), division2 !== parseInt(division2))\n                ) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/populationServed\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1,\n                    },\n                    message: \"should be multiple of 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.ageDistributionName;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"ageDistributionName\",\n                },\n                message: \"should have required property 'ageDistributionName'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"string\") {\n                if (ucs2length(data1) < 1) {\n                  var err = {\n                    keyword: \"minLength\",\n                    dataPath: (dataPath || \"\") + \"/ageDistributionName\",\n                    schemaPath: \"#/properties/ageDistributionName/minLength\",\n                    params: {\n                      limit: 1,\n                    },\n                    message: \"should NOT be shorter than 1 characters\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/ageDistributionName\",\n                  schemaPath: \"#/properties/ageDistributionName/type\",\n                  params: {\n                    type: \"string\",\n                  },\n                  message: \"should be string\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.caseCountsName;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"caseCountsName\",\n                },\n                message: \"should have required property 'caseCountsName'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"string\") {\n                if (ucs2length(data1) < 1) {\n                  var err = {\n                    keyword: \"minLength\",\n                    dataPath: (dataPath || \"\") + \"/caseCountsName\",\n                    schemaPath: \"#/properties/caseCountsName/minLength\",\n                    params: {\n                      limit: 1,\n                    },\n                    message: \"should NOT be shorter than 1 characters\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/caseCountsName\",\n                  schemaPath: \"#/properties/caseCountsName/type\",\n                  params: {\n                    type: \"string\",\n                  },\n                  message: \"should be string\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.initialNumberOfCases;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"initialNumberOfCases\",\n                },\n                message: \"should have required property 'initialNumberOfCases'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/initialNumberOfCases\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\",\n                  },\n                  message: \"should be integer\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/initialNumberOfCases\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var division2;\n                if (\n                  ((division2 = data1 / 1), division2 !== parseInt(division2))\n                ) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/initialNumberOfCases\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1,\n                    },\n                    message: \"should be multiple of 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.importsPerDay;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"importsPerDay\",\n                },\n                message: \"should have required property 'importsPerDay'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/importsPerDay\",\n                    schemaPath: \"#/properties/importsPerDay/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/importsPerDay\",\n                  schemaPath: \"#/properties/importsPerDay/type\",\n                  params: {\n                    type: \"number\",\n                  },\n                  message: \"should be number\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.hospitalBeds;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"hospitalBeds\",\n                },\n                message: \"should have required property 'hospitalBeds'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/hospitalBeds\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\",\n                  },\n                  message: \"should be integer\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/hospitalBeds\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var division2;\n                if (\n                  ((division2 = data1 / 1), division2 !== parseInt(division2))\n                ) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/hospitalBeds\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1,\n                    },\n                    message: \"should be multiple of 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.icuBeds;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"icuBeds\",\n                },\n                message: \"should have required property 'icuBeds'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/icuBeds\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\",\n                  },\n                  message: \"should be integer\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/icuBeds\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var division2;\n                if (\n                  ((division2 = data1 / 1), division2 !== parseInt(division2))\n                ) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/icuBeds\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1,\n                    },\n                    message: \"should be multiple of 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\",\n              },\n              message: \"should be object\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      })();\n      refVal1.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumPopulation\",\n        title: \"ScenarioDatumPopulation\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\n          \"populationServed\",\n          \"ageDistributionName\",\n          \"caseCountsName\",\n          \"initialNumberOfCases\",\n          \"importsPerDay\",\n          \"hospitalBeds\",\n          \"icuBeds\",\n        ],\n        properties: {\n          populationServed: {\n            $ref: \"IntegerNonNegative#\",\n          },\n          ageDistributionName: {\n            type: \"string\",\n            minLength: 1,\n          },\n          caseCountsName: {\n            type: \"string\",\n            minLength: 1,\n          },\n          initialNumberOfCases: {\n            $ref: \"IntegerNonNegative#\",\n          },\n          importsPerDay: {\n            type: \"number\",\n            minimum: 0,\n          },\n          hospitalBeds: {\n            $ref: \"IntegerNonNegative#\",\n          },\n          icuBeds: {\n            $ref: \"IntegerNonNegative#\",\n          },\n        },\n      };\n      refVal1.errors = null;\n      refVal[1] = refVal1;\n      var refVal2 = (function () {\n        var refVal = [];\n        var refVal1 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"NumericRangeNonNegative\",\n          title: \"NumericRangeNonNegative\",\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"begin\", \"end\"],\n          properties: {\n            begin: {\n              type: \"number\",\n              minimum: 0,\n              maximum: {\n                $data: \"1/end\",\n              },\n            },\n            end: {\n              type: \"number\",\n            },\n          },\n        };\n        refVal[1] = refVal1;\n        var refVal2 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"IntegerNonNegative\",\n          title: \"IntegerNonNegative\",\n          type: \"integer\",\n          multipleOf: 1,\n          minimum: 0,\n        };\n        refVal[2] = refVal2;\n        return function validate(\n          data,\n          dataPath,\n          parentData,\n          parentDataProperty,\n          rootData\n        ) {\n          \"use strict\" /*# sourceURL=ScenarioDatumEpidemiological */;\n          var vErrors = null;\n          var errors = 0;\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n            for (var key0 in data) {\n              var isAdditional0 = !(\n                false ||\n                key0 == \"r0\" ||\n                key0 == \"latencyDays\" ||\n                key0 == \"infectiousPeriodDays\" ||\n                key0 == \"hospitalStayDays\" ||\n                key0 == \"icuStayDays\" ||\n                key0 == \"seasonalForcing\" ||\n                key0 == \"peakMonth\" ||\n                key0 == \"overflowSeverity\"\n              );\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\",\n                  },\n                  message: \"should NOT have additional properties\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            }\n            var data1 = data.r0;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"r0\",\n                },\n                message: \"should have required property 'r0'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              if (data1 && typeof data1 === \"object\" && !Array.isArray(data1)) {\n                var errs__2 = errors;\n                var valid3 = true;\n                for (var key2 in data1) {\n                  var isAdditional2 = !(\n                    false ||\n                    key2 == \"begin\" ||\n                    key2 == \"end\"\n                  );\n                  if (isAdditional2) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"additionalProperties\",\n                      dataPath: (dataPath || \"\") + \"/r0\",\n                      schemaPath:\n                        \"NumericRangeNonNegative#/additionalProperties\",\n                      params: {\n                        additionalProperty: \"\" + key2 + \"\",\n                      },\n                      message: \"should NOT have additional properties\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                }\n                var data2 = data1.begin;\n                if (data2 === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/r0\",\n                    schemaPath: \"NumericRangeNonNegative#/required\",\n                    params: {\n                      missingProperty: \"begin\",\n                    },\n                    message: \"should have required property 'begin'\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n                  if (typeof data2 === \"number\") {\n                    var schema3 = data1 && data1.end;\n                    if (\n                      (schema3 !== undefined && typeof schema3 != \"number\") ||\n                      data2 > schema3 ||\n                      data2 !== data2\n                    ) {\n                      var err = {\n                        keyword: \"maximum\",\n                        dataPath: (dataPath || \"\") + \"/r0/begin\",\n                        schemaPath:\n                          \"NumericRangeNonNegative#/properties/begin/maximum\",\n                        params: {\n                          comparison: \"<=\",\n                          limit: schema3,\n                          exclusive: false,\n                        },\n                        message: \"should be <= \" + schema3,\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                    if (data2 < 0 || data2 !== data2) {\n                      var err = {\n                        keyword: \"minimum\",\n                        dataPath: (dataPath || \"\") + \"/r0/begin\",\n                        schemaPath:\n                          \"NumericRangeNonNegative#/properties/begin/minimum\",\n                        params: {\n                          comparison: \">=\",\n                          limit: 0,\n                          exclusive: false,\n                        },\n                        message: \"should be >= 0\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/r0/begin\",\n                      schemaPath:\n                        \"NumericRangeNonNegative#/properties/begin/type\",\n                      params: {\n                        type: \"number\",\n                      },\n                      message: \"should be number\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                  var valid3 = errors === errs_3;\n                }\n                if (data1.end === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/r0\",\n                    schemaPath: \"NumericRangeNonNegative#/required\",\n                    params: {\n                      missingProperty: \"end\",\n                    },\n                    message: \"should have required property 'end'\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n                  if (typeof data1.end !== \"number\") {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/r0/end\",\n                      schemaPath:\n                        \"NumericRangeNonNegative#/properties/end/type\",\n                      params: {\n                        type: \"number\",\n                      },\n                      message: \"should be number\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                  var valid3 = errors === errs_3;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/r0\",\n                  schemaPath: \"NumericRangeNonNegative#/type\",\n                  params: {\n                    type: \"object\",\n                  },\n                  message: \"should be object\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.latencyDays;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"latencyDays\",\n                },\n                message: \"should have required property 'latencyDays'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/latencyDays\",\n                    schemaPath: \"#/properties/latencyDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/latencyDays\",\n                  schemaPath: \"#/properties/latencyDays/type\",\n                  params: {\n                    type: \"number\",\n                  },\n                  message: \"should be number\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.infectiousPeriodDays;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"infectiousPeriodDays\",\n                },\n                message: \"should have required property 'infectiousPeriodDays'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/infectiousPeriodDays\",\n                    schemaPath: \"#/properties/infectiousPeriodDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/infectiousPeriodDays\",\n                  schemaPath: \"#/properties/infectiousPeriodDays/type\",\n                  params: {\n                    type: \"number\",\n                  },\n                  message: \"should be number\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.hospitalStayDays;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"hospitalStayDays\",\n                },\n                message: \"should have required property 'hospitalStayDays'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/hospitalStayDays\",\n                    schemaPath: \"#/properties/hospitalStayDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/hospitalStayDays\",\n                  schemaPath: \"#/properties/hospitalStayDays/type\",\n                  params: {\n                    type: \"number\",\n                  },\n                  message: \"should be number\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.icuStayDays;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"icuStayDays\",\n                },\n                message: \"should have required property 'icuStayDays'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/icuStayDays\",\n                    schemaPath: \"#/properties/icuStayDays/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/icuStayDays\",\n                  schemaPath: \"#/properties/icuStayDays/type\",\n                  params: {\n                    type: \"number\",\n                  },\n                  message: \"should be number\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.seasonalForcing;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"seasonalForcing\",\n                },\n                message: \"should have required property 'seasonalForcing'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/seasonalForcing\",\n                    schemaPath: \"#/properties/seasonalForcing/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/seasonalForcing\",\n                  schemaPath: \"#/properties/seasonalForcing/type\",\n                  params: {\n                    type: \"number\",\n                  },\n                  message: \"should be number\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.peakMonth;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"peakMonth\",\n                },\n                message: \"should have required property 'peakMonth'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              var errs_3 = errors;\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/peakMonth\",\n                  schemaPath: \"IntegerNonNegative#/type\",\n                  params: {\n                    type: \"integer\",\n                  },\n                  message: \"should be integer\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/peakMonth\",\n                    schemaPath: \"IntegerNonNegative#/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var division3;\n                if (\n                  ((division3 = data1 / 1), division3 !== parseInt(division3))\n                ) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/peakMonth\",\n                    schemaPath: \"IntegerNonNegative#/multipleOf\",\n                    params: {\n                      multipleOf: 1,\n                    },\n                    message: \"should be multiple of 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid3 = errors === errs_3;\n              var valid2 = errors === errs_2;\n              var errs_2 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 > 11 || data1 !== data1) {\n                  var err = {\n                    keyword: \"maximum\",\n                    dataPath: (dataPath || \"\") + \"/peakMonth\",\n                    schemaPath: \"#/properties/peakMonth/allOf/1/maximum\",\n                    params: {\n                      comparison: \"<=\",\n                      limit: 11,\n                      exclusive: false,\n                    },\n                    message: \"should be <= 11\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.overflowSeverity;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"overflowSeverity\",\n                },\n                message: \"should have required property 'overflowSeverity'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 < 0 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/overflowSeverity\",\n                    schemaPath: \"#/properties/overflowSeverity/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 0,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 0\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/overflowSeverity\",\n                  schemaPath: \"#/properties/overflowSeverity/type\",\n                  params: {\n                    type: \"number\",\n                  },\n                  message: \"should be number\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\",\n              },\n              message: \"should be object\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      })();\n      refVal2.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumEpidemiological\",\n        title: \"ScenarioDatumEpidemiological\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\n          \"r0\",\n          \"latencyDays\",\n          \"infectiousPeriodDays\",\n          \"hospitalStayDays\",\n          \"icuStayDays\",\n          \"seasonalForcing\",\n          \"peakMonth\",\n          \"overflowSeverity\",\n        ],\n        properties: {\n          r0: {\n            $ref: \"NumericRangeNonNegative#\",\n          },\n          latencyDays: {\n            type: \"number\",\n            minimum: 1,\n          },\n          infectiousPeriodDays: {\n            type: \"number\",\n            minimum: 1,\n          },\n          hospitalStayDays: {\n            type: \"number\",\n            minimum: 1,\n          },\n          icuStayDays: {\n            type: \"number\",\n            minimum: 1,\n          },\n          seasonalForcing: {\n            type: \"number\",\n            minimum: 0,\n          },\n          peakMonth: {\n            allOf: [\n              {\n                $ref: \"IntegerNonNegative#\",\n              },\n              {\n                maximum: 11,\n              },\n            ],\n          },\n          overflowSeverity: {\n            type: \"number\",\n            minimum: 0,\n          },\n        },\n      };\n      refVal2.errors = null;\n      refVal[2] = refVal2;\n      var refVal3 = (function () {\n        var refVal = [];\n        var refVal1 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"DateRange\",\n          title: \"DateRange\",\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"begin\", \"end\"],\n          properties: {\n            begin: {\n              oneOf: [\n                {\n                  type: \"string\",\n                  format: \"date\",\n                },\n                {\n                  type: \"string\",\n                  format: \"date-time\",\n                },\n              ],\n              formatMaximum: {\n                $data: \"1/end\",\n              },\n            },\n            end: {\n              oneOf: [\n                {\n                  type: \"string\",\n                  format: \"date\",\n                },\n                {\n                  type: \"string\",\n                  format: \"date-time\",\n                },\n              ],\n            },\n          },\n        };\n        refVal[1] = refVal1;\n        var refVal2 = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"Integer\",\n          title: \"Integer\",\n          type: \"integer\",\n          multipleOf: 1,\n        };\n        refVal[2] = refVal2;\n        return function validate(\n          data,\n          dataPath,\n          parentData,\n          parentDataProperty,\n          rootData\n        ) {\n          \"use strict\" /*# sourceURL=ScenarioDatumSimulation */;\n          var vErrors = null;\n          var errors = 0;\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n            for (var key0 in data) {\n              var isAdditional0 = !(\n                false ||\n                key0 == \"simulationTimeRange\" ||\n                key0 == \"numberStochasticRuns\"\n              );\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\",\n                  },\n                  message: \"should NOT have additional properties\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            }\n            var data1 = data.simulationTimeRange;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"simulationTimeRange\",\n                },\n                message: \"should have required property 'simulationTimeRange'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              if (data1 && typeof data1 === \"object\" && !Array.isArray(data1)) {\n                var errs__2 = errors;\n                var valid3 = true;\n                for (var key2 in data1) {\n                  var isAdditional2 = !(\n                    false ||\n                    key2 == \"begin\" ||\n                    key2 == \"end\"\n                  );\n                  if (isAdditional2) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"additionalProperties\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                      schemaPath: \"DateRange#/additionalProperties\",\n                      params: {\n                        additionalProperty: \"\" + key2 + \"\",\n                      },\n                      message: \"should NOT have additional properties\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                }\n                var data2 = data1.begin;\n                if (data2 === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                    schemaPath: \"DateRange#/required\",\n                    params: {\n                      missingProperty: \"begin\",\n                    },\n                    message: \"should have required property 'begin'\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n                  var errs__3 = errors,\n                    prevValid3 = false,\n                    valid3 = false,\n                    passingSchemas3 = null;\n                  var errs_4 = errors;\n                  if (typeof data2 === \"string\") {\n                    if (!formats.date.test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath:\n                          (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                        schemaPath:\n                          \"DateRange#/properties/begin/oneOf/0/format\",\n                        params: {\n                          format: \"date\",\n                        },\n                        message: 'should match format \"date\"',\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                      schemaPath: \"DateRange#/properties/begin/oneOf/0/type\",\n                      params: {\n                        type: \"string\",\n                      },\n                      message: \"should be string\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                  var valid4 = errors === errs_4;\n                  if (valid4) {\n                    valid3 = prevValid3 = true;\n                    passingSchemas3 = 0;\n                  }\n                  var errs_4 = errors;\n                  if (typeof data2 === \"string\") {\n                    if (!formats[\"date-time\"].test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath:\n                          (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                        schemaPath:\n                          \"DateRange#/properties/begin/oneOf/1/format\",\n                        params: {\n                          format: \"date-time\",\n                        },\n                        message: 'should match format \"date-time\"',\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                      schemaPath: \"DateRange#/properties/begin/oneOf/1/type\",\n                      params: {\n                        type: \"string\",\n                      },\n                      message: \"should be string\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                  var valid4 = errors === errs_4;\n                  if (valid4 && prevValid3) {\n                    valid3 = false;\n                    passingSchemas3 = [passingSchemas3, 1];\n                  } else {\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 1;\n                    }\n                  }\n                  if (!valid3) {\n                    var err = {\n                      keyword: \"oneOf\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/begin\",\n                      schemaPath: \"DateRange#/properties/begin/oneOf\",\n                      params: {\n                        passingSchemas: passingSchemas3,\n                      },\n                      message: \"should match exactly one schema in oneOf\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  } else {\n                    errors = errs__3;\n                    if (vErrors !== null) {\n                      if (errs__3) vErrors.length = errs__3;\n                      else vErrors = null;\n                    }\n                  }\n                  var valid3 = errors === errs_3;\n                }\n                var data2 = data1.end;\n                if (data2 === undefined) {\n                  valid3 = false;\n                  var err = {\n                    keyword: \"required\",\n                    dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                    schemaPath: \"DateRange#/required\",\n                    params: {\n                      missingProperty: \"end\",\n                    },\n                    message: \"should have required property 'end'\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                } else {\n                  var errs_3 = errors;\n                  var errs__3 = errors,\n                    prevValid3 = false,\n                    valid3 = false,\n                    passingSchemas3 = null;\n                  var errs_4 = errors;\n                  if (typeof data2 === \"string\") {\n                    if (!formats.date.test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/0/format\",\n                        params: {\n                          format: \"date\",\n                        },\n                        message: 'should match format \"date\"',\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                      schemaPath: \"DateRange#/properties/end/oneOf/0/type\",\n                      params: {\n                        type: \"string\",\n                      },\n                      message: \"should be string\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                  var valid4 = errors === errs_4;\n                  if (valid4) {\n                    valid3 = prevValid3 = true;\n                    passingSchemas3 = 0;\n                  }\n                  var errs_4 = errors;\n                  if (typeof data2 === \"string\") {\n                    if (!formats[\"date-time\"].test(data2)) {\n                      var err = {\n                        keyword: \"format\",\n                        dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/1/format\",\n                        params: {\n                          format: \"date-time\",\n                        },\n                        message: 'should match format \"date-time\"',\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                  } else {\n                    var err = {\n                      keyword: \"type\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                      schemaPath: \"DateRange#/properties/end/oneOf/1/type\",\n                      params: {\n                        type: \"string\",\n                      },\n                      message: \"should be string\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                  var valid4 = errors === errs_4;\n                  if (valid4 && prevValid3) {\n                    valid3 = false;\n                    passingSchemas3 = [passingSchemas3, 1];\n                  } else {\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 1;\n                    }\n                  }\n                  if (!valid3) {\n                    var err = {\n                      keyword: \"oneOf\",\n                      dataPath: (dataPath || \"\") + \"/simulationTimeRange/end\",\n                      schemaPath: \"DateRange#/properties/end/oneOf\",\n                      params: {\n                        passingSchemas: passingSchemas3,\n                      },\n                      message: \"should match exactly one schema in oneOf\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  } else {\n                    errors = errs__3;\n                    if (vErrors !== null) {\n                      if (errs__3) vErrors.length = errs__3;\n                      else vErrors = null;\n                    }\n                  }\n                  var valid3 = errors === errs_3;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/simulationTimeRange\",\n                  schemaPath: \"DateRange#/type\",\n                  params: {\n                    type: \"object\",\n                  },\n                  message: \"should be object\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n            var data1 = data.numberStochasticRuns;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"numberStochasticRuns\",\n                },\n                message: \"should have required property 'numberStochasticRuns'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              var errs_2 = errors;\n              var errs_3 = errors;\n              if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                  schemaPath: \"Integer#/type\",\n                  params: {\n                    type: \"integer\",\n                  },\n                  message: \"should be integer\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (typeof data1 === \"number\") {\n                var division3;\n                if (\n                  ((division3 = data1 / 1), division3 !== parseInt(division3))\n                ) {\n                  var err = {\n                    keyword: \"multipleOf\",\n                    dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                    schemaPath: \"Integer#/multipleOf\",\n                    params: {\n                      multipleOf: 1,\n                    },\n                    message: \"should be multiple of 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid3 = errors === errs_3;\n              var valid2 = errors === errs_2;\n              var errs_2 = errors;\n              if (typeof data1 === \"number\") {\n                if (data1 > 100001 || data1 !== data1) {\n                  var err = {\n                    keyword: \"maximum\",\n                    dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                    schemaPath:\n                      \"#/properties/numberStochasticRuns/allOf/1/maximum\",\n                    params: {\n                      comparison: \"<=\",\n                      limit: 100001,\n                      exclusive: false,\n                    },\n                    message: \"should be <= 100001\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                if (data1 < 1 || data1 !== data1) {\n                  var err = {\n                    keyword: \"minimum\",\n                    dataPath: (dataPath || \"\") + \"/numberStochasticRuns\",\n                    schemaPath:\n                      \"#/properties/numberStochasticRuns/allOf/1/minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1,\n                      exclusive: false,\n                    },\n                    message: \"should be >= 1\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var valid2 = errors === errs_2;\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\",\n              },\n              message: \"should be object\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      })();\n      refVal3.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumSimulation\",\n        title: \"ScenarioDatumSimulation\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\"simulationTimeRange\", \"numberStochasticRuns\"],\n        properties: {\n          simulationTimeRange: {\n            $ref: \"DateRange#\",\n          },\n          numberStochasticRuns: {\n            allOf: [\n              {\n                $ref: \"Integer#\",\n              },\n              {\n                minimum: 1,\n                maximum: 100001,\n              },\n            ],\n          },\n        },\n      };\n      refVal3.errors = null;\n      refVal[3] = refVal3;\n      var refVal4 = (function () {\n        var refVal = [];\n        var refVal1 = (function () {\n          var pattern0 = new RegExp(\"^#(?:[0-9a-fA-F]{3}){1,2}$\");\n          var refVal = [];\n          var refVal1 = {\n            $schema: \"http://json-schema.org/draft-07/schema\",\n            $id: \"ColorHex\",\n            title: \"ColorHex\",\n            type: \"string\",\n            pattern: \"^#(?:[0-9a-fA-F]{3}){1,2}$\",\n          };\n          refVal[1] = refVal1;\n          var refVal2 = {\n            $schema: \"http://json-schema.org/draft-07/schema\",\n            $id: \"DateRange\",\n            title: \"DateRange\",\n            type: \"object\",\n            additionalProperties: false,\n            required: [\"begin\", \"end\"],\n            properties: {\n              begin: {\n                oneOf: [\n                  {\n                    type: \"string\",\n                    format: \"date\",\n                  },\n                  {\n                    type: \"string\",\n                    format: \"date-time\",\n                  },\n                ],\n                formatMaximum: {\n                  $data: \"1/end\",\n                },\n              },\n              end: {\n                oneOf: [\n                  {\n                    type: \"string\",\n                    format: \"date\",\n                  },\n                  {\n                    type: \"string\",\n                    format: \"date-time\",\n                  },\n                ],\n              },\n            },\n          };\n          refVal[2] = refVal2;\n          var refVal3 = {\n            $schema: \"http://json-schema.org/draft-07/schema\",\n            $id: \"PercentageRange\",\n            title: \"PercentageRange\",\n            type: \"object\",\n            additionalProperties: false,\n            required: [\"begin\", \"end\"],\n            properties: {\n              begin: {\n                type: \"number\",\n                minimum: 0,\n                maximum: {\n                  $data: \"1/end\",\n                },\n              },\n              end: {\n                type: \"number\",\n                maximum: 100,\n              },\n            },\n          };\n          refVal[3] = refVal3;\n          return function validate(\n            data,\n            dataPath,\n            parentData,\n            parentDataProperty,\n            rootData\n          ) {\n            \"use strict\" /*# sourceURL=MitigationInterval */;\n            var vErrors = null;\n            var errors = 0;\n            if (data && typeof data === \"object\" && !Array.isArray(data)) {\n              var errs__0 = errors;\n              var valid1 = true;\n              for (var key0 in data) {\n                var isAdditional0 = !(\n                  false ||\n                  key0 == \"name\" ||\n                  key0 == \"color\" ||\n                  key0 == \"timeRange\" ||\n                  key0 == \"transmissionReduction\"\n                );\n                if (isAdditional0) {\n                  valid1 = false;\n                  var err = {\n                    keyword: \"additionalProperties\",\n                    dataPath: (dataPath || \"\") + \"\",\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                      additionalProperty: \"\" + key0 + \"\",\n                    },\n                    message: \"should NOT have additional properties\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n              }\n              var data1 = data.name;\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"name\",\n                  },\n                  message: \"should have required property 'name'\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n                if (typeof data1 === \"string\") {\n                  if (ucs2length(data1) < 1) {\n                    var err = {\n                      keyword: \"minLength\",\n                      dataPath: (dataPath || \"\") + \"/name\",\n                      schemaPath: \"#/properties/name/minLength\",\n                      params: {\n                        limit: 1,\n                      },\n                      message: \"should NOT be shorter than 1 characters\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/name\",\n                    schemaPath: \"#/properties/name/type\",\n                    params: {\n                      type: \"string\",\n                    },\n                    message: \"should be string\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var valid1 = errors === errs_1;\n              }\n              var data1 = data.color;\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"color\",\n                  },\n                  message: \"should have required property 'color'\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n                var errs_2 = errors;\n                if (typeof data1 === \"string\") {\n                  if (!pattern0.test(data1)) {\n                    var err = {\n                      keyword: \"pattern\",\n                      dataPath: (dataPath || \"\") + \"/color\",\n                      schemaPath: \"ColorHex#/pattern\",\n                      params: {\n                        pattern: \"^#(?:[0-9a-fA-F]{3}){1,2}$\",\n                      },\n                      message:\n                        'should match pattern \"^#(?:[0-9a-fA-F]{3}){1,2}$\"',\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/color\",\n                    schemaPath: \"ColorHex#/type\",\n                    params: {\n                      type: \"string\",\n                    },\n                    message: \"should be string\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var valid2 = errors === errs_2;\n                var valid1 = errors === errs_1;\n              }\n              var data1 = data.timeRange;\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"timeRange\",\n                  },\n                  message: \"should have required property 'timeRange'\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n                var errs_2 = errors;\n                if (\n                  data1 &&\n                  typeof data1 === \"object\" &&\n                  !Array.isArray(data1)\n                ) {\n                  var errs__2 = errors;\n                  var valid3 = true;\n                  for (var key2 in data1) {\n                    var isAdditional2 = !(\n                      false ||\n                      key2 == \"begin\" ||\n                      key2 == \"end\"\n                    );\n                    if (isAdditional2) {\n                      valid3 = false;\n                      var err = {\n                        keyword: \"additionalProperties\",\n                        dataPath: (dataPath || \"\") + \"/timeRange\",\n                        schemaPath: \"DateRange#/additionalProperties\",\n                        params: {\n                          additionalProperty: \"\" + key2 + \"\",\n                        },\n                        message: \"should NOT have additional properties\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                  }\n                  var data2 = data1.begin;\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/timeRange\",\n                      schemaPath: \"DateRange#/required\",\n                      params: {\n                        missingProperty: \"begin\",\n                      },\n                      message: \"should have required property 'begin'\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n                    var errs__3 = errors,\n                      prevValid3 = false,\n                      valid3 = false,\n                      passingSchemas3 = null;\n                    var errs_4 = errors;\n                    if (typeof data2 === \"string\") {\n                      if (!formats.date.test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                          schemaPath:\n                            \"DateRange#/properties/begin/oneOf/0/format\",\n                          params: {\n                            format: \"date\",\n                          },\n                          message: 'should match format \"date\"',\n                        };\n                        if (vErrors === null) vErrors = [err];\n                        else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf/0/type\",\n                        params: {\n                          type: \"string\",\n                        },\n                        message: \"should be string\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                    var valid4 = errors === errs_4;\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 0;\n                    }\n                    var errs_4 = errors;\n                    if (typeof data2 === \"string\") {\n                      if (!formats[\"date-time\"].test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                          schemaPath:\n                            \"DateRange#/properties/begin/oneOf/1/format\",\n                          params: {\n                            format: \"date-time\",\n                          },\n                          message: 'should match format \"date-time\"',\n                        };\n                        if (vErrors === null) vErrors = [err];\n                        else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf/1/type\",\n                        params: {\n                          type: \"string\",\n                        },\n                        message: \"should be string\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                    var valid4 = errors === errs_4;\n                    if (valid4 && prevValid3) {\n                      valid3 = false;\n                      passingSchemas3 = [passingSchemas3, 1];\n                    } else {\n                      if (valid4) {\n                        valid3 = prevValid3 = true;\n                        passingSchemas3 = 1;\n                      }\n                    }\n                    if (!valid3) {\n                      var err = {\n                        keyword: \"oneOf\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/begin\",\n                        schemaPath: \"DateRange#/properties/begin/oneOf\",\n                        params: {\n                          passingSchemas: passingSchemas3,\n                        },\n                        message: \"should match exactly one schema in oneOf\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    } else {\n                      errors = errs__3;\n                      if (vErrors !== null) {\n                        if (errs__3) vErrors.length = errs__3;\n                        else vErrors = null;\n                      }\n                    }\n                    var valid3 = errors === errs_3;\n                  }\n                  var data2 = data1.end;\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/timeRange\",\n                      schemaPath: \"DateRange#/required\",\n                      params: {\n                        missingProperty: \"end\",\n                      },\n                      message: \"should have required property 'end'\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n                    var errs__3 = errors,\n                      prevValid3 = false,\n                      valid3 = false,\n                      passingSchemas3 = null;\n                    var errs_4 = errors;\n                    if (typeof data2 === \"string\") {\n                      if (!formats.date.test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                          schemaPath:\n                            \"DateRange#/properties/end/oneOf/0/format\",\n                          params: {\n                            format: \"date\",\n                          },\n                          message: 'should match format \"date\"',\n                        };\n                        if (vErrors === null) vErrors = [err];\n                        else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/0/type\",\n                        params: {\n                          type: \"string\",\n                        },\n                        message: \"should be string\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                    var valid4 = errors === errs_4;\n                    if (valid4) {\n                      valid3 = prevValid3 = true;\n                      passingSchemas3 = 0;\n                    }\n                    var errs_4 = errors;\n                    if (typeof data2 === \"string\") {\n                      if (!formats[\"date-time\"].test(data2)) {\n                        var err = {\n                          keyword: \"format\",\n                          dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                          schemaPath:\n                            \"DateRange#/properties/end/oneOf/1/format\",\n                          params: {\n                            format: \"date-time\",\n                          },\n                          message: 'should match format \"date-time\"',\n                        };\n                        if (vErrors === null) vErrors = [err];\n                        else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf/1/type\",\n                        params: {\n                          type: \"string\",\n                        },\n                        message: \"should be string\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                    var valid4 = errors === errs_4;\n                    if (valid4 && prevValid3) {\n                      valid3 = false;\n                      passingSchemas3 = [passingSchemas3, 1];\n                    } else {\n                      if (valid4) {\n                        valid3 = prevValid3 = true;\n                        passingSchemas3 = 1;\n                      }\n                    }\n                    if (!valid3) {\n                      var err = {\n                        keyword: \"oneOf\",\n                        dataPath: (dataPath || \"\") + \"/timeRange/end\",\n                        schemaPath: \"DateRange#/properties/end/oneOf\",\n                        params: {\n                          passingSchemas: passingSchemas3,\n                        },\n                        message: \"should match exactly one schema in oneOf\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    } else {\n                      errors = errs__3;\n                      if (vErrors !== null) {\n                        if (errs__3) vErrors.length = errs__3;\n                        else vErrors = null;\n                      }\n                    }\n                    var valid3 = errors === errs_3;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/timeRange\",\n                    schemaPath: \"DateRange#/type\",\n                    params: {\n                      type: \"object\",\n                    },\n                    message: \"should be object\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var valid2 = errors === errs_2;\n                var valid1 = errors === errs_1;\n              }\n              var data1 = data.transmissionReduction;\n              if (data1 === undefined) {\n                valid1 = false;\n                var err = {\n                  keyword: \"required\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/required\",\n                  params: {\n                    missingProperty: \"transmissionReduction\",\n                  },\n                  message:\n                    \"should have required property 'transmissionReduction'\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              } else {\n                var errs_1 = errors;\n                var errs_2 = errors;\n                if (\n                  data1 &&\n                  typeof data1 === \"object\" &&\n                  !Array.isArray(data1)\n                ) {\n                  var errs__2 = errors;\n                  var valid3 = true;\n                  for (var key2 in data1) {\n                    var isAdditional2 = !(\n                      false ||\n                      key2 == \"begin\" ||\n                      key2 == \"end\"\n                    );\n                    if (isAdditional2) {\n                      valid3 = false;\n                      var err = {\n                        keyword: \"additionalProperties\",\n                        dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                        schemaPath: \"PercentageRange#/additionalProperties\",\n                        params: {\n                          additionalProperty: \"\" + key2 + \"\",\n                        },\n                        message: \"should NOT have additional properties\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                  }\n                  var data2 = data1.begin;\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                      schemaPath: \"PercentageRange#/required\",\n                      params: {\n                        missingProperty: \"begin\",\n                      },\n                      message: \"should have required property 'begin'\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n                    if (typeof data2 === \"number\") {\n                      var schema3 = data1 && data1.end;\n                      if (\n                        (schema3 !== undefined && typeof schema3 != \"number\") ||\n                        data2 > schema3 ||\n                        data2 !== data2\n                      ) {\n                        var err = {\n                          keyword: \"maximum\",\n                          dataPath:\n                            (dataPath || \"\") + \"/transmissionReduction/begin\",\n                          schemaPath:\n                            \"PercentageRange#/properties/begin/maximum\",\n                          params: {\n                            comparison: \"<=\",\n                            limit: schema3,\n                            exclusive: false,\n                          },\n                          message: \"should be <= \" + schema3,\n                        };\n                        if (vErrors === null) vErrors = [err];\n                        else vErrors.push(err);\n                        errors++;\n                      }\n                      if (data2 < 0 || data2 !== data2) {\n                        var err = {\n                          keyword: \"minimum\",\n                          dataPath:\n                            (dataPath || \"\") + \"/transmissionReduction/begin\",\n                          schemaPath:\n                            \"PercentageRange#/properties/begin/minimum\",\n                          params: {\n                            comparison: \">=\",\n                            limit: 0,\n                            exclusive: false,\n                          },\n                          message: \"should be >= 0\",\n                        };\n                        if (vErrors === null) vErrors = [err];\n                        else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath:\n                          (dataPath || \"\") + \"/transmissionReduction/begin\",\n                        schemaPath: \"PercentageRange#/properties/begin/type\",\n                        params: {\n                          type: \"number\",\n                        },\n                        message: \"should be number\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                    var valid3 = errors === errs_3;\n                  }\n                  var data2 = data1.end;\n                  if (data2 === undefined) {\n                    valid3 = false;\n                    var err = {\n                      keyword: \"required\",\n                      dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                      schemaPath: \"PercentageRange#/required\",\n                      params: {\n                        missingProperty: \"end\",\n                      },\n                      message: \"should have required property 'end'\",\n                    };\n                    if (vErrors === null) vErrors = [err];\n                    else vErrors.push(err);\n                    errors++;\n                  } else {\n                    var errs_3 = errors;\n                    if (typeof data2 === \"number\") {\n                      if (data2 > 100 || data2 !== data2) {\n                        var err = {\n                          keyword: \"maximum\",\n                          dataPath:\n                            (dataPath || \"\") + \"/transmissionReduction/end\",\n                          schemaPath: \"PercentageRange#/properties/end/maximum\",\n                          params: {\n                            comparison: \"<=\",\n                            limit: 100,\n                            exclusive: false,\n                          },\n                          message: \"should be <= 100\",\n                        };\n                        if (vErrors === null) vErrors = [err];\n                        else vErrors.push(err);\n                        errors++;\n                      }\n                    } else {\n                      var err = {\n                        keyword: \"type\",\n                        dataPath:\n                          (dataPath || \"\") + \"/transmissionReduction/end\",\n                        schemaPath: \"PercentageRange#/properties/end/type\",\n                        params: {\n                          type: \"number\",\n                        },\n                        message: \"should be number\",\n                      };\n                      if (vErrors === null) vErrors = [err];\n                      else vErrors.push(err);\n                      errors++;\n                    }\n                    var valid3 = errors === errs_3;\n                  }\n                } else {\n                  var err = {\n                    keyword: \"type\",\n                    dataPath: (dataPath || \"\") + \"/transmissionReduction\",\n                    schemaPath: \"PercentageRange#/type\",\n                    params: {\n                      type: \"object\",\n                    },\n                    message: \"should be object\",\n                  };\n                  if (vErrors === null) vErrors = [err];\n                  else vErrors.push(err);\n                  errors++;\n                }\n                var valid2 = errors === errs_2;\n                var valid1 = errors === errs_1;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/type\",\n                params: {\n                  type: \"object\",\n                },\n                message: \"should be object\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            validate.errors = vErrors;\n            return errors === 0;\n          };\n        })();\n        refVal1.schema = {\n          $schema: \"http://json-schema.org/draft-07/schema\",\n          $id: \"MitigationInterval\",\n          title: \"MitigationInterval\",\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"name\", \"color\", \"timeRange\", \"transmissionReduction\"],\n          properties: {\n            name: {\n              type: \"string\",\n              minLength: 1,\n            },\n            color: {\n              $ref: \"ColorHex#\",\n            },\n            timeRange: {\n              $ref: \"DateRange#\",\n            },\n            transmissionReduction: {\n              $ref: \"PercentageRange#\",\n            },\n          },\n        };\n        refVal1.errors = null;\n        refVal[1] = refVal1;\n        return function validate(\n          data,\n          dataPath,\n          parentData,\n          parentDataProperty,\n          rootData\n        ) {\n          \"use strict\" /*# sourceURL=ScenarioDatumMitigation */;\n          var vErrors = null;\n          var errors = 0;\n          if (rootData === undefined) rootData = data;\n          if (data && typeof data === \"object\" && !Array.isArray(data)) {\n            var errs__0 = errors;\n            var valid1 = true;\n            for (var key0 in data) {\n              var isAdditional0 = !(false || key0 == \"mitigationIntervals\");\n              if (isAdditional0) {\n                valid1 = false;\n                var err = {\n                  keyword: \"additionalProperties\",\n                  dataPath: (dataPath || \"\") + \"\",\n                  schemaPath: \"#/additionalProperties\",\n                  params: {\n                    additionalProperty: \"\" + key0 + \"\",\n                  },\n                  message: \"should NOT have additional properties\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            }\n            var data1 = data.mitigationIntervals;\n            if (data1 === undefined) {\n              valid1 = false;\n              var err = {\n                keyword: \"required\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/required\",\n                params: {\n                  missingProperty: \"mitigationIntervals\",\n                },\n                message: \"should have required property 'mitigationIntervals'\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            } else {\n              var errs_1 = errors;\n              if (Array.isArray(data1)) {\n                var errs__1 = errors;\n                var valid1;\n                for (var i1 = 0; i1 < data1.length; i1++) {\n                  var errs_2 = errors;\n                  if (\n                    !refVal1(\n                      data1[i1],\n                      (dataPath || \"\") + \"/mitigationIntervals/\" + i1,\n                      data1,\n                      i1,\n                      rootData\n                    )\n                  ) {\n                    if (vErrors === null) vErrors = refVal1.errors;\n                    else vErrors = vErrors.concat(refVal1.errors);\n                    errors = vErrors.length;\n                  }\n                  var valid2 = errors === errs_2;\n                }\n              } else {\n                var err = {\n                  keyword: \"type\",\n                  dataPath: (dataPath || \"\") + \"/mitigationIntervals\",\n                  schemaPath: \"#/properties/mitigationIntervals/type\",\n                  params: {\n                    type: \"array\",\n                  },\n                  message: \"should be array\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var valid1 = errors === errs_1;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/type\",\n              params: {\n                type: \"object\",\n              },\n              message: \"should be object\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          validate.errors = vErrors;\n          return errors === 0;\n        };\n      })();\n      refVal4.schema = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"ScenarioDatumMitigation\",\n        title: \"ScenarioDatumMitigation\",\n        type: \"object\",\n        additionalProperties: false,\n        required: [\"mitigationIntervals\"],\n        properties: {\n          mitigationIntervals: {\n            type: \"array\",\n            items: {\n              $ref: \"MitigationInterval#\",\n            },\n          },\n        },\n      };\n      refVal4.errors = null;\n      refVal[4] = refVal4;\n      return function validate(\n        data,\n        dataPath,\n        parentData,\n        parentDataProperty,\n        rootData\n      ) {\n        \"use strict\" /*# sourceURL=ScenarioDatum */;\n        var vErrors = null;\n        var errors = 0;\n        if (rootData === undefined) rootData = data;\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n          for (var key0 in data) {\n            var isAdditional0 = !(\n              false ||\n              key0 == \"population\" ||\n              key0 == \"epidemiological\" ||\n              key0 == \"simulation\" ||\n              key0 == \"mitigation\"\n            );\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\",\n                },\n                message: \"should NOT have additional properties\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          }\n          if (data.population === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"population\",\n              },\n              message: \"should have required property 'population'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            if (\n              !refVal1(\n                data.population,\n                (dataPath || \"\") + \"/population\",\n                data,\n                \"population\",\n                rootData\n              )\n            ) {\n              if (vErrors === null) vErrors = refVal1.errors;\n              else vErrors = vErrors.concat(refVal1.errors);\n              errors = vErrors.length;\n            }\n            var valid1 = errors === errs_1;\n          }\n          if (data.epidemiological === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"epidemiological\",\n              },\n              message: \"should have required property 'epidemiological'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            if (\n              !refVal2(\n                data.epidemiological,\n                (dataPath || \"\") + \"/epidemiological\",\n                data,\n                \"epidemiological\",\n                rootData\n              )\n            ) {\n              if (vErrors === null) vErrors = refVal2.errors;\n              else vErrors = vErrors.concat(refVal2.errors);\n              errors = vErrors.length;\n            }\n            var valid1 = errors === errs_1;\n          }\n          if (data.simulation === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"simulation\",\n              },\n              message: \"should have required property 'simulation'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            if (\n              !refVal3(\n                data.simulation,\n                (dataPath || \"\") + \"/simulation\",\n                data,\n                \"simulation\",\n                rootData\n              )\n            ) {\n              if (vErrors === null) vErrors = refVal3.errors;\n              else vErrors = vErrors.concat(refVal3.errors);\n              errors = vErrors.length;\n            }\n            var valid1 = errors === errs_1;\n          }\n          if (data.mitigation === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"mitigation\",\n              },\n              message: \"should have required property 'mitigation'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            if (\n              !refVal4(\n                data.mitigation,\n                (dataPath || \"\") + \"/mitigation\",\n                data,\n                \"mitigation\",\n                rootData\n              )\n            ) {\n              if (vErrors === null) vErrors = refVal4.errors;\n              else vErrors = vErrors.concat(refVal4.errors);\n              errors = vErrors.length;\n            }\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\",\n            },\n            message: \"should be object\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    })();\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"ScenarioDatum\",\n      title: \"ScenarioDatum\",\n      type: \"object\",\n      additionalProperties: false,\n      required: [\"population\", \"epidemiological\", \"simulation\", \"mitigation\"],\n      properties: {\n        population: {\n          $ref: \"ScenarioDatumPopulation#\",\n        },\n        epidemiological: {\n          $ref: \"ScenarioDatumEpidemiological#\",\n        },\n        simulation: {\n          $ref: \"ScenarioDatumSimulation#\",\n        },\n        mitigation: {\n          $ref: \"ScenarioDatumMitigation#\",\n        },\n      },\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(\n      data,\n      dataPath,\n      parentData,\n      parentDataProperty,\n      rootData\n    ) {\n      \"use strict\" /*# sourceURL=ScenarioData */;\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\",\n              },\n              message: \"should NOT have additional properties\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        var data1 = data.name;\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\",\n            },\n            message: \"should have required property 'name'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1,\n                },\n                message: \"should NOT be shorter than 1 characters\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\",\n              },\n              message: \"should be string\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.data === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\",\n            },\n            message: \"should have required property 'data'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (\n            !refVal1(\n              data.data,\n              (dataPath || \"\") + \"/data\",\n              data,\n              \"data\",\n              rootData\n            )\n          ) {\n            if (vErrors === null) vErrors = refVal1.errors;\n            else vErrors = vErrors.concat(refVal1.errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\",\n          },\n          message: \"should be object\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal2.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"ScenarioData\",\n    title: \"ScenarioData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1,\n      },\n      data: {\n        $ref: \"ScenarioDatum#\",\n      },\n    },\n  };\n  refVal2.errors = null;\n  refVal[2] = refVal2;\n  var refVal3 = (function () {\n    var refVal = [];\n    var refVal1 = (function () {\n      var refVal = [];\n      var refVal1 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"AgeGroup\",\n        title: \"AgeGroup\",\n        type: \"string\",\n        enum: [\n          \"0-9\",\n          \"10-19\",\n          \"20-29\",\n          \"30-39\",\n          \"40-49\",\n          \"50-59\",\n          \"60-69\",\n          \"70-79\",\n          \"80+\",\n        ],\n      };\n      refVal[1] = refVal1;\n      var refVal2 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"IntegerNonNegative\",\n        title: \"IntegerNonNegative\",\n        type: \"integer\",\n        multipleOf: 1,\n        minimum: 0,\n      };\n      refVal[2] = refVal2;\n      return function validate(\n        data,\n        dataPath,\n        parentData,\n        parentDataProperty,\n        rootData\n      ) {\n        \"use strict\" /*# sourceURL=AgeDistributionDatum */;\n        var vErrors = null;\n        var errors = 0;\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n          for (var key0 in data) {\n            var isAdditional0 = !(\n              false ||\n              key0 == \"ageGroup\" ||\n              key0 == \"population\"\n            );\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\",\n                },\n                message: \"should NOT have additional properties\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          }\n          var data1 = data.ageGroup;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"ageGroup\",\n              },\n              message: \"should have required property 'ageGroup'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 !== \"string\") {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/type\",\n                params: {\n                  type: \"string\",\n                },\n                message: \"should be string\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var schema2 = refVal1.enum;\n            var valid2;\n            valid2 = false;\n            for (var i2 = 0; i2 < schema2.length; i2++)\n              if (equal(data1, schema2[i2])) {\n                valid2 = true;\n                break;\n              }\n            if (!valid2) {\n              var err = {\n                keyword: \"enum\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/enum\",\n                params: {\n                  allowedValues: schema2,\n                },\n                message: \"should be equal to one of the allowed values\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.population;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"population\",\n              },\n              message: \"should have required property 'population'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 !== \"number\" || data1 % 1 || data1 !== data1) {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/population\",\n                schemaPath: \"IntegerNonNegative#/type\",\n                params: {\n                  type: \"integer\",\n                },\n                message: \"should be integer\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            if (typeof data1 === \"number\") {\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/population\",\n                  schemaPath: \"IntegerNonNegative#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              var division2;\n              if (\n                ((division2 = data1 / 1), division2 !== parseInt(division2))\n              ) {\n                var err = {\n                  keyword: \"multipleOf\",\n                  dataPath: (dataPath || \"\") + \"/population\",\n                  schemaPath: \"IntegerNonNegative#/multipleOf\",\n                  params: {\n                    multipleOf: 1,\n                  },\n                  message: \"should be multiple of 1\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\",\n            },\n            message: \"should be object\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    })();\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"AgeDistributionDatum\",\n      title: \"AgeDistributionDatum\",\n      type: \"object\",\n      additionalProperties: false,\n      required: [\"ageGroup\", \"population\"],\n      properties: {\n        ageGroup: {\n          $ref: \"AgeGroup#\",\n        },\n        population: {\n          $ref: \"IntegerNonNegative#\",\n        },\n      },\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(\n      data,\n      dataPath,\n      parentData,\n      parentDataProperty,\n      rootData\n    ) {\n      \"use strict\" /*# sourceURL=AgeDistributionData */;\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\",\n              },\n              message: \"should NOT have additional properties\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        var data1 = data.name;\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\",\n            },\n            message: \"should have required property 'name'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1,\n                },\n                message: \"should NOT be shorter than 1 characters\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\",\n              },\n              message: \"should be string\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        var data1 = data.data;\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\",\n            },\n            message: \"should have required property 'data'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (Array.isArray(data1)) {\n            var errs__1 = errors;\n            var valid1;\n            for (var i1 = 0; i1 < data1.length; i1++) {\n              var errs_2 = errors;\n              if (\n                !refVal1(\n                  data1[i1],\n                  (dataPath || \"\") + \"/data/\" + i1,\n                  data1,\n                  i1,\n                  rootData\n                )\n              ) {\n                if (vErrors === null) vErrors = refVal1.errors;\n                else vErrors = vErrors.concat(refVal1.errors);\n                errors = vErrors.length;\n              }\n              var valid2 = errors === errs_2;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/data\",\n              schemaPath: \"#/properties/data/type\",\n              params: {\n                type: \"array\",\n              },\n              message: \"should be array\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\",\n          },\n          message: \"should be object\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal3.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"AgeDistributionData\",\n    title: \"AgeDistributionData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1,\n      },\n      data: {\n        type: \"array\",\n        items: {\n          $ref: \"AgeDistributionDatum#\",\n        },\n      },\n    },\n  };\n  refVal3.errors = null;\n  refVal[3] = refVal3;\n  var refVal4 = (function () {\n    var refVal = [];\n    var refVal1 = (function () {\n      var refVal = [];\n      var refVal1 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"AgeGroup\",\n        title: \"AgeGroup\",\n        type: \"string\",\n        enum: [\n          \"0-9\",\n          \"10-19\",\n          \"20-29\",\n          \"30-39\",\n          \"40-49\",\n          \"50-59\",\n          \"60-69\",\n          \"70-79\",\n          \"80+\",\n        ],\n      };\n      refVal[1] = refVal1;\n      var refVal2 = {\n        $schema: \"http://json-schema.org/draft-07/schema\",\n        $id: \"Percentage\",\n        title: \"Percentage\",\n        type: \"number\",\n        minimum: 0,\n        maximum: 100,\n      };\n      refVal[2] = refVal2;\n      return function validate(\n        data,\n        dataPath,\n        parentData,\n        parentDataProperty,\n        rootData\n      ) {\n        \"use strict\" /*# sourceURL=SeverityDistributionDatum */;\n        var vErrors = null;\n        var errors = 0;\n        if (data && typeof data === \"object\" && !Array.isArray(data)) {\n          var errs__0 = errors;\n          var valid1 = true;\n          for (var key0 in data) {\n            var isAdditional0 = !(\n              false ||\n              key0 == \"ageGroup\" ||\n              key0 == \"isolated\" ||\n              key0 == \"confirmed\" ||\n              key0 == \"severe\" ||\n              key0 == \"critical\" ||\n              key0 == \"fatal\"\n            );\n            if (isAdditional0) {\n              valid1 = false;\n              var err = {\n                keyword: \"additionalProperties\",\n                dataPath: (dataPath || \"\") + \"\",\n                schemaPath: \"#/additionalProperties\",\n                params: {\n                  additionalProperty: \"\" + key0 + \"\",\n                },\n                message: \"should NOT have additional properties\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          }\n          var data1 = data.ageGroup;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"ageGroup\",\n              },\n              message: \"should have required property 'ageGroup'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 !== \"string\") {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/type\",\n                params: {\n                  type: \"string\",\n                },\n                message: \"should be string\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var schema2 = refVal1.enum;\n            var valid2;\n            valid2 = false;\n            for (var i2 = 0; i2 < schema2.length; i2++)\n              if (equal(data1, schema2[i2])) {\n                valid2 = true;\n                break;\n              }\n            if (!valid2) {\n              var err = {\n                keyword: \"enum\",\n                dataPath: (dataPath || \"\") + \"/ageGroup\",\n                schemaPath: \"AgeGroup#/enum\",\n                params: {\n                  allowedValues: schema2,\n                },\n                message: \"should be equal to one of the allowed values\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.isolated;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"isolated\",\n              },\n              message: \"should have required property 'isolated'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/isolated\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/isolated\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.confirmed;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"confirmed\",\n              },\n              message: \"should have required property 'confirmed'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/confirmed\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/confirmed\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.severe;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"severe\",\n              },\n              message: \"should have required property 'severe'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/severe\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/severe\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.critical;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"critical\",\n              },\n              message: \"should have required property 'critical'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/critical\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/critical\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n          var data1 = data.fatal;\n          if (data1 === undefined) {\n            valid1 = false;\n            var err = {\n              keyword: \"required\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/required\",\n              params: {\n                missingProperty: \"fatal\",\n              },\n              message: \"should have required property 'fatal'\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            var errs_1 = errors;\n            var errs_2 = errors;\n            if (typeof data1 === \"number\") {\n              if (data1 > 100 || data1 !== data1) {\n                var err = {\n                  keyword: \"maximum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/maximum\",\n                  params: {\n                    comparison: \"<=\",\n                    limit: 100,\n                    exclusive: false,\n                  },\n                  message: \"should be <= 100\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n              if (data1 < 0 || data1 !== data1) {\n                var err = {\n                  keyword: \"minimum\",\n                  dataPath: (dataPath || \"\") + \"/fatal\",\n                  schemaPath: \"Percentage#/minimum\",\n                  params: {\n                    comparison: \">=\",\n                    limit: 0,\n                    exclusive: false,\n                  },\n                  message: \"should be >= 0\",\n                };\n                if (vErrors === null) vErrors = [err];\n                else vErrors.push(err);\n                errors++;\n              }\n            } else {\n              var err = {\n                keyword: \"type\",\n                dataPath: (dataPath || \"\") + \"/fatal\",\n                schemaPath: \"Percentage#/type\",\n                params: {\n                  type: \"number\",\n                },\n                message: \"should be number\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n            var valid2 = errors === errs_2;\n            var valid1 = errors === errs_1;\n          }\n        } else {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/type\",\n            params: {\n              type: \"object\",\n            },\n            message: \"should be object\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n        validate.errors = vErrors;\n        return errors === 0;\n      };\n    })();\n    refVal1.schema = {\n      $schema: \"http://json-schema.org/draft-07/schema\",\n      $id: \"SeverityDistributionDatum\",\n      title: \"SeverityDistributionDatum\",\n      additionalProperties: false,\n      type: \"object\",\n      required: [\n        \"ageGroup\",\n        \"isolated\",\n        \"confirmed\",\n        \"severe\",\n        \"critical\",\n        \"fatal\",\n      ],\n      properties: {\n        ageGroup: {\n          $ref: \"AgeGroup#\",\n        },\n        isolated: {\n          $ref: \"Percentage#\",\n        },\n        confirmed: {\n          $ref: \"Percentage#\",\n        },\n        severe: {\n          $ref: \"Percentage#\",\n        },\n        critical: {\n          $ref: \"Percentage#\",\n        },\n        fatal: {\n          $ref: \"Percentage#\",\n        },\n      },\n    };\n    refVal1.errors = null;\n    refVal[1] = refVal1;\n    return function validate(\n      data,\n      dataPath,\n      parentData,\n      parentDataProperty,\n      rootData\n    ) {\n      \"use strict\" /*# sourceURL=SeverityDistributionData */;\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if (data && typeof data === \"object\" && !Array.isArray(data)) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == \"name\" || key0 == \"data\");\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: \"additionalProperties\",\n              dataPath: (dataPath || \"\") + \"\",\n              schemaPath: \"#/additionalProperties\",\n              params: {\n                additionalProperty: \"\" + key0 + \"\",\n              },\n              message: \"should NOT have additional properties\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        var data1 = data.name;\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"name\",\n            },\n            message: \"should have required property 'name'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (typeof data1 === \"string\") {\n            if (ucs2length(data1) < 1) {\n              var err = {\n                keyword: \"minLength\",\n                dataPath: (dataPath || \"\") + \"/name\",\n                schemaPath: \"#/properties/name/minLength\",\n                params: {\n                  limit: 1,\n                },\n                message: \"should NOT be shorter than 1 characters\",\n              };\n              if (vErrors === null) vErrors = [err];\n              else vErrors.push(err);\n              errors++;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/name\",\n              schemaPath: \"#/properties/name/type\",\n              params: {\n                type: \"string\",\n              },\n              message: \"should be string\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        var data1 = data.data;\n        if (data1 === undefined) {\n          valid1 = false;\n          var err = {\n            keyword: \"required\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/required\",\n            params: {\n              missingProperty: \"data\",\n            },\n            message: \"should have required property 'data'\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        } else {\n          var errs_1 = errors;\n          if (Array.isArray(data1)) {\n            var errs__1 = errors;\n            var valid1;\n            for (var i1 = 0; i1 < data1.length; i1++) {\n              var errs_2 = errors;\n              if (\n                !refVal1(\n                  data1[i1],\n                  (dataPath || \"\") + \"/data/\" + i1,\n                  data1,\n                  i1,\n                  rootData\n                )\n              ) {\n                if (vErrors === null) vErrors = refVal1.errors;\n                else vErrors = vErrors.concat(refVal1.errors);\n                errors = vErrors.length;\n              }\n              var valid2 = errors === errs_2;\n            }\n          } else {\n            var err = {\n              keyword: \"type\",\n              dataPath: (dataPath || \"\") + \"/data\",\n              schemaPath: \"#/properties/data/type\",\n              params: {\n                type: \"array\",\n              },\n              message: \"should be array\",\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: \"type\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/type\",\n          params: {\n            type: \"object\",\n          },\n          message: \"should be object\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal4.schema = {\n    $schema: \"http://json-schema.org/draft-07/schema\",\n    $id: \"SeverityDistributionData\",\n    title: \"SeverityDistributionData\",\n    type: \"object\",\n    additionalProperties: false,\n    required: [\"name\", \"data\"],\n    properties: {\n      name: {\n        type: \"string\",\n        minLength: 1,\n      },\n      data: {\n        type: \"array\",\n        items: {\n          $ref: \"SeverityDistributionDatum#\",\n        },\n      },\n    },\n  };\n  refVal4.errors = null;\n  refVal[4] = refVal4;\n  return function validate(\n    data,\n    dataPath,\n    parentData,\n    parentDataProperty,\n    rootData\n  ) {\n    \"use strict\" /*# sourceURL=Shareable */;\n    var vErrors = null;\n    var errors = 0;\n    if (rootData === undefined) rootData = data;\n    if (data && typeof data === \"object\" && !Array.isArray(data)) {\n      var errs__0 = errors;\n      var valid1 = true;\n      for (var key0 in data) {\n        var isAdditional0 = !(\n          false ||\n          key0 == \"schemaVer\" ||\n          key0 == \"scenarioData\" ||\n          key0 == \"ageDistributionData\" ||\n          key0 == \"severityDistributionData\"\n        );\n        if (isAdditional0) {\n          valid1 = false;\n          var err = {\n            keyword: \"additionalProperties\",\n            dataPath: (dataPath || \"\") + \"\",\n            schemaPath: \"#/additionalProperties\",\n            params: {\n              additionalProperty: \"\" + key0 + \"\",\n            },\n            message: \"should NOT have additional properties\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n      }\n      var data1 = data.schemaVer;\n      if (data1 === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"schemaVer\",\n          },\n          message: \"should have required property 'schemaVer'\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n        var errs_2 = errors;\n        if (typeof data1 !== \"string\") {\n          var err = {\n            keyword: \"type\",\n            dataPath: (dataPath || \"\") + \"/schemaVer\",\n            schemaPath: \"_SchemaVer#/type\",\n            params: {\n              type: \"string\",\n            },\n            message: \"should be string\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n        var schema2 = refVal1.const;\n        var valid2 = equal(data1, schema2);\n        if (!valid2) {\n          var err = {\n            keyword: \"const\",\n            dataPath: (dataPath || \"\") + \"/schemaVer\",\n            schemaPath: \"_SchemaVer#/const\",\n            params: {\n              allowedValue: schema2,\n            },\n            message: \"should be equal to constant\",\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n        var valid2 = errors === errs_2;\n        var valid1 = errors === errs_1;\n      }\n      if (data.scenarioData === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"scenarioData\",\n          },\n          message: \"should have required property 'scenarioData'\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n        if (\n          !refVal2(\n            data.scenarioData,\n            (dataPath || \"\") + \"/scenarioData\",\n            data,\n            \"scenarioData\",\n            rootData\n          )\n        ) {\n          if (vErrors === null) vErrors = refVal2.errors;\n          else vErrors = vErrors.concat(refVal2.errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.ageDistributionData === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"ageDistributionData\",\n          },\n          message: \"should have required property 'ageDistributionData'\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n        if (\n          !refVal3(\n            data.ageDistributionData,\n            (dataPath || \"\") + \"/ageDistributionData\",\n            data,\n            \"ageDistributionData\",\n            rootData\n          )\n        ) {\n          if (vErrors === null) vErrors = refVal3.errors;\n          else vErrors = vErrors.concat(refVal3.errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.severityDistributionData === undefined) {\n        valid1 = false;\n        var err = {\n          keyword: \"required\",\n          dataPath: (dataPath || \"\") + \"\",\n          schemaPath: \"#/required\",\n          params: {\n            missingProperty: \"severityDistributionData\",\n          },\n          message: \"should have required property 'severityDistributionData'\",\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      } else {\n        var errs_1 = errors;\n        if (\n          !refVal4(\n            data.severityDistributionData,\n            (dataPath || \"\") + \"/severityDistributionData\",\n            data,\n            \"severityDistributionData\",\n            rootData\n          )\n        ) {\n          if (vErrors === null) vErrors = refVal4.errors;\n          else vErrors = vErrors.concat(refVal4.errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n    } else {\n      var err = {\n        keyword: \"type\",\n        dataPath: (dataPath || \"\") + \"\",\n        schemaPath: \"#/type\",\n        params: {\n          type: \"object\",\n        },\n        message: \"should be object\",\n      };\n      if (vErrors === null) vErrors = [err];\n      else vErrors.push(err);\n      errors++;\n    }\n    validate.errors = vErrors;\n    return errors === 0;\n  };\n})();\nvalidate.schema = {\n  $schema: \"http://json-schema.org/draft-07/schema\",\n  $id: \"Shareable\",\n  title: \"Shareable\",\n  type: \"object\",\n  additionalProperties: false,\n  required: [\n    \"schemaVer\",\n    \"scenarioData\",\n    \"ageDistributionData\",\n    \"severityDistributionData\",\n  ],\n  properties: {\n    schemaVer: {\n      $ref: \"_SchemaVer#\",\n    },\n    scenarioData: {\n      $ref: \"ScenarioData#\",\n    },\n    ageDistributionData: {\n      $ref: \"AgeDistributionData#\",\n    },\n    severityDistributionData: {\n      $ref: \"SeverityDistributionData#\",\n    },\n  },\n};\nvalidate.errors = null;\nmodule.exports = validate;\n"]},"metadata":{},"sourceType":"script"}