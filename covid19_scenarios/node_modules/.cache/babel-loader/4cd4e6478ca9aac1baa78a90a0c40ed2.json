{"ast":null,"code":"import moment from 'moment';\nimport createColor from 'create-color';\nimport { uuidv4 } from '../../helpers/uuid';\nexport function suggestNextMitigationInterval() {\n  const tMinMoment = moment();\n  const tMaxMoment = tMinMoment.clone().add(30, 'days');\n  const timeRange = {\n    begin: moment().toDate(),\n    end: tMaxMoment.toDate()\n  };\n  const interval = {\n    id: uuidv4(),\n    name: `Intervention from ${tMinMoment.format('D MMM YYYY')}`,\n    timeRange,\n    transmissionReduction: {\n      begin: 10,\n      end: 30\n    }\n  };\n  const color = createColor(interval);\n  return { ...interval,\n    color\n  };\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/algorithms/utils/suggestNextMitigationInterval.ts"],"names":["moment","createColor","uuidv4","suggestNextMitigationInterval","tMinMoment","tMaxMoment","clone","add","timeRange","begin","toDate","end","interval","id","name","format","transmissionReduction","color"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AAIA,OAAO,SAASC,6BAAT,GAA6D;AAClE,QAAMC,UAAU,GAAGJ,MAAM,EAAzB;AACA,QAAMK,UAAU,GAAGD,UAAU,CAACE,KAAX,GAAmBC,GAAnB,CAAuB,EAAvB,EAA2B,MAA3B,CAAnB;AAEA,QAAMC,SAAS,GAAG;AAAEC,IAAAA,KAAK,EAAET,MAAM,GAAGU,MAAT,EAAT;AAA4BC,IAAAA,GAAG,EAAEN,UAAU,CAACK,MAAX;AAAjC,GAAlB;AAEA,QAAME,QAAiD,GAAG;AACxDC,IAAAA,EAAE,EAAEX,MAAM,EAD8C;AAExDY,IAAAA,IAAI,EAAG,qBAAoBV,UAAU,CAACW,MAAX,CAAkB,YAAlB,CAAgC,EAFH;AAGxDP,IAAAA,SAHwD;AAIxDQ,IAAAA,qBAAqB,EAAE;AAAEP,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,GAAG,EAAE;AAAlB;AAJiC,GAA1D;AAOA,QAAMM,KAAK,GAAGhB,WAAW,CAACW,QAAD,CAAzB;AAEA,SAAO,EAAE,GAAGA,QAAL;AAAeK,IAAAA;AAAf,GAAP;AACD","sourcesContent":["import moment from 'moment'\n\nimport createColor from 'create-color'\nimport type { StrictOmit } from 'ts-essentials'\nimport { uuidv4 } from '../../helpers/uuid'\n\nimport type { MitigationInterval } from '../types/Param.types'\n\nexport function suggestNextMitigationInterval(): MitigationInterval {\n  const tMinMoment = moment()\n  const tMaxMoment = tMinMoment.clone().add(30, 'days')\n\n  const timeRange = { begin: moment().toDate(), end: tMaxMoment.toDate() }\n\n  const interval: StrictOmit<MitigationInterval, 'color'> = {\n    id: uuidv4(),\n    name: `Intervention from ${tMinMoment.format('D MMM YYYY')}`,\n    timeRange,\n    transmissionReduction: { begin: 10, end: 30 },\n  }\n\n  const color = createColor(interval)\n\n  return { ...interval, color }\n}\n"]},"metadata":{},"sourceType":"module"}