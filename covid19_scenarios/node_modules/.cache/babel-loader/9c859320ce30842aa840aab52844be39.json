{"ast":null,"code":"import _pt from \"prop-types\";\nimport _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormDatePicker.tsx\";\nimport React from 'react';\nimport { Field } from 'formik';\nimport Media from 'react-media';\nimport { Col, FormGroup, Row } from 'reactstrap';\nimport FormLabel from './FormLabel';\nimport { DateRangePicker } from './DateRangePicker'; // Function to determine number of months to display on the datepicker.\n\nfunction getNumberOfMonthsCount(media) {\n  const {\n    tiny,\n    small,\n    medium\n  } = media;\n  if (tiny) return 1;\n  if (small) return 2;\n  if (medium) return 3;\n  return 4;\n}\n\nexport function FormDatePicker({\n  identifier,\n  label,\n  help,\n  allowPast = true\n}) {\n  return /*#__PURE__*/React.createElement(Field, {\n    name: identifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, ({\n    field: {\n      value\n    },\n    form: {\n      setFieldValue\n    }\n  }) => {\n    return /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"my-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, label && !_isEmpty(label) && /*#__PURE__*/React.createElement(Col, {\n      xl: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      identifier: identifier,\n      label: label,\n      help: help,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xl: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      queries: {\n        tiny: {\n          maxWidth: 899\n        },\n        small: {\n          minWidth: 900,\n          maxWidth: 1199\n        },\n        medium: {\n          minWidth: 1200,\n          maxWidth: 1499\n        },\n        large: {\n          minWidth: 1500\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, media => {\n      const {\n        small\n      } = media;\n      const numberOfMonths = getNumberOfMonthsCount(media);\n      const orientation = small ? 'vertical' : 'horizontal';\n      const withPortal = small;\n      return /*#__PURE__*/React.createElement(DateRangePicker, {\n        identifier: identifier,\n        value: value,\n        setValue: value => setFieldValue(identifier, value),\n        allowPast: allowPast,\n        numberOfMonths: numberOfMonths,\n        orientation: orientation,\n        withPortal: withPortal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      });\n    }))));\n  });\n}\n_c = FormDatePicker;\nFormDatePicker.propTypes = {\n  identifier: _pt.string.isRequired,\n  label: _pt.string,\n  help: _pt.oneOfType([_pt.string, _pt.node]),\n  allowPast: _pt.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDatePicker\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormDatePicker.tsx"],"names":["React","Field","Media","Col","FormGroup","Row","FormLabel","DateRangePicker","getNumberOfMonthsCount","media","tiny","small","medium","FormDatePicker","identifier","label","help","allowPast","field","value","form","setFieldValue","maxWidth","minWidth","large","numberOfMonths","orientation","withPortal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,KAAT,QAAkC,QAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,YAApC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,SAASC,eAAT,QAAgC,mBAAhC,C,CAEA;;AACA,SAASC,sBAAT,CAAgCC,KAAhC,EAA2F;AACzF,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA0BH,KAAhC;AACA,MAAIC,IAAJ,EAAU,OAAO,CAAP;AACV,MAAIC,KAAJ,EAAW,OAAO,CAAP;AACX,MAAIC,MAAJ,EAAY,OAAO,CAAP;AACZ,SAAO,CAAP;AACD;;AASD,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,SAAS,GAAG;AAAvC,CAAxB,EAA4F;AACjG,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEI,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAAT;AAAoBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAA1B,GAAD,KAA0E;AACzE,wBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,KAAK,IAAI,CAAC,SAAUA,KAAV,CAAV,iBACC,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAED,UAAvB;AAAmC,MAAA,KAAK,EAAEC,KAA1C;AAAiD,MAAA,IAAI,EAAEC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,eAME,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE;AACPN,QAAAA,IAAI,EAAE;AAAEY,UAAAA,QAAQ,EAAE;AAAZ,SADC;AAEPX,QAAAA,KAAK,EAAE;AAAEY,UAAAA,QAAQ,EAAE,GAAZ;AAAiBD,UAAAA,QAAQ,EAAE;AAA3B,SAFA;AAGPV,QAAAA,MAAM,EAAE;AAAEW,UAAAA,QAAQ,EAAE,IAAZ;AAAkBD,UAAAA,QAAQ,EAAE;AAA5B,SAHD;AAIPE,QAAAA,KAAK,EAAE;AAAED,UAAAA,QAAQ,EAAE;AAAZ;AAJA,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQId,KAAD,IAAW;AACV,YAAM;AAAEE,QAAAA;AAAF,UAAYF,KAAlB;AAEA,YAAMgB,cAAc,GAAGjB,sBAAsB,CAACC,KAAD,CAA7C;AACA,YAAMiB,WAAW,GAAGf,KAAK,GAAG,UAAH,GAAgB,YAAzC;AACA,YAAMgB,UAAU,GAAGhB,KAAnB;AAEA,0BACE,oBAAC,eAAD;AACE,QAAA,UAAU,EAAEG,UADd;AAEE,QAAA,KAAK,EAAEK,KAFT;AAGE,QAAA,QAAQ,EAAGA,KAAD,IAAWE,aAAa,CAACP,UAAD,EAAaK,KAAb,CAHpC;AAIE,QAAA,SAAS,EAAEF,SAJb;AAKE,QAAA,cAAc,EAAEQ,cALlB;AAME,QAAA,WAAW,EAAEC,WANf;AAOE,QAAA,UAAU,EAAEC,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD,KA1BH,CADF,CANF,CADF,CADF;AAyCD,GA3CH,CADF;AA+CD;KAhDed,c;;AANdC,EAAAA,U;AACAC,EAAAA,K;AACAC,EAAAA,I;AACAC,EAAAA,S","sourcesContent":["import React from 'react'\n\nimport _ from 'lodash'\n\nimport { Field, FieldProps } from 'formik'\nimport Media from 'react-media'\nimport { Col, FormGroup, Row } from 'reactstrap'\n\nimport FormLabel from './FormLabel'\n\nimport { DateRange } from '../../algorithms/types/Param.types'\n\nimport { DateRangePicker } from './DateRangePicker'\n\n// Function to determine number of months to display on the datepicker.\nfunction getNumberOfMonthsCount(media: { tiny: boolean; small: boolean; medium: boolean }) {\n  const { tiny, small, medium } = media\n  if (tiny) return 1\n  if (small) return 2\n  if (medium) return 3\n  return 4\n}\n\nexport interface FormDatePickerProps {\n  identifier: string\n  label?: string\n  help?: string | React.ReactNode\n  allowPast?: boolean\n}\n\nexport function FormDatePicker({ identifier, label, help, allowPast = true }: FormDatePickerProps) {\n  return (\n    <Field name={identifier}>\n      {({ field: { value }, form: { setFieldValue } }: FieldProps<DateRange>) => {\n        return (\n          <FormGroup className=\"my-0\">\n            <Row noGutters>\n              {label && !_.isEmpty(label) && (\n                <Col xl={7}>\n                  <FormLabel identifier={identifier} label={label} help={help} />\n                </Col>\n              )}\n              <Col xl={5}>\n                <Media\n                  queries={{\n                    tiny: { maxWidth: 899 },\n                    small: { minWidth: 900, maxWidth: 1199 },\n                    medium: { minWidth: 1200, maxWidth: 1499 },\n                    large: { minWidth: 1500 },\n                  }}\n                >\n                  {(media) => {\n                    const { small } = media\n\n                    const numberOfMonths = getNumberOfMonthsCount(media)\n                    const orientation = small ? 'vertical' : 'horizontal'\n                    const withPortal = small\n\n                    return (\n                      <DateRangePicker\n                        identifier={identifier}\n                        value={value}\n                        setValue={(value) => setFieldValue(identifier, value)}\n                        allowPast={allowPast}\n                        numberOfMonths={numberOfMonths}\n                        orientation={orientation}\n                        withPortal={withPortal}\n                      />\n                    )\n                  }}\n                </Media>\n              </Col>\n            </Row>\n          </FormGroup>\n        )\n      }}\n    </Field>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}