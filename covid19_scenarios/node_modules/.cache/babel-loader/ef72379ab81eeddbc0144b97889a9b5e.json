{"ast":null,"code":"import { Convert } from '../../algorithms/types/Param.types';\nimport validateSeverityDistributionArray, { errors } from '../../.generated/latest/validateSeverityDistributionArray';\nimport severityRaw from '../../assets/data/severityDistributions.json';\n\nfunction validate() {\n  const valid = validateSeverityDistributionArray(severityRaw);\n\n  if (!valid) {\n    throw errors;\n  }\n\n  return severityRaw.all;\n}\n\nconst severityDistributions = validate();\nexport const scenarioNames = severityDistributions.map(scenario => scenario.name);\nexport function getSeverityDistributionData(name) {\n  const severityDistributionFound = severityDistributions.find(s => s.name === name);\n\n  if (!severityDistributionFound) {\n    throw new Error(`Error: scenario \"${name}\" not found in JSON`);\n  }\n\n  const severityDistribution = Convert.toSeverityDistributionData(JSON.stringify(severityDistributionFound));\n  severityDistribution.data.sort((a, b) => {\n    if (a.ageGroup > b.ageGroup) {\n      return +1;\n    }\n\n    if (a.ageGroup < b.ageGroup) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return severityDistribution;\n}","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/io/defaults/getSeverityDistributionData.ts"],"names":["Convert","validateSeverityDistributionArray","errors","severityRaw","validate","valid","all","severityDistributions","scenarioNames","map","scenario","name","getSeverityDistributionData","severityDistributionFound","find","s","Error","severityDistribution","toSeverityDistributionData","JSON","stringify","data","sort","a","b","ageGroup"],"mappings":"AAAA,SAASA,OAAT,QAA6E,oCAA7E;AACA,OAAOC,iCAAP,IAA4CC,MAA5C,QAA0D,2DAA1D;AACA,OAAOC,WAAP,MAAwB,8CAAxB;;AAEA,SAASC,QAAT,GAAgD;AAC9C,QAAMC,KAAK,GAAGJ,iCAAiC,CAACE,WAAD,CAA/C;;AACA,MAAI,CAACE,KAAL,EAAY;AACV,UAAMH,MAAN;AACD;;AAED,SAASC,WAAF,CAAwDG,GAA/D;AACD;;AAED,MAAMC,qBAAqB,GAAGH,QAAQ,EAAtC;AACA,OAAO,MAAMI,aAAa,GAAGD,qBAAqB,CAACE,GAAtB,CAA2BC,QAAD,IAAcA,QAAQ,CAACC,IAAjD,CAAtB;AAEP,OAAO,SAASC,2BAAT,CAAqCD,IAArC,EAAmD;AACxD,QAAME,yBAAyB,GAAGN,qBAAqB,CAACO,IAAtB,CAA4BC,CAAD,IAAOA,CAAC,CAACJ,IAAF,KAAWA,IAA7C,CAAlC;;AACA,MAAI,CAACE,yBAAL,EAAgC;AAC9B,UAAM,IAAIG,KAAJ,CAAW,oBAAmBL,IAAK,qBAAnC,CAAN;AACD;;AAED,QAAMM,oBAAoB,GAAGjB,OAAO,CAACkB,0BAAR,CAAmCC,IAAI,CAACC,SAAL,CAAeP,yBAAf,CAAnC,CAA7B;AAEAI,EAAAA,oBAAoB,CAACI,IAArB,CAA0BC,IAA1B,CAA+B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvC,QAAID,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAC3B,aAAO,CAAC,CAAR;AACD;;AAED,QAAIF,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAC3B,aAAO,CAAC,CAAR;AACD;;AAED,WAAO,CAAP;AACD,GAVD;AAYA,SAAOR,oBAAP;AACD","sourcesContent":["import { Convert, SeverityDistributionArray, SeverityDistributionData } from '../../algorithms/types/Param.types'\nimport validateSeverityDistributionArray, { errors } from '../../.generated/latest/validateSeverityDistributionArray'\nimport severityRaw from '../../assets/data/severityDistributions.json'\n\nfunction validate(): SeverityDistributionData[] {\n  const valid = validateSeverityDistributionArray(severityRaw)\n  if (!valid) {\n    throw errors\n  }\n\n  return ((severityRaw as unknown) as SeverityDistributionArray).all\n}\n\nconst severityDistributions = validate()\nexport const scenarioNames = severityDistributions.map((scenario) => scenario.name)\n\nexport function getSeverityDistributionData(name: string) {\n  const severityDistributionFound = severityDistributions.find((s) => s.name === name)\n  if (!severityDistributionFound) {\n    throw new Error(`Error: scenario \"${name}\" not found in JSON`)\n  }\n\n  const severityDistribution = Convert.toSeverityDistributionData(JSON.stringify(severityDistributionFound))\n\n  severityDistribution.data.sort((a, b) => {\n    if (a.ageGroup > b.ageGroup) {\n      return +1\n    }\n\n    if (a.ageGroup < b.ageGroup) {\n      return -1\n    }\n\n    return 0\n  })\n\n  return severityDistribution\n}\n"]},"metadata":{},"sourceType":"module"}