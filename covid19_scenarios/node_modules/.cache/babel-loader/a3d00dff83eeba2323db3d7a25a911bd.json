{"ast":null,"code":"import _pt from \"prop-types\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormDropdownStateless.tsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { Col, FormGroup, Row } from 'reactstrap';\nimport FormLabel from './FormLabel';\nexport default function FormDropdownStateless({\n  identifier,\n  label,\n  help,\n  options,\n  defaultOption,\n  value,\n  onValueChange,\n  onOptionChange,\n  onBlur\n}) {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    identifier: identifier,\n    label: label,\n    help: help,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: identifier,\n    name: identifier,\n    options: options,\n    defaultValue: defaultOption,\n    value: value,\n    theme: theme => ({ ...theme\n    }),\n    isMulti: false,\n    onChange: option => {\n      // FIXME: This is currently cannot be expressed without type errors due to a defect in typings\n      // See: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/32553\n      // See: https://github.com/JedWatson/react-select/issues/2902\n      if (option) {\n        const optionCasted = option;\n        onValueChange === null || onValueChange === void 0 ? void 0 : onValueChange(optionCasted.value);\n        onOptionChange === null || onOptionChange === void 0 ? void 0 : onOptionChange(optionCasted);\n      }\n    },\n    onBlur: onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))));\n}\n_c = FormDropdownStateless;\nFormDropdownStateless.propTypes = {\n  identifier: _pt.string.isRequired,\n  label: _pt.oneOfType([_pt.string, _pt.node]).isRequired,\n  help: _pt.oneOfType([_pt.string, _pt.node]),\n  options: _pt.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDropdownStateless\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormDropdownStateless.tsx"],"names":["React","Select","Col","FormGroup","Row","FormLabel","FormDropdownStateless","identifier","label","help","options","defaultOption","value","onValueChange","onOptionChange","onBlur","theme","option","optionCasted"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAqD,cAArD;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,YAApC;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AAcA,eAAe,SAASC,qBAAT,CAAkE;AAC/EC,EAAAA,UAD+E;AAE/EC,EAAAA,KAF+E;AAG/EC,EAAAA,IAH+E;AAI/EC,EAAAA,OAJ+E;AAK/EC,EAAAA,aAL+E;AAM/EC,EAAAA,KAN+E;AAO/EC,EAAAA,aAP+E;AAQ/EC,EAAAA,cAR+E;AAS/EC,EAAAA;AAT+E,CAAlE,EAUkB;AAC/B,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAER,UAAvB;AAAmC,IAAA,KAAK,EAAEC,KAA1C;AAAiD,IAAA,IAAI,EAAEC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEF,UADN;AAEE,IAAA,IAAI,EAAEA,UAFR;AAGE,IAAA,OAAO,EAAEG,OAHX;AAIE,IAAA,YAAY,EAAEC,aAJhB;AAKE,IAAA,KAAK,EAAEC,KALT;AAME,IAAA,KAAK,EAAGI,KAAD,KAAY,EACjB,GAAGA;AADc,KAAZ,CANT;AASE,IAAA,OAAO,EAAE,KATX;AAUE,IAAA,QAAQ,EAAGC,MAAD,IAA4D;AACpE;AACA;AACA;AACA,UAAIA,MAAJ,EAAY;AACV,cAAMC,YAAY,GAAGD,MAArB;AACAJ,QAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAGK,YAAY,CAACN,KAAhB,CAAb;AACAE,QAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAGI,YAAH,CAAd;AACD;AACF,KAnBH;AAoBE,IAAA,MAAM,EAAEH,MApBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF;AAiCD;KA5CuBT,qB;;AAXtBC,EAAAA,U;AACAC,EAAAA,K;AACAC,EAAAA,I;AACAC,EAAAA,O","sourcesContent":["import React from 'react'\n\nimport Select, { ValueType as SelectValueType } from 'react-select'\nimport { Col, FormGroup, Row } from 'reactstrap'\n\nimport { FormDropdownOption } from './FormDropdownOption'\nimport FormLabel from './FormLabel'\n\nexport interface FormDropdownProps<ValueType extends string | number> {\n  identifier: string\n  label: string | React.ReactNode\n  help?: string | React.ReactNode\n  options: FormDropdownOption<ValueType>[]\n  defaultOption?: FormDropdownOption<ValueType>\n  value?: FormDropdownOption<ValueType>\n  onValueChange?(value: ValueType): void\n  onOptionChange?(option: FormDropdownOption<ValueType>): void\n  onBlur?<T>(e: React.FocusEvent<T>): void\n}\n\nexport default function FormDropdownStateless<ValueType extends string | number>({\n  identifier,\n  label,\n  help,\n  options,\n  defaultOption,\n  value,\n  onValueChange,\n  onOptionChange,\n  onBlur,\n}: FormDropdownProps<ValueType>) {\n  return (\n    <FormGroup className=\"my-0\">\n      <Row noGutters>\n        <Col xl={7}>\n          <FormLabel identifier={identifier} label={label} help={help} />\n        </Col>\n        <Col xl={5}>\n          <Select\n            id={identifier}\n            name={identifier}\n            options={options}\n            defaultValue={defaultOption}\n            value={value}\n            theme={(theme) => ({\n              ...theme,\n            })}\n            isMulti={false}\n            onChange={(option: SelectValueType<FormDropdownOption<ValueType>>) => {\n              // FIXME: This is currently cannot be expressed without type errors due to a defect in typings\n              // See: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/32553\n              // See: https://github.com/JedWatson/react-select/issues/2902\n              if (option) {\n                const optionCasted = option as FormDropdownOption<ValueType>\n                onValueChange?.(optionCasted.value)\n                onOptionChange?.(optionCasted)\n              }\n            }}\n            onBlur={onBlur}\n          />\n        </Col>\n      </Row>\n    </FormGroup>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}