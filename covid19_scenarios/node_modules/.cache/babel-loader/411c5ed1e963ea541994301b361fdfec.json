{"ast":null,"code":"import _pt from \"prop-types\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/PlotSpinner.tsx\";\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { connect } from 'react-redux';\nimport { selectIsRunning } from '../../../state/algorithm/algorithm.selectors';\nexport function RunningSpinner({\n  size\n}) {\n  return /*#__PURE__*/React.createElement(Loader, {\n    type: \"ThreeDots\",\n    color: \"#495057\",\n    height: size,\n    width: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  });\n}\n_c = RunningSpinner;\nRunningSpinner.propTypes = {\n  size: _pt.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isRunning: selectIsRunning(state)\n});\n\nconst mapDispatchToProps = {};\nexport const PlotSpinner = connect(mapStateToProps, mapDispatchToProps)(PlotSpinnerDisconnected);\nexport function PlotSpinnerDisconnected({\n  isRunning,\n  size = 75\n}) {\n  if (!isRunning) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RunningSpinner, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}\n_c2 = PlotSpinnerDisconnected;\nPlotSpinnerDisconnected.propTypes = {\n  isRunning: _pt.bool.isRequired,\n  size: _pt.number.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RunningSpinner\");\n$RefreshReg$(_c2, \"PlotSpinnerDisconnected\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Main/Results/PlotSpinner.tsx"],"names":["React","Loader","connect","selectIsRunning","RunningSpinner","size","mapStateToProps","state","isRunning","mapDispatchToProps","PlotSpinner","PlotSpinnerDisconnected"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,8CAAhC;AAOA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsD;AAC3D,sBAAO,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,MAAM,EAAEA,IAAjD;AAAuD,IAAA,KAAK,EAAEA,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;KAFeD,c;;AAHdC,EAAAA,I;;;AAYF,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,SAAS,EAAEL,eAAe,CAACI,KAAD;AADe,CAAnB,CAAxB;;AAIA,MAAME,kBAAkB,GAAG,EAA3B;AAEA,OAAO,MAAMC,WAAW,GAAGR,OAAO,CAACI,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CE,uBAA7C,CAApB;AAEP,OAAO,SAASA,uBAAT,CAAiC;AAAEH,EAAAA,SAAF;AAAaH,EAAAA,IAAI,GAAG;AAApB,CAAjC,EAA6E;AAClF,MAAI,CAACG,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEH,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;MAVeM,uB;;AAZdH,EAAAA,S;AACAH,EAAAA,I","sourcesContent":["import React from 'react'\n\nimport Loader from 'react-loader-spinner'\nimport { connect } from 'react-redux'\n\nimport { selectIsRunning } from '../../../state/algorithm/algorithm.selectors'\nimport { State } from '../../../state/reducer'\n\nexport interface RunningSpinerProps {\n  size: number\n}\n\nexport function RunningSpinner({ size }: RunningSpinerProps) {\n  return <Loader type=\"ThreeDots\" color=\"#495057\" height={size} width={size} />\n}\n\nexport interface PlotSpinnerProps {\n  isRunning: boolean\n  size: number\n}\n\nconst mapStateToProps = (state: State) => ({\n  isRunning: selectIsRunning(state),\n})\n\nconst mapDispatchToProps = {}\n\nexport const PlotSpinner = connect(mapStateToProps, mapDispatchToProps)(PlotSpinnerDisconnected)\n\nexport function PlotSpinnerDisconnected({ isRunning, size = 75 }: PlotSpinnerProps) {\n  if (!isRunning) {\n    return null\n  }\n\n  return (\n    <div className=\"spinner-container\">\n      <RunningSpinner size={size} />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}