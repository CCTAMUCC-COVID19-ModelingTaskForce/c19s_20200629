{"ast":null,"code":"import _pt from \"prop-types\";\nvar _jsxFileName = \"/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormDropdown.tsx\";\nimport React from 'react';\nimport { Field } from 'formik';\nimport FormDropdownStateless from './FormDropdownStateless';\nexport function FormDropdown({\n  identifier,\n  label,\n  help,\n  options\n}) {\n  return /*#__PURE__*/React.createElement(Field, {\n    name: identifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, ({\n    field: {\n      value,\n      onBlur\n    },\n    form: {\n      setFieldValue\n    }\n  }) => {\n    var _options$find$label, _options$find;\n\n    return /*#__PURE__*/React.createElement(FormDropdownStateless, {\n      identifier: identifier,\n      label: label,\n      help: help,\n      options: options,\n      value: {\n        value,\n        label: (_options$find$label = (_options$find = options.find(o => o.value === value)) === null || _options$find === void 0 ? void 0 : _options$find.label) !== null && _options$find$label !== void 0 ? _options$find$label : ''\n      },\n      onValueChange: value => {\n        setFieldValue === null || setFieldValue === void 0 ? void 0 : setFieldValue(identifier, value);\n      },\n      onOptionChange: option => {\n        setFieldValue === null || setFieldValue === void 0 ? void 0 : setFieldValue(identifier, option.value);\n      },\n      onBlur: onBlur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    });\n  });\n}\n_c = FormDropdown;\nFormDropdown.propTypes = {\n  identifier: _pt.string.isRequired,\n  label: _pt.string.isRequired,\n  help: _pt.oneOfType([_pt.string, _pt.node]),\n  options: _pt.arrayOf(_pt.shape({\n    label: _pt.string.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDropdown\");","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/components/Form/FormDropdown.tsx"],"names":["React","Field","FormDropdownStateless","FormDropdown","identifier","label","help","options","field","value","onBlur","form","setFieldValue","find","o","option"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAA6E,QAA7E;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAgBA,OAAO,SAASC,YAAT,CAAyD;AAC9DC,EAAAA,UAD8D;AAE9DC,EAAAA,KAF8D;AAG9DC,EAAAA,IAH8D;AAI9DC,EAAAA;AAJ8D,CAAzD,EAK0B;AAC/B,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEI,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAT;AAA4BC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAlC,GAAD,KAAkF;AAAA;;AACjF,wBACE,oBAAC,qBAAD;AACE,MAAA,UAAU,EAAER,UADd;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,IAAI,EAAEC,IAHR;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAF;AAASJ,QAAAA,KAAK,0CAAEE,OAAO,CAACM,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACL,KAAF,KAAYA,KAAhC,CAAF,kDAAE,cAAwCJ,KAA1C,qEAAmD;AAAjE,OALT;AAME,MAAA,aAAa,EAAGI,KAAD,IAAW;AACxBG,QAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAGR,UAAH,EAAeK,KAAf,CAAb;AACD,OARH;AASE,MAAA,cAAc,EAAGM,MAAD,IAAY;AAC1BH,QAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAGR,UAAH,EAAeW,MAAM,CAACN,KAAtB,CAAb;AACD,OAXH;AAYE,MAAA,MAAM,EAAEC,MAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAgBD,GAlBH,CADF;AAsBD;KA5BeP,Y;;AARdC,EAAAA,U;AACAC,EAAAA,K;AACAC,EAAAA,I;AACAC,EAAAA,O;AAPAF,IAAAA,K","sourcesContent":["import React from 'react'\n\nimport { Field, FieldProps, FormikErrors, FormikTouched, FormikValues } from 'formik'\nimport FormDropdownStateless from './FormDropdownStateless'\n\nexport interface FormDropdownOption<ValueType extends string | number> {\n  value: ValueType\n  label: string\n}\n\nexport interface FormDropdownProps<ValueType extends string | number> {\n  identifier: string\n  label: string\n  help?: string | React.ReactNode\n  options: FormDropdownOption<ValueType>[]\n  errors?: FormikErrors<FormikValues>\n  touched?: FormikTouched<FormikValues>\n}\n\nexport function FormDropdown<ValueType extends string | number>({\n  identifier,\n  label,\n  help,\n  options,\n}: FormDropdownProps<ValueType>) {\n  return (\n    <Field name={identifier}>\n      {({ field: { value, onBlur }, form: { setFieldValue } }: FieldProps<ValueType>) => {\n        return (\n          <FormDropdownStateless\n            identifier={identifier}\n            label={label}\n            help={help}\n            options={options}\n            value={{ value, label: options.find((o) => o.value === value)?.label ?? '' }}\n            onValueChange={(value) => {\n              setFieldValue?.(identifier, value)\n            }}\n            onOptionChange={(option) => {\n              setFieldValue?.(identifier, option.value)\n            }}\n            onBlur={onBlur}\n          />\n        )\n      }}\n    </Field>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}