{"ast":null,"code":"import _mapValues from \"lodash/mapValues\";\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport moment from 'moment';\nimport numbro from 'numbro';\nimport { ReactComponent as US } from 'flag-icon-css/flags/1x1/us.svg';\nimport { ReactComponent as DE } from 'flag-icon-css/flags/1x1/de.svg';\nimport { ReactComponent as ES } from 'flag-icon-css/flags/1x1/es.svg';\nimport { ReactComponent as FR } from 'flag-icon-css/flags/1x1/fr.svg';\nimport { ReactComponent as PL } from 'flag-icon-css/flags/1x1/pl.svg';\nimport { ReactComponent as PT } from 'flag-icon-css/flags/1x1/pt.svg';\nimport en from './resources/en.json';\nimport de from './resources/de.json';\nimport es from './resources/es.json';\nimport fr from './resources/fr.json';\nimport pl from './resources/pl.json';\nimport pt from './resources/pt.json';\nexport const localized = {\n  number: '{{value, localizedNumber}}'\n};\nexport const translations = {\n  en,\n  pt,\n  fr,\n  de,\n  es,\n  pl\n};\nexport const flags = new Map();\nexport const DEFAULT_LOCALE_KEY = 'en';\nexport const resources = _mapValues(translations, value => ({\n  translation: value\n}));\nexport const localeKeys = Object.keys(translations);\nexport const locales = {\n  en: {\n    full: 'en-US',\n    flag: 'us',\n    name: 'English',\n    Flag: US\n  },\n  de: {\n    full: 'de-DE',\n    flag: 'de',\n    name: 'Deutsch',\n    Flag: DE\n  },\n  es: {\n    full: 'es-ES',\n    flag: 'es',\n    name: 'Español',\n    Flag: ES\n  },\n  fr: {\n    full: 'fr-FR',\n    flag: 'fr',\n    name: 'Français',\n    Flag: FR\n  },\n  pl: {\n    full: 'pl-PL',\n    flag: 'pl',\n    name: 'Polski',\n    Flag: PL\n  },\n  pt: {\n    full: 'pt-PT',\n    flag: 'pt',\n    name: 'Português',\n    Flag: PT\n  }\n};\nexport const localesArray = Object.entries(locales).map(([key, value]) => ({ ...value,\n  key: key\n}));\nexport async function i18nInit({\n  localeKey\n}) {\n  // FIXME: make it an import if possible\n  // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n  Object.values(require('numbro/dist/languages.min.js')).forEach(l => numbro.registerLanguage(l));\n  await i18n.use(initReactI18next).init({\n    resources,\n    lng: 'en',\n    fallbackLng: 'en',\n    debug: process.env.DEV_ENABLE_I18N_DEBUG === '1',\n    keySeparator: false,\n    // Disable dots as key separators as we use dots in keys\n    nsSeparator: false,\n    interpolation: {\n      escapeValue: false,\n\n      format(value, format, lng) {\n        return value;\n      }\n\n    },\n    react: {\n      useSuspense: true\n    }\n  });\n  await changeLocale(localeKey);\n  return i18n;\n}\nexport function getLocaleWithKey(key) {\n  return { ...locales[key],\n    key\n  };\n}\nexport async function changeLocale(localeKey) {\n  const locale = locales[localeKey];\n  moment.locale(localeKey);\n  numbro.setLanguage(locale.full);\n  return i18n.changeLanguage(localeKey);\n}\nexport { numbro };\nexport default i18n;","map":{"version":3,"sources":["/home/ekrell/Documents/Work/repos/COVID19/c19s_20200629/covid19_scenarios/src/i18n/i18n.ts"],"names":["i18n","initReactI18next","moment","numbro","ReactComponent","US","DE","ES","FR","PL","PT","en","de","es","fr","pl","pt","localized","number","translations","flags","Map","DEFAULT_LOCALE_KEY","resources","value","translation","localeKeys","Object","keys","locales","full","flag","name","Flag","localesArray","entries","map","key","i18nInit","localeKey","values","require","forEach","l","registerLanguage","use","init","lng","fallbackLng","debug","process","env","DEV_ENABLE_I18N_DEBUG","keySeparator","nsSeparator","interpolation","escapeValue","format","react","useSuspense","changeLocale","getLocaleWithKey","locale","setLanguage","changeLanguage"],"mappings":"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","sourcesContent":["/* eslint-disable only-ascii/only-ascii */\nimport { mapValues } from 'lodash'\n\nimport i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nimport moment from 'moment'\nimport numbro from 'numbro'\n\nimport { ReactComponent as US } from 'flag-icon-css/flags/1x1/us.svg'\nimport { ReactComponent as DE } from 'flag-icon-css/flags/1x1/de.svg'\nimport { ReactComponent as ES } from 'flag-icon-css/flags/1x1/es.svg'\nimport { ReactComponent as FR } from 'flag-icon-css/flags/1x1/fr.svg'\nimport { ReactComponent as PL } from 'flag-icon-css/flags/1x1/pl.svg'\nimport { ReactComponent as PT } from 'flag-icon-css/flags/1x1/pt.svg'\n\nimport en from './resources/en.json'\nimport de from './resources/de.json'\nimport es from './resources/es.json'\nimport fr from './resources/fr.json'\nimport pl from './resources/pl.json'\nimport pt from './resources/pt.json'\n\nexport const localized = { number: '{{value, localizedNumber}}' } as const\nexport const translations = { en, pt, fr, de, es, pl }\nexport const flags = new Map()\n\nexport type LocaleKey = keyof typeof translations\n\nexport const DEFAULT_LOCALE_KEY: LocaleKey = 'en'\nexport const resources = mapValues(translations, (value) => ({ translation: value }))\nexport const localeKeys = Object.keys(translations) as LocaleKey[]\n\nexport interface Locale {\n  readonly full: string\n  readonly flag: string\n  readonly name: string\n  readonly Flag: React.ElementType\n}\n\nexport interface LocaleWithKey extends Locale {\n  key: LocaleKey\n}\n\nexport const locales: Record<LocaleKey, Locale> = {\n  en: { full: 'en-US', flag: 'us', name: 'English', Flag: US },\n  de: { full: 'de-DE', flag: 'de', name: 'Deutsch', Flag: DE },\n  es: { full: 'es-ES', flag: 'es', name: 'Español', Flag: ES },\n  fr: { full: 'fr-FR', flag: 'fr', name: 'Français', Flag: FR },\n  pl: { full: 'pl-PL', flag: 'pl', name: 'Polski', Flag: PL },\n  pt: { full: 'pt-PT', flag: 'pt', name: 'Português', Flag: PT },\n} as const\n\nexport const localesArray: LocaleWithKey[] = Object.entries(locales).map(([key, value]) => ({\n  ...value,\n  key: key as LocaleKey,\n}))\n\nexport interface I18NInitParams {\n  localeKey: LocaleKey\n}\n\nexport async function i18nInit({ localeKey }: I18NInitParams) {\n  // FIXME: make it an import if possible\n  // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n  Object.values(require('numbro/dist/languages.min.js')).forEach((l) =>\n    numbro.registerLanguage(l as numbro.NumbroLanguage),\n  )\n\n  await i18n.use(initReactI18next).init({\n    resources,\n    lng: 'en',\n    fallbackLng: 'en',\n    debug: process.env.DEV_ENABLE_I18N_DEBUG === '1',\n    keySeparator: false, // Disable dots as key separators as we use dots in keys\n    nsSeparator: false,\n\n    interpolation: {\n      escapeValue: false,\n      format<V, F, L>(value: V, format: F, lng: L) {\n        return value\n      },\n    },\n\n    react: {\n      useSuspense: true,\n    },\n  })\n\n  await changeLocale(localeKey)\n\n  return i18n\n}\n\nexport function getLocaleWithKey(key: LocaleKey) {\n  return { ...locales[key], key }\n}\n\nexport async function changeLocale(localeKey: LocaleKey) {\n  const locale = locales[localeKey]\n  moment.locale(localeKey)\n  numbro.setLanguage(locale.full)\n  return i18n.changeLanguage(localeKey)\n}\n\nexport { numbro }\n\nexport default i18n\n"]},"metadata":{},"sourceType":"module"}